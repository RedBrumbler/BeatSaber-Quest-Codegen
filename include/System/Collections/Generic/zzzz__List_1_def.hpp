#pragma once
#include "../../../cordl_internals/cordl_internals.hpp"
#include "beatsaber-hook/shared/utils/base-wrapper-type.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include <cmath>
#include <cstddef>
#include <cstdint>
namespace System {
class Array;
}
namespace System {
template<typename T>
class Action_1;
}
namespace System::Collections::Generic {
template<typename T>
class IReadOnlyList_1;
}
namespace System::Collections::Generic {
template<typename T>
class IReadOnlyCollection_1;
}
namespace System {
template<typename TInput,typename TOutput>
class Converter_2;
}
namespace System::Collections {
class IEnumerator;
}
namespace System {
template<typename T>
class Predicate_1;
}
namespace System::Collections::Generic {
template<typename T>
class IList_1;
}
namespace System::Collections::Generic {
template<typename T>
class IEnumerable_1;
}
namespace System::Collections {
class ICollection;
}
namespace System::Collections {
class IEnumerable;
}
namespace System::Collections::Generic {
template<typename T>
class ICollection_1;
}
namespace System::Collections::Generic {
template<typename T>
class IComparer_1;
}
namespace System::Collections::Generic {
template<typename T>
class IEnumerator_1;
}
namespace System::Collections {
class IList;
}
namespace System::Collections::ObjectModel {
template<typename T>
class ReadOnlyCollection_1;
}
namespace System {
template<typename T>
class Comparison_1;
}
namespace GlobalNamespace {
struct BezierCurve;
}
namespace GlobalNamespace {
struct FPSTimestamp;
}
namespace GlobalNamespace {
template<typename TKey,typename TValue>
struct GlobalNamespace__AsyncCachedLoader_2__ScheduledTask;
}
namespace GlobalNamespace {
struct GlobalNamespace__BeatLine__HighlightData;
}
namespace GlobalNamespace {
struct GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData;
}
namespace GlobalNamespace {
struct GlobalNamespace__MultiplierValuesRecorder__MultiplierValue;
}
namespace GlobalNamespace {
struct GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition;
}
namespace GlobalNamespace {
struct GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry;
}
namespace GlobalNamespace {
struct GlobalNamespace__OVRRaycaster__RaycastHit;
}
namespace GlobalNamespace {
struct GlobalNamespace__OVRSpatialAnchor__UnboundAnchor;
}
namespace GlobalNamespace {
struct GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit;
}
namespace GlobalNamespace {
struct GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog;
}
namespace GlobalNamespace {
struct GlobalNamespace__PlayerStatisticsViewController__StatsScopeData;
}
namespace GlobalNamespace {
struct GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair;
}
namespace GlobalNamespace {
struct GlobalNamespace__SynchronizedActionQueue__SynchronizedAction;
}
namespace GlobalNamespace {
struct OVRSpaceUser;
}
namespace GlobalNamespace {
struct UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher;
}
namespace HoudiniEngineUnity {
struct HAPI_GeoInfo;
}
namespace HoudiniEngineUnity {
struct HAPI_PartInfo;
}
namespace HoudiniEngineUnity {
struct TransformData;
}
namespace IntervalTree {
template<typename TKey,typename TValue>
struct RangeValuePair_2;
}
namespace MidiParser {
struct MidiEvent;
}
namespace Newtonsoft::Json {
struct JsonPosition;
}
namespace System {
template<typename T>
struct ArraySegment_1;
}
namespace System::Collections {
struct DictionaryEntry;
}
namespace System::Collections::Generic {
template<typename TKey,typename TValue>
struct KeyValuePair_2;
}
namespace UnityEngine::InputSystem::Utilities {
struct UnityEngine__InputSystem__Utilities__JsonParser__JsonValue;
}
namespace UnityEngine::ProBuilder {
struct Edge;
}
namespace UnityEngine {
struct PropertyName;
}
namespace System {
struct DateTime;
}
namespace System {
struct DateTimeOffset;
}
namespace System {
struct Decimal;
}
namespace System {
struct Guid;
}
namespace System {
struct Int32Enum;
}
namespace System::Security::Cryptography::X509Certificates {
struct X509ChainStatus;
}
namespace System::Text::RegularExpressions {
struct System__Text__RegularExpressions__RegexCharClass__SingleRange;
}
namespace System {
struct TimeSpan;
}
namespace System {
struct UInt16Enum;
}
namespace System {
template<typename T1,typename T2>
struct ValueTuple_2;
}
namespace UnityEngine {
struct Vector3;
}
namespace System {
template<typename T1,typename T2,typename T3>
struct ValueTuple_3;
}
namespace TMPro::SpriteAssetUtilities {
struct TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame;
}
namespace Tayx::Graphy {
struct Tayx__Graphy__GraphyDebugger__DebugCondition;
}
namespace UnityEngine::UIElements {
struct Vertex;
}
namespace Unity::Collections {
template<typename T>
struct NativeArray_1;
}
namespace UnityEngine {
struct AnimatorClipInfo;
}
namespace UnityEngine {
struct BoneWeight;
}
namespace UnityEngine {
struct Color32;
}
namespace UnityEngine {
struct Color;
}
namespace UnityEngine::EventSystems {
struct RaycastResult;
}
namespace UnityEngine::InputSystem::HID {
struct UnityEngine__InputSystem__HID__HIDParser__HIDReportData;
}
namespace UnityEngine::InputSystem::HID {
struct UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor;
}
namespace UnityEngine::InputSystem::HID {
struct UnityEngine__InputSystem__HID__HID__HIDElementDescriptor;
}
namespace UnityEngine::InputSystem {
struct InputBinding;
}
namespace UnityEngine::InputSystem::Layouts {
struct InputDeviceDescription;
}
namespace UnityEngine::InputSystem::Layouts {
struct UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem;
}
namespace UnityEngine::InputSystem::LowLevel {
struct InputEventPtr;
}
namespace UnityEngine::InputSystem::UI {
struct UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData;
}
namespace UnityEngine::InputSystem {
struct UnityEngine__InputSystem__InputActionMap__BindingOverrideJson;
}
namespace UnityEngine::InputSystem::Utilities {
struct InternedString;
}
namespace UnityEngine::InputSystem::Utilities {
struct NameAndParameters;
}
namespace UnityEngine::InputSystem::Utilities {
struct NamedValue;
}
namespace UnityEngine::InputSystem::Utilities {
struct Substring;
}
namespace UnityEngine::InputSystem::XR {
struct UsageHint;
}
namespace UnityEngine::InputSystem::XR {
struct XRFeatureDescriptor;
}
namespace UnityEngine {
struct Matrix4x4;
}
namespace UnityEngine::Playables {
struct Playable;
}
namespace UnityEngine::Playables {
struct PlayableBinding;
}
namespace UnityEngine::ProBuilder {
struct BezierPoint;
}
namespace UnityEngine::ProBuilder {
struct EdgeLookup;
}
namespace UnityEngine::ProBuilder {
template<typename T1,typename T2>
struct SimpleTuple_2;
}
namespace UnityEngine {
struct Vector2;
}
namespace UnityEngine::ProBuilder {
struct Triangle;
}
namespace UnityEngine {
struct Quaternion;
}
namespace UnityEngine {
struct RaycastHit2D;
}
namespace UnityEngine {
struct Rect;
}
namespace UnityEngine::Rendering {
struct SubMeshDescriptor;
}
namespace UnityEngine::Rendering {
struct VertexAttributeDescriptor;
}
namespace UnityEngine::ResourceManagement::AsyncOperations {
struct AsyncOperationHandle;
}
namespace UnityEngine::ResourceManagement::Diagnostics {
struct DiagnosticEvent;
}
namespace UnityEngine::ResourceManagement {
struct UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest;
}
namespace UnityEngine::ResourceManagement::Util {
struct ObjectInitializationData;
}
namespace UnityEngine::ResourceManagement::Util {
struct UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo;
}
namespace UnityEngine::SceneManagement {
struct Scene;
}
namespace UnityEngine::SpatialTracking {
struct UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData;
}
namespace UnityEngine::TextCore {
struct GlyphRect;
}
namespace UnityEngine::TextCore::LowLevel {
struct GlyphPairAdjustmentRecord;
}
namespace UnityEngine::TextCore::Text {
struct UnityEngine__TextCore__Text__TextSettings__FontReferenceMap;
}
namespace UnityEngine::Timeline {
struct IntervalTreeNode;
}
namespace UnityEngine::Timeline {
struct UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo;
}
namespace UnityEngine::Timeline {
template<typename T>
struct UnityEngine__Timeline__IntervalTree_1__Entry;
}
namespace UnityEngine::Timeline {
struct UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry;
}
namespace UnityEngine {
struct TreeInstance;
}
namespace UnityEngine {
struct UICharInfo;
}
namespace UnityEngine::UIElements {
struct ComputedTransitionProperty;
}
namespace UnityEngine::UIElements {
struct EasingFunction;
}
namespace UnityEngine::UIElements {
struct ManipulatorActivationFilter;
}
namespace UnityEngine::UIElements {
struct RuleMatcher;
}
namespace UnityEngine::UIElements {
struct StylePropertyName;
}
namespace UnityEngine::UIElements {
struct StyleSelectorPart;
}
namespace UnityEngine::UIElements::StyleSheets {
struct SelectorMatchRecord;
}
namespace UnityEngine::UIElements::StyleSheets {
struct StylePropertyValue;
}
namespace UnityEngine::UIElements::StyleSheets {
struct StyleValue;
}
namespace UnityEngine::UIElements::StyleSheets {
struct StyleValueManaged;
}
namespace UnityEngine::UIElements::StyleSheets::Syntax {
struct StyleSyntaxToken;
}
namespace UnityEngine::UIElements {
struct StyleVariable;
}
namespace UnityEngine::UIElements {
struct TimeValue;
}
namespace UnityEngine::UIElements::UIR::Implementation {
struct UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry;
}
namespace UnityEngine::UIElements::UIR {
struct RenderChainTextEntry;
}
namespace UnityEngine::UIElements::UIR {
struct UnityEngine__UIElements__UIR__BitmapAllocator32__Page;
}
namespace UnityEngine::UIElements::UIR {
struct UnityEngine__UIElements__UIR__RenderChain__RenderNodeData;
}
namespace UnityEngine::UIElements::UIR {
struct UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo;
}
namespace UnityEngine::UIElements::UIR {
struct UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree;
}
namespace UnityEngine::UIElements::UIR {
struct UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate;
}
namespace UnityEngine::UIElements {
struct UnityEngine__UIElements__FocusController__FocusedElement;
}
namespace UnityEngine::UIElements {
struct UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper;
}
namespace UnityEngine::UIElements {
struct UnityEngine__UIElements__TemplateAsset__AttributeOverride;
}
namespace UnityEngine::UIElements {
struct UnityEngine__UIElements__TextureRegistry__TextureInfo;
}
namespace UnityEngine::UIElements {
struct UnityEngine__UIElements__TreeView__TreeViewItemWrapper;
}
namespace UnityEngine::UIElements {
struct UnityEngine__UIElements__VisualTreeAsset__SlotDefinition;
}
namespace UnityEngine::UIElements {
struct UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry;
}
namespace UnityEngine::UIElements {
struct UnityEngine__UIElements__VisualTreeAsset__UsingEntry;
}
namespace UnityEngine {
struct UILineInfo;
}
namespace UnityEngine {
struct UIVertex;
}
namespace UnityEngine {
struct UnityEngine__BeforeRenderHelper__OrderBlock;
}
namespace UnityEngine {
struct UnityEngine__Camera__RenderRequest;
}
namespace UnityEngine {
struct UnityEngine__UnitySynchronizationContext__WorkRequest;
}
namespace UnityEngine {
struct Vector3Int;
}
namespace UnityEngine {
struct Vector4;
}
namespace UnityEngine::XR::OpenXR::Input {
struct UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding;
}
namespace UnityEngine::XR {
struct XRNodeState;
}
namespace VRUIControls {
struct VRUIControls__PhysicsRaycasterWithCache__CachedRaycast;
}
namespace VRUIControls {
struct VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult;
}
namespace Zenject {
struct BindingId;
}
namespace Zenject {
struct TypeValuePair;
}
namespace Zenject {
struct Zenject__DisposableManager__DisposableInfo;
}
namespace Zenject {
struct Zenject__DisposeBlock__SpawnedObjectPoolPair;
}
namespace Zenject {
struct Zenject__PoolableManager__PoolableInfo;
}
namespace System {
class IDisposable;
}
// Forward declare root types
namespace System::Collections::Generic {
template<typename T>
class List_1;
}
namespace System::Collections::Generic {
template<::cordl_internals::il2cpp_reference_type T>
class List_1<T>;
}
namespace System::Collections::Generic {
template<>
class List_1<GlobalNamespace::BezierCurve>;
}
namespace System::Collections::Generic {
template<>
class List_1<GlobalNamespace::FPSTimestamp>;
}
namespace System::Collections::Generic {
template<>
class List_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>;
}
namespace System::Collections::Generic {
template<>
class List_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData>;
}
namespace System::Collections::Generic {
template<>
class List_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>;
}
namespace System::Collections::Generic {
template<>
class List_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue>;
}
namespace System::Collections::Generic {
template<>
class List_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition>;
}
namespace System::Collections::Generic {
template<>
class List_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry>;
}
namespace System::Collections::Generic {
template<>
class List_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit>;
}
namespace System::Collections::Generic {
template<>
class List_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor>;
}
namespace System::Collections::Generic {
template<>
class List_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit>;
}
namespace System::Collections::Generic {
template<>
class List_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog>;
}
namespace System::Collections::Generic {
template<>
class List_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData>;
}
namespace System::Collections::Generic {
template<>
class List_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair>;
}
namespace System::Collections::Generic {
template<>
class List_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction>;
}
namespace System::Collections::Generic {
template<>
class List_1<GlobalNamespace::OVRSpaceUser>;
}
namespace System::Collections::Generic {
template<>
class List_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher>;
}
namespace System::Collections::Generic {
template<>
class List_1<HoudiniEngineUnity::HAPI_GeoInfo>;
}
namespace System::Collections::Generic {
template<>
class List_1<HoudiniEngineUnity::HAPI_PartInfo>;
}
namespace System::Collections::Generic {
template<>
class List_1<HoudiniEngineUnity::TransformData>;
}
namespace System::Collections::Generic {
template<>
class List_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>;
}
namespace System::Collections::Generic {
template<>
class List_1<MidiParser::MidiEvent>;
}
namespace System::Collections::Generic {
template<>
class List_1<Newtonsoft::Json::JsonPosition>;
}
namespace System::Collections::Generic {
template<>
class List_1<System::ArraySegment_1<uint8_t>>;
}
namespace System::Collections::Generic {
template<>
class List_1<System::Collections::DictionaryEntry>;
}
namespace System::Collections::Generic {
template<>
class List_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>;
}
namespace System::Collections::Generic {
template<>
class List_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>>;
}
namespace System::Collections::Generic {
template<>
class List_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>>;
}
namespace System::Collections::Generic {
template<>
class List_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>>;
}
namespace System::Collections::Generic {
template<>
class List_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>>;
}
namespace System::Collections::Generic {
template<>
class List_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>;
}
namespace System::Collections::Generic {
template<>
class List_1<System::DateTime>;
}
namespace System::Collections::Generic {
template<>
class List_1<System::DateTimeOffset>;
}
namespace System::Collections::Generic {
template<>
class List_1<System::Decimal>;
}
namespace System::Collections::Generic {
template<>
class List_1<System::Guid>;
}
namespace System::Collections::Generic {
template<>
class List_1<System::Int32Enum>;
}
namespace System::Collections::Generic {
template<>
class List_1<System::Security::Cryptography::X509Certificates::X509ChainStatus>;
}
namespace System::Collections::Generic {
template<>
class List_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange>;
}
namespace System::Collections::Generic {
template<>
class List_1<System::TimeSpan>;
}
namespace System::Collections::Generic {
template<>
class List_1<System::UInt16Enum>;
}
namespace System::Collections::Generic {
template<>
class List_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>;
}
namespace System::Collections::Generic {
template<>
class List_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>>;
}
namespace System::Collections::Generic {
template<>
class List_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>;
}
namespace System::Collections::Generic {
template<>
class List_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>>;
}
namespace System::Collections::Generic {
template<>
class List_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame>;
}
namespace System::Collections::Generic {
template<>
class List_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition>;
}
namespace System::Collections::Generic {
template<>
class List_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>>;
}
namespace System::Collections::Generic {
template<>
class List_1<Unity::Collections::NativeArray_1<uint16_t>>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::AnimatorClipInfo>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::BoneWeight>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::Color32>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::Color>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::EventSystems::RaycastResult>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::InputSystem::InputBinding>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::InputSystem::LowLevel::InputEventPtr>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::InputSystem::Utilities::InternedString>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::InputSystem::Utilities::NameAndParameters>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::InputSystem::Utilities::NamedValue>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::InputSystem::Utilities::Substring>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::InputSystem::XR::UsageHint>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::Matrix4x4>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::Playables::Playable>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::Playables::PlayableBinding>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::ProBuilder::BezierPoint>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::ProBuilder::Edge>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::ProBuilder::EdgeLookup>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::ProBuilder::Triangle>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::Quaternion>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::RaycastHit2D>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::Rect>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::Rendering::SubMeshDescriptor>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::Rendering::VertexAttributeDescriptor>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::SceneManagement::Scene>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::TextCore::GlyphRect>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::Timeline::IntervalTreeNode>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::TreeInstance>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::UICharInfo>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::UIElements::ComputedTransitionProperty>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::UIElements::EasingFunction>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::UIElements::ManipulatorActivationFilter>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::UIElements::RuleMatcher>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::UIElements::StylePropertyName>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::UIElements::StyleSelectorPart>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::UIElements::StyleSheets::StyleValue>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::UIElements::StyleVariable>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::UIElements::TimeValue>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::UIElements::UIR::RenderChainTextEntry>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::UILineInfo>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::UIVertex>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::UnityEngine__Camera__RenderRequest>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::Vector2>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::Vector3>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::Vector3Int>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::Vector4>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding>;
}
namespace System::Collections::Generic {
template<>
class List_1<UnityEngine::XR::XRNodeState>;
}
namespace System::Collections::Generic {
template<>
class List_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast>;
}
namespace System::Collections::Generic {
template<>
class List_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult>;
}
namespace System::Collections::Generic {
template<>
class List_1<Zenject::BindingId>;
}
namespace System::Collections::Generic {
template<>
class List_1<Zenject::TypeValuePair>;
}
namespace System::Collections::Generic {
template<>
class List_1<Zenject::Zenject__DisposableManager__DisposableInfo>;
}
namespace System::Collections::Generic {
template<>
class List_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair>;
}
namespace System::Collections::Generic {
template<>
class List_1<Zenject::Zenject__PoolableManager__PoolableInfo>;
}
namespace System::Collections::Generic {
template<>
class List_1<bool>;
}
namespace System::Collections::Generic {
template<>
class List_1<char16_t>;
}
namespace System::Collections::Generic {
template<>
class List_1<double_t>;
}
namespace System::Collections::Generic {
template<>
class List_1<float_t>;
}
namespace System::Collections::Generic {
template<>
class List_1<int16_t>;
}
namespace System::Collections::Generic {
template<>
class List_1<int32_t>;
}
namespace System::Collections::Generic {
template<>
class List_1<int64_t>;
}
namespace System::Collections::Generic {
template<>
class List_1<int8_t>;
}
namespace System::Collections::Generic {
template<>
class List_1<uint16_t>;
}
namespace System::Collections::Generic {
template<>
class List_1<uint32_t>;
}
namespace System::Collections::Generic {
template<>
class List_1<uint64_t>;
}
namespace System::Collections::Generic {
template<>
class List_1<uint8_t>;
}
namespace System::Collections::Generic {
template<typename T>
struct System__Collections__Generic__List_1__Enumerator;
}
namespace System::Collections::Generic {
template<::cordl_internals::il2cpp_reference_type T>
struct System__Collections__Generic__List_1__Enumerator<T>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<GlobalNamespace::BezierCurve>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<GlobalNamespace::FPSTimestamp>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<GlobalNamespace::OVRSpaceUser>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<HoudiniEngineUnity::HAPI_GeoInfo>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<HoudiniEngineUnity::HAPI_PartInfo>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<HoudiniEngineUnity::TransformData>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<MidiParser::MidiEvent>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<Newtonsoft::Json::JsonPosition>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<System::ArraySegment_1<uint8_t>>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<System::Collections::DictionaryEntry>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<System::DateTime>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<System::DateTimeOffset>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<System::Decimal>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<System::Guid>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<System::Int32Enum>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<System::Security::Cryptography::X509Certificates::X509ChainStatus>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<System::TimeSpan>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<System::UInt16Enum>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<Unity::Collections::NativeArray_1<uint16_t>>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::AnimatorClipInfo>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::BoneWeight>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::Color32>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::Color>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::EventSystems::RaycastResult>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::InputBinding>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::Layouts::InputDeviceDescription>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::LowLevel::InputEventPtr>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::Utilities::InternedString>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::Utilities::NameAndParameters>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::Utilities::NamedValue>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::Utilities::Substring>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::XR::UsageHint>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::XR::XRFeatureDescriptor>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::Matrix4x4>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::Playables::Playable>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::Playables::PlayableBinding>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::ProBuilder::BezierPoint>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::ProBuilder::Edge>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::ProBuilder::EdgeLookup>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::ProBuilder::Triangle>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::Quaternion>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::RaycastHit2D>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::Rect>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::Rendering::SubMeshDescriptor>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::Rendering::VertexAttributeDescriptor>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::ResourceManagement::Util::ObjectInitializationData>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::SceneManagement::Scene>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::TextCore::GlyphRect>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::Timeline::IntervalTreeNode>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::TreeInstance>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::UICharInfo>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::ComputedTransitionProperty>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::EasingFunction>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::ManipulatorActivationFilter>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::RuleMatcher>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::StylePropertyName>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::StyleSelectorPart>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::StyleSheets::StylePropertyValue>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::StyleSheets::StyleValue>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::StyleSheets::StyleValueManaged>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::StyleVariable>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::TimeValue>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UIR::RenderChainTextEntry>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::UILineInfo>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::UIVertex>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::UnityEngine__Camera__RenderRequest>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::Vector2>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::Vector3>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::Vector3Int>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::Vector4>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<UnityEngine::XR::XRNodeState>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<Zenject::BindingId>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<Zenject::TypeValuePair>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<Zenject::Zenject__DisposableManager__DisposableInfo>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<Zenject::Zenject__PoolableManager__PoolableInfo>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<bool>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<char16_t>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<double_t>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<float_t>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<int16_t>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<int32_t>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<int64_t>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<int8_t>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<uint16_t>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<uint32_t>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<uint64_t>;
}
namespace System::Collections::Generic {
template<>
struct System__Collections__Generic__List_1__Enumerator<uint8_t>;
}
// Type: ::Enumerator
// Type: System.Collections.Generic::List`1
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<::cordl_internals::il2cpp_reference_type T>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 2 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<T> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<T>
constexpr operator  System::Collections::Generic::IEnumerator_1<T>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<T>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "T", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<T> _list, int32_t _index, int32_t _version, T _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<T> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<T> value) ;

constexpr System::Collections::Generic::List_1<T> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 T __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(T value) ;

constexpr T __get__current() const;


// Properties

 T __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<T> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 T get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 92 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<int32_t> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<int32_t>
constexpr operator  System::Collections::Generic::IEnumerator_1<int32_t>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<int32_t>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "int32_t", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<int32_t> _list, int32_t _index, int32_t _version, int32_t _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<int32_t> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<int32_t> value) ;

constexpr System::Collections::Generic::List_1<int32_t> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 int32_t __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(int32_t value) ;

constexpr int32_t __get__current() const;


// Properties

 int32_t __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<int32_t> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 99 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<bool> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<bool>
constexpr operator  System::Collections::Generic::IEnumerator_1<bool>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<bool>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "bool", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<bool> _list, int32_t _index, int32_t _version, bool _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<bool> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<bool> value) ;

constexpr System::Collections::Generic::List_1<bool> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 bool __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(bool value) ;

constexpr bool __get__current() const;


// Properties

 bool __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<bool> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 bool get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 265 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> _list, int32_t _index, int32_t _version, UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle value) ;

constexpr UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle __get__current() const;


// Properties

 UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 279 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<char16_t> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<char16_t>
constexpr operator  System::Collections::Generic::IEnumerator_1<char16_t>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<char16_t>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "char16_t", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<char16_t> _list, int32_t _index, int32_t _version, char16_t _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<char16_t> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<char16_t> value) ;

constexpr System::Collections::Generic::List_1<char16_t> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 char16_t __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(char16_t value) ;

constexpr char16_t __get__current() const;


// Properties

 char16_t __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<char16_t> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 char16_t get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 280 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::Color> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::Color>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::Color>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::Color>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::Color", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::Color> _list, int32_t _index, int32_t _version, UnityEngine::Color _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::Color> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::Color> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::Color> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::Color __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::Color value) ;

constexpr UnityEngine::Color __get__current() const;


// Properties

 UnityEngine::Color __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::Color> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Color get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 289 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> _list, int32_t _index, int32_t _version, UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent value) ;

constexpr UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent __get__current() const;


// Properties

 UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 315 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::LowLevel::InputEventPtr> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::LowLevel::InputEventPtr>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::LowLevel::InputEventPtr>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::InputSystem::LowLevel::InputEventPtr>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::InputSystem::LowLevel::InputEventPtr", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::InputSystem::LowLevel::InputEventPtr> _list, int32_t _index, int32_t _version, UnityEngine::InputSystem::LowLevel::InputEventPtr _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::InputSystem::LowLevel::InputEventPtr> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::InputSystem::LowLevel::InputEventPtr> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::InputSystem::LowLevel::InputEventPtr> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::InputSystem::LowLevel::InputEventPtr __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::InputSystem::LowLevel::InputEventPtr value) ;

constexpr UnityEngine::InputSystem::LowLevel::InputEventPtr __get__current() const;


// Properties

 UnityEngine::InputSystem::LowLevel::InputEventPtr __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::InputSystem::LowLevel::InputEventPtr> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::LowLevel::InputEventPtr get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 374 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<float_t> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<float_t>
constexpr operator  System::Collections::Generic::IEnumerator_1<float_t>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<float_t>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "float_t", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<float_t> _list, int32_t _index, int32_t _version, float_t _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<float_t> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<float_t> value) ;

constexpr System::Collections::Generic::List_1<float_t> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 float_t __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(float_t value) ;

constexpr float_t __get__current() const;


// Properties

 float_t __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<float_t> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 float_t get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 389 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<uint64_t> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<uint64_t>
constexpr operator  System::Collections::Generic::IEnumerator_1<uint64_t>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<uint64_t>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "uint64_t", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<uint64_t> _list, int32_t _index, int32_t _version, uint64_t _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<uint64_t> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<uint64_t> value) ;

constexpr System::Collections::Generic::List_1<uint64_t> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 uint64_t __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(uint64_t value) ;

constexpr uint64_t __get__current() const;


// Properties

 uint64_t __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<uint64_t> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 uint64_t get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 393 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::Vector2> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::Vector2>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::Vector2>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::Vector2>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::Vector2", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::Vector2> _list, int32_t _index, int32_t _version, UnityEngine::Vector2 _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::Vector2> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::Vector2> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::Vector2> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::Vector2 __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::Vector2 value) ;

constexpr UnityEngine::Vector2 __get__current() const;


// Properties

 UnityEngine::Vector2 __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::Vector2> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Vector2 get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 394 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::Vector3> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::Vector3>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::Vector3>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::Vector3>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::Vector3", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::Vector3> _list, int32_t _index, int32_t _version, UnityEngine::Vector3 _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::Vector3> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::Vector3> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::Vector3> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::Vector3 __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::Vector3 value) ;

constexpr UnityEngine::Vector3 __get__current() const;


// Properties

 UnityEngine::Vector3 __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::Vector3> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Vector3 get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 399 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::XR::XRNodeState> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::XR::XRNodeState>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::XR::XRNodeState>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::XR::XRNodeState>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::XR::XRNodeState", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::XR::XRNodeState> _list, int32_t _index, int32_t _version, UnityEngine::XR::XRNodeState _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::XR::XRNodeState> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::XR::XRNodeState> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::XR::XRNodeState> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::XR::XRNodeState __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::XR::XRNodeState value) ;

constexpr UnityEngine::XR::XRNodeState __get__current() const;


// Properties

 UnityEngine::XR::XRNodeState __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::XR::XRNodeState> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::XR::XRNodeState get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 716 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::BoneWeight> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::BoneWeight>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::BoneWeight>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::BoneWeight>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::BoneWeight", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::BoneWeight> _list, int32_t _index, int32_t _version, UnityEngine::BoneWeight _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::BoneWeight> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::BoneWeight> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::BoneWeight> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::BoneWeight __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::BoneWeight value) ;

constexpr UnityEngine::BoneWeight __get__current() const;


// Properties

 UnityEngine::BoneWeight __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::BoneWeight> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::BoneWeight get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 718 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<uint8_t> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<uint8_t>
constexpr operator  System::Collections::Generic::IEnumerator_1<uint8_t>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<uint8_t>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "uint8_t", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<uint8_t> _list, int32_t _index, int32_t _version, uint8_t _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<uint8_t> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<uint8_t> value) ;

constexpr System::Collections::Generic::List_1<uint8_t> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 uint8_t __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(uint8_t value) ;

constexpr uint8_t __get__current() const;


// Properties

 uint8_t __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<uint8_t> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 uint8_t get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 719 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::Color32> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::Color32>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::Color32>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::Color32>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::Color32", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::Color32> _list, int32_t _index, int32_t _version, UnityEngine::Color32 _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::Color32> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::Color32> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::Color32> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::Color32 __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::Color32 value) ;

constexpr UnityEngine::Color32 __get__current() const;


// Properties

 UnityEngine::Color32 __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::Color32> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Color32 get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 722 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<int16_t> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<int16_t>
constexpr operator  System::Collections::Generic::IEnumerator_1<int16_t>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<int16_t>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "int16_t", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<int16_t> _list, int32_t _index, int32_t _version, int16_t _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<int16_t> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<int16_t> value) ;

constexpr System::Collections::Generic::List_1<int16_t> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 int16_t __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(int16_t value) ;

constexpr int16_t __get__current() const;


// Properties

 int16_t __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<int16_t> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 int16_t get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 729 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<uint16_t> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<uint16_t>
constexpr operator  System::Collections::Generic::IEnumerator_1<uint16_t>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<uint16_t>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "uint16_t", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<uint16_t> _list, int32_t _index, int32_t _version, uint16_t _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<uint16_t> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<uint16_t> value) ;

constexpr System::Collections::Generic::List_1<uint16_t> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 uint16_t __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(uint16_t value) ;

constexpr uint16_t __get__current() const;


// Properties

 uint16_t __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<uint16_t> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 uint16_t get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 730 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<uint32_t> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<uint32_t>
constexpr operator  System::Collections::Generic::IEnumerator_1<uint32_t>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<uint32_t>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "uint32_t", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<uint32_t> _list, int32_t _index, int32_t _version, uint32_t _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<uint32_t> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<uint32_t> value) ;

constexpr System::Collections::Generic::List_1<uint32_t> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 uint32_t __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(uint32_t value) ;

constexpr uint32_t __get__current() const;


// Properties

 uint32_t __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<uint32_t> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 uint32_t get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 731 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::Vector3Int> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::Vector3Int>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::Vector3Int>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::Vector3Int>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::Vector3Int", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::Vector3Int> _list, int32_t _index, int32_t _version, UnityEngine::Vector3Int _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::Vector3Int> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::Vector3Int> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::Vector3Int> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::Vector3Int __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::Vector3Int value) ;

constexpr UnityEngine::Vector3Int __get__current() const;


// Properties

 UnityEngine::Vector3Int __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::Vector3Int> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Vector3Int get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 732 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::Vector4> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::Vector4>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::Vector4>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::Vector4>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::Vector4", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::Vector4> _list, int32_t _index, int32_t _version, UnityEngine::Vector4 _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::Vector4> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::Vector4> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::Vector4> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::Vector4 __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::Vector4 value) ;

constexpr UnityEngine::Vector4 __get__current() const;


// Properties

 UnityEngine::Vector4 __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::Vector4> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Vector4 get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 734 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::Rendering::VertexAttributeDescriptor> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::Rendering::VertexAttributeDescriptor>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::Rendering::VertexAttributeDescriptor>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::Rendering::VertexAttributeDescriptor>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::Rendering::VertexAttributeDescriptor", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::Rendering::VertexAttributeDescriptor> _list, int32_t _index, int32_t _version, UnityEngine::Rendering::VertexAttributeDescriptor _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::Rendering::VertexAttributeDescriptor> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::Rendering::VertexAttributeDescriptor> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::Rendering::VertexAttributeDescriptor> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::Rendering::VertexAttributeDescriptor __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::Rendering::VertexAttributeDescriptor value) ;

constexpr UnityEngine::Rendering::VertexAttributeDescriptor __get__current() const;


// Properties

 UnityEngine::Rendering::VertexAttributeDescriptor __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::Rendering::VertexAttributeDescriptor> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Rendering::VertexAttributeDescriptor get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 831 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<int64_t> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<int64_t>
constexpr operator  System::Collections::Generic::IEnumerator_1<int64_t>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<int64_t>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "int64_t", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<int64_t> _list, int32_t _index, int32_t _version, int64_t _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<int64_t> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<int64_t> value) ;

constexpr System::Collections::Generic::List_1<int64_t> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 int64_t __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(int64_t value) ;

constexpr int64_t __get__current() const;


// Properties

 int64_t __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<int64_t> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 int64_t get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 1007 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> _list, int32_t _index, int32_t _version, UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t> _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t> __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t> value) ;

constexpr UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t> __get__current() const;


// Properties

 UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t> __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 1008 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> _list, int32_t _index, int32_t _version, UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2> _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2> __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2> value) ;

constexpr UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2> __get__current() const;


// Properties

 UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2> __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 1015 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<GlobalNamespace::OVRSpaceUser> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<GlobalNamespace::OVRSpaceUser>
constexpr operator  System::Collections::Generic::IEnumerator_1<GlobalNamespace::OVRSpaceUser>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<GlobalNamespace::OVRSpaceUser>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "GlobalNamespace::OVRSpaceUser", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<GlobalNamespace::OVRSpaceUser> _list, int32_t _index, int32_t _version, GlobalNamespace::OVRSpaceUser _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<GlobalNamespace::OVRSpaceUser> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<GlobalNamespace::OVRSpaceUser> value) ;

constexpr System::Collections::Generic::List_1<GlobalNamespace::OVRSpaceUser> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 GlobalNamespace::OVRSpaceUser __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(GlobalNamespace::OVRSpaceUser value) ;

constexpr GlobalNamespace::OVRSpaceUser __get__current() const;


// Properties

 GlobalNamespace::OVRSpaceUser __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<GlobalNamespace::OVRSpaceUser> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::OVRSpaceUser get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 1017 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::EventSystems::RaycastResult> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::EventSystems::RaycastResult>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::EventSystems::RaycastResult>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::EventSystems::RaycastResult>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::EventSystems::RaycastResult", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::EventSystems::RaycastResult> _list, int32_t _index, int32_t _version, UnityEngine::EventSystems::RaycastResult _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::EventSystems::RaycastResult> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::EventSystems::RaycastResult> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::EventSystems::RaycastResult> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::EventSystems::RaycastResult __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::EventSystems::RaycastResult value) ;

constexpr UnityEngine::EventSystems::RaycastResult __get__current() const;


// Properties

 UnityEngine::EventSystems::RaycastResult __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::EventSystems::RaycastResult> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::EventSystems::RaycastResult get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 1018 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::UIElements::StyleSheets::SelectorMatchRecord", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> _list, int32_t _index, int32_t _version, UnityEngine::UIElements::StyleSheets::SelectorMatchRecord _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::UIElements::StyleSheets::SelectorMatchRecord __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::UIElements::StyleSheets::SelectorMatchRecord value) ;

constexpr UnityEngine::UIElements::StyleSheets::SelectorMatchRecord __get__current() const;


// Properties

 UnityEngine::UIElements::StyleSheets::SelectorMatchRecord __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::StyleSheets::SelectorMatchRecord get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 1021 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit>
constexpr operator  System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> _list, int32_t _index, int32_t _version, GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> value) ;

constexpr System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit value) ;

constexpr GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit __get__current() const;


// Properties

 GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 1022 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> _list, int32_t _index, int32_t _version, UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry value) ;

constexpr UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry __get__current() const;


// Properties

 UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 1024 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> _list, int32_t _index, int32_t _version, UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData value) ;

constexpr UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData __get__current() const;


// Properties

 UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 1025 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult>
constexpr operator  System::Collections::Generic::IEnumerator_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> _list, int32_t _index, int32_t _version, VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> value) ;

constexpr System::Collections::Generic::List_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult value) ;

constexpr VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult __get__current() const;


// Properties

 VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 1613 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::StylePropertyName> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::StylePropertyName>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::StylePropertyName>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::UIElements::StylePropertyName>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::UIElements::StylePropertyName", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::UIElements::StylePropertyName> _list, int32_t _index, int32_t _version, UnityEngine::UIElements::StylePropertyName _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::UIElements::StylePropertyName> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::UIElements::StylePropertyName> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::UIElements::StylePropertyName> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::UIElements::StylePropertyName __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::UIElements::StylePropertyName value) ;

constexpr UnityEngine::UIElements::StylePropertyName __get__current() const;


// Properties

 UnityEngine::UIElements::StylePropertyName __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::UIElements::StylePropertyName> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::StylePropertyName get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 1618 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> _list, int32_t _index, int32_t _version, UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry value) ;

constexpr UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry __get__current() const;


// Properties

 UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 2495 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::ProBuilder::Edge> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::ProBuilder::Edge>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::ProBuilder::Edge>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::ProBuilder::Edge>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::ProBuilder::Edge", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::ProBuilder::Edge> _list, int32_t _index, int32_t _version, UnityEngine::ProBuilder::Edge _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::ProBuilder::Edge> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::ProBuilder::Edge> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::ProBuilder::Edge> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::ProBuilder::Edge __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::ProBuilder::Edge value) ;

constexpr UnityEngine::ProBuilder::Edge __get__current() const;


// Properties

 UnityEngine::ProBuilder::Edge __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::ProBuilder::Edge> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ProBuilder::Edge get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 2496 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::ProBuilder::EdgeLookup> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::ProBuilder::EdgeLookup>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::ProBuilder::EdgeLookup>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::ProBuilder::EdgeLookup>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::ProBuilder::EdgeLookup", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::ProBuilder::EdgeLookup> _list, int32_t _index, int32_t _version, UnityEngine::ProBuilder::EdgeLookup _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::ProBuilder::EdgeLookup> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::ProBuilder::EdgeLookup> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::ProBuilder::EdgeLookup> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::ProBuilder::EdgeLookup __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::ProBuilder::EdgeLookup value) ;

constexpr UnityEngine::ProBuilder::EdgeLookup __get__current() const;


// Properties

 UnityEngine::ProBuilder::EdgeLookup __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::ProBuilder::EdgeLookup> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ProBuilder::EdgeLookup get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 2498 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<System::Guid> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<System::Guid>
constexpr operator  System::Collections::Generic::IEnumerator_1<System::Guid>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<System::Guid>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "System::Guid", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<System::Guid> _list, int32_t _index, int32_t _version, System::Guid _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<System::Guid> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<System::Guid> value) ;

constexpr System::Collections::Generic::List_1<System::Guid> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 System::Guid __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(System::Guid value) ;

constexpr System::Guid __get__current() const;


// Properties

 System::Guid __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<System::Guid> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Guid get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 2502 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::Utilities::InternedString> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::Utilities::InternedString>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::Utilities::InternedString>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::InternedString>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::InputSystem::Utilities::InternedString", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::InternedString> _list, int32_t _index, int32_t _version, UnityEngine::InputSystem::Utilities::InternedString _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::InternedString> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::InternedString> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::InternedString> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::InputSystem::Utilities::InternedString __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::InputSystem::Utilities::InternedString value) ;

constexpr UnityEngine::InputSystem::Utilities::InternedString __get__current() const;


// Properties

 UnityEngine::InputSystem::Utilities::InternedString __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::InternedString> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::Utilities::InternedString get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 2599 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<System::DateTime> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<System::DateTime>
constexpr operator  System::Collections::Generic::IEnumerator_1<System::DateTime>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<System::DateTime>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "System::DateTime", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<System::DateTime> _list, int32_t _index, int32_t _version, System::DateTime _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<System::DateTime> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<System::DateTime> value) ;

constexpr System::Collections::Generic::List_1<System::DateTime> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 System::DateTime __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(System::DateTime value) ;

constexpr System::DateTime __get__current() const;


// Properties

 System::DateTime __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<System::DateTime> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 System::DateTime get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 2600 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<System::DateTimeOffset> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<System::DateTimeOffset>
constexpr operator  System::Collections::Generic::IEnumerator_1<System::DateTimeOffset>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<System::DateTimeOffset>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "System::DateTimeOffset", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<System::DateTimeOffset> _list, int32_t _index, int32_t _version, System::DateTimeOffset _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<System::DateTimeOffset> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<System::DateTimeOffset> value) ;

constexpr System::Collections::Generic::List_1<System::DateTimeOffset> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 System::DateTimeOffset __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(System::DateTimeOffset value) ;

constexpr System::DateTimeOffset __get__current() const;


// Properties

 System::DateTimeOffset __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<System::DateTimeOffset> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 System::DateTimeOffset get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 2601 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<System::Decimal> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<System::Decimal>
constexpr operator  System::Collections::Generic::IEnumerator_1<System::Decimal>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<System::Decimal>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "System::Decimal", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<System::Decimal> _list, int32_t _index, int32_t _version, System::Decimal _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<System::Decimal> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<System::Decimal> value) ;

constexpr System::Collections::Generic::List_1<System::Decimal> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 System::Decimal __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(System::Decimal value) ;

constexpr System::Decimal __get__current() const;


// Properties

 System::Decimal __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<System::Decimal> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Decimal get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 2602 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<double_t> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<double_t>
constexpr operator  System::Collections::Generic::IEnumerator_1<double_t>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<double_t>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "double_t", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<double_t> _list, int32_t _index, int32_t _version, double_t _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<double_t> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<double_t> value) ;

constexpr System::Collections::Generic::List_1<double_t> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 double_t __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(double_t value) ;

constexpr double_t __get__current() const;


// Properties

 double_t __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<double_t> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 double_t get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 2605 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<int8_t> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<int8_t>
constexpr operator  System::Collections::Generic::IEnumerator_1<int8_t>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<int8_t>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "int8_t", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<int8_t> _list, int32_t _index, int32_t _version, int8_t _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<int8_t> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<int8_t> value) ;

constexpr System::Collections::Generic::List_1<int8_t> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 int8_t __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(int8_t value) ;

constexpr int8_t __get__current() const;


// Properties

 int8_t __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<int8_t> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 int8_t get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 2608 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::Utilities::Substring> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::Utilities::Substring>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::Utilities::Substring>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::Substring>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::InputSystem::Utilities::Substring", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::Substring> _list, int32_t _index, int32_t _version, UnityEngine::InputSystem::Utilities::Substring _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::Substring> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::Substring> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::Substring> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::InputSystem::Utilities::Substring __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::InputSystem::Utilities::Substring value) ;

constexpr UnityEngine::InputSystem::Utilities::Substring __get__current() const;


// Properties

 UnityEngine::InputSystem::Utilities::Substring __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::Substring> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::Utilities::Substring get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 2609 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<System::TimeSpan> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<System::TimeSpan>
constexpr operator  System::Collections::Generic::IEnumerator_1<System::TimeSpan>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<System::TimeSpan>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "System::TimeSpan", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<System::TimeSpan> _list, int32_t _index, int32_t _version, System::TimeSpan _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<System::TimeSpan> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<System::TimeSpan> value) ;

constexpr System::Collections::Generic::List_1<System::TimeSpan> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 System::TimeSpan __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(System::TimeSpan value) ;

constexpr System::TimeSpan __get__current() const;


// Properties

 System::TimeSpan __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<System::TimeSpan> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 System::TimeSpan get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 2636 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange>
constexpr operator  System::Collections::Generic::IEnumerator_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> _list, int32_t _index, int32_t _version, System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> value) ;

constexpr System::Collections::Generic::List_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange value) ;

constexpr System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange __get__current() const;


// Properties

 System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 2955 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>
constexpr operator  System::Collections::Generic::IEnumerator_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> _list, int32_t _index, int32_t _version, System::Collections::Generic::KeyValuePair_2<int32_t,int32_t> _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> value) ;

constexpr System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 System::Collections::Generic::KeyValuePair_2<int32_t,int32_t> __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(System::Collections::Generic::KeyValuePair_2<int32_t,int32_t> value) ;

constexpr System::Collections::Generic::KeyValuePair_2<int32_t,int32_t> __get__current() const;


// Properties

 System::Collections::Generic::KeyValuePair_2<int32_t,int32_t> __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::KeyValuePair_2<int32_t,int32_t> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 2956 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IEnumerator_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> _list, int32_t _index, int32_t _version, System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> value) ;

constexpr System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

constexpr System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> __get__current() const;


// Properties

 System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 2977 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<Zenject::BindingId> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<Zenject::BindingId>
constexpr operator  System::Collections::Generic::IEnumerator_1<Zenject::BindingId>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<Zenject::BindingId>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "Zenject::BindingId", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<Zenject::BindingId> _list, int32_t _index, int32_t _version, Zenject::BindingId _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<Zenject::BindingId> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<Zenject::BindingId> value) ;

constexpr System::Collections::Generic::List_1<Zenject::BindingId> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 Zenject::BindingId __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(Zenject::BindingId value) ;

constexpr Zenject::BindingId __get__current() const;


// Properties

 Zenject::BindingId __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<Zenject::BindingId> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 Zenject::BindingId get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 3000 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::InputBinding> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::InputBinding>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::InputBinding>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::InputSystem::InputBinding>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::InputSystem::InputBinding", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::InputSystem::InputBinding> _list, int32_t _index, int32_t _version, UnityEngine::InputSystem::InputBinding _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::InputSystem::InputBinding> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::InputSystem::InputBinding> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::InputSystem::InputBinding> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::InputSystem::InputBinding __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::InputSystem::InputBinding value) ;

constexpr UnityEngine::InputSystem::InputBinding __get__current() const;


// Properties

 UnityEngine::InputSystem::InputBinding __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::InputSystem::InputBinding> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::InputBinding get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 3008 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::Utilities::NameAndParameters> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::Utilities::NameAndParameters>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::Utilities::NameAndParameters>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::NameAndParameters>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::InputSystem::Utilities::NameAndParameters", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::NameAndParameters> _list, int32_t _index, int32_t _version, UnityEngine::InputSystem::Utilities::NameAndParameters _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::NameAndParameters> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::NameAndParameters> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::NameAndParameters> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::InputSystem::Utilities::NameAndParameters __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::InputSystem::Utilities::NameAndParameters value) ;

constexpr UnityEngine::InputSystem::Utilities::NameAndParameters __get__current() const;


// Properties

 UnityEngine::InputSystem::Utilities::NameAndParameters __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::NameAndParameters> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::Utilities::NameAndParameters get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 3009 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::Utilities::NamedValue> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::Utilities::NamedValue>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::Utilities::NamedValue>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::NamedValue>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::InputSystem::Utilities::NamedValue", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::NamedValue> _list, int32_t _index, int32_t _version, UnityEngine::InputSystem::Utilities::NamedValue _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::NamedValue> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::NamedValue> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::NamedValue> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::InputSystem::Utilities::NamedValue __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::InputSystem::Utilities::NamedValue value) ;

constexpr UnityEngine::InputSystem::Utilities::NamedValue __get__current() const;


// Properties

 UnityEngine::InputSystem::Utilities::NamedValue __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::NamedValue> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::Utilities::NamedValue get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 3011 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::Playables::PlayableBinding> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::Playables::PlayableBinding>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::Playables::PlayableBinding", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::Playables::PlayableBinding> _list, int32_t _index, int32_t _version, UnityEngine::Playables::PlayableBinding _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::Playables::PlayableBinding> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::Playables::PlayableBinding> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::Playables::PlayableBinding> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::Playables::PlayableBinding __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::Playables::PlayableBinding value) ;

constexpr UnityEngine::Playables::PlayableBinding __get__current() const;


// Properties

 UnityEngine::Playables::PlayableBinding __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::Playables::PlayableBinding> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Playables::PlayableBinding get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 3016 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::SceneManagement::Scene> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::SceneManagement::Scene>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::SceneManagement::Scene>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::SceneManagement::Scene>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::SceneManagement::Scene", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::SceneManagement::Scene> _list, int32_t _index, int32_t _version, UnityEngine::SceneManagement::Scene _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::SceneManagement::Scene> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::SceneManagement::Scene> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::SceneManagement::Scene> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::SceneManagement::Scene __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::SceneManagement::Scene value) ;

constexpr UnityEngine::SceneManagement::Scene __get__current() const;


// Properties

 UnityEngine::SceneManagement::Scene __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::SceneManagement::Scene> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::SceneManagement::Scene get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 3026 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<Zenject::TypeValuePair> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<Zenject::TypeValuePair>
constexpr operator  System::Collections::Generic::IEnumerator_1<Zenject::TypeValuePair>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<Zenject::TypeValuePair>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "Zenject::TypeValuePair", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<Zenject::TypeValuePair> _list, int32_t _index, int32_t _version, Zenject::TypeValuePair _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<Zenject::TypeValuePair> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<Zenject::TypeValuePair> value) ;

constexpr System::Collections::Generic::List_1<Zenject::TypeValuePair> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 Zenject::TypeValuePair __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(Zenject::TypeValuePair value) ;

constexpr Zenject::TypeValuePair __get__current() const;


// Properties

 Zenject::TypeValuePair __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<Zenject::TypeValuePair> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 Zenject::TypeValuePair get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 3176 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::EasingFunction> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::EasingFunction>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::EasingFunction>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::UIElements::EasingFunction>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::UIElements::EasingFunction", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::UIElements::EasingFunction> _list, int32_t _index, int32_t _version, UnityEngine::UIElements::EasingFunction _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::UIElements::EasingFunction> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::UIElements::EasingFunction> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::UIElements::EasingFunction> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::UIElements::EasingFunction __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::UIElements::EasingFunction value) ;

constexpr UnityEngine::UIElements::EasingFunction __get__current() const;


// Properties

 UnityEngine::UIElements::EasingFunction __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::UIElements::EasingFunction> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::EasingFunction get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 3184 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> _list, int32_t _index, int32_t _version, UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord value) ;

constexpr UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord __get__current() const;


// Properties

 UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 3185 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::TextCore::GlyphRect> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::TextCore::GlyphRect>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::TextCore::GlyphRect>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::TextCore::GlyphRect", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect> _list, int32_t _index, int32_t _version, UnityEngine::TextCore::GlyphRect _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::TextCore::GlyphRect __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::TextCore::GlyphRect value) ;

constexpr UnityEngine::TextCore::GlyphRect __get__current() const;


// Properties

 UnityEngine::TextCore::GlyphRect __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::TextCore::GlyphRect get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 3195 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::Layouts::InputDeviceDescription> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::InputSystem::Layouts::InputDeviceDescription", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription> _list, int32_t _index, int32_t _version, UnityEngine::InputSystem::Layouts::InputDeviceDescription _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::InputSystem::Layouts::InputDeviceDescription __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::InputSystem::Layouts::InputDeviceDescription value) ;

constexpr UnityEngine::InputSystem::Layouts::InputDeviceDescription __get__current() const;


// Properties

 UnityEngine::InputSystem::Layouts::InputDeviceDescription __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::Layouts::InputDeviceDescription get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 3207 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::ManipulatorActivationFilter> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::ManipulatorActivationFilter>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::ManipulatorActivationFilter>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::UIElements::ManipulatorActivationFilter>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::UIElements::ManipulatorActivationFilter", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::UIElements::ManipulatorActivationFilter> _list, int32_t _index, int32_t _version, UnityEngine::UIElements::ManipulatorActivationFilter _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::UIElements::ManipulatorActivationFilter> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::UIElements::ManipulatorActivationFilter> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::UIElements::ManipulatorActivationFilter> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::UIElements::ManipulatorActivationFilter __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::UIElements::ManipulatorActivationFilter value) ;

constexpr UnityEngine::UIElements::ManipulatorActivationFilter __get__current() const;


// Properties

 UnityEngine::UIElements::ManipulatorActivationFilter __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::UIElements::ManipulatorActivationFilter> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::ManipulatorActivationFilter get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 3209 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::Matrix4x4> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::Matrix4x4>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::Matrix4x4>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::Matrix4x4>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::Matrix4x4", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::Matrix4x4> _list, int32_t _index, int32_t _version, UnityEngine::Matrix4x4 _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::Matrix4x4> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::Matrix4x4> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::Matrix4x4> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::Matrix4x4 __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::Matrix4x4 value) ;

constexpr UnityEngine::Matrix4x4 __get__current() const;


// Properties

 UnityEngine::Matrix4x4 __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::Matrix4x4> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Matrix4x4 get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 3217 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::Playables::Playable> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::Playable>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::Playable>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::Playables::Playable>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::Playables::Playable", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::Playables::Playable> _list, int32_t _index, int32_t _version, UnityEngine::Playables::Playable _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::Playables::Playable> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::Playables::Playable> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::Playables::Playable> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::Playables::Playable __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::Playables::Playable value) ;

constexpr UnityEngine::Playables::Playable __get__current() const;


// Properties

 UnityEngine::Playables::Playable __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::Playables::Playable> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Playables::Playable get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 3226 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::Quaternion> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::Quaternion>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::Quaternion>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::Quaternion>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::Quaternion", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::Quaternion> _list, int32_t _index, int32_t _version, UnityEngine::Quaternion _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::Quaternion> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::Quaternion> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::Quaternion> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::Quaternion __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::Quaternion value) ;

constexpr UnityEngine::Quaternion __get__current() const;


// Properties

 UnityEngine::Quaternion __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::Quaternion> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Quaternion get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 3229 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::Rect> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::Rect>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::Rect>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::Rect>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::Rect", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::Rect> _list, int32_t _index, int32_t _version, UnityEngine::Rect _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::Rect> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::Rect> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::Rect> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::Rect __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::Rect value) ;

constexpr UnityEngine::Rect __get__current() const;


// Properties

 UnityEngine::Rect __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::Rect> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Rect get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 3252 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::TimeValue> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::TimeValue>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::TimeValue>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::UIElements::TimeValue>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::UIElements::TimeValue", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::UIElements::TimeValue> _list, int32_t _index, int32_t _version, UnityEngine::UIElements::TimeValue _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::UIElements::TimeValue> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::UIElements::TimeValue> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::UIElements::TimeValue> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::UIElements::TimeValue __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::UIElements::TimeValue value) ;

constexpr UnityEngine::UIElements::TimeValue __get__current() const;


// Properties

 UnityEngine::UIElements::TimeValue __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::UIElements::TimeValue> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::TimeValue get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 3256 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::ProBuilder::Triangle> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::ProBuilder::Triangle>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::ProBuilder::Triangle>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::ProBuilder::Triangle>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::ProBuilder::Triangle", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::ProBuilder::Triangle> _list, int32_t _index, int32_t _version, UnityEngine::ProBuilder::Triangle _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::ProBuilder::Triangle> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::ProBuilder::Triangle> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::ProBuilder::Triangle> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::ProBuilder::Triangle __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::ProBuilder::Triangle value) ;

constexpr UnityEngine::ProBuilder::Triangle __get__current() const;


// Properties

 UnityEngine::ProBuilder::Triangle __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::ProBuilder::Triangle> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ProBuilder::Triangle get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 3270 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> _list, int32_t _index, int32_t _version, UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue value) ;

constexpr UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue __get__current() const;


// Properties

 UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 3470 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<System::ArraySegment_1<uint8_t>> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<System::ArraySegment_1<uint8_t>>
constexpr operator  System::Collections::Generic::IEnumerator_1<System::ArraySegment_1<uint8_t>>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<System::ArraySegment_1<uint8_t>>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "System::ArraySegment_1<uint8_t>", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<System::ArraySegment_1<uint8_t>> _list, int32_t _index, int32_t _version, System::ArraySegment_1<uint8_t> _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<System::ArraySegment_1<uint8_t>> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<System::ArraySegment_1<uint8_t>> value) ;

constexpr System::Collections::Generic::List_1<System::ArraySegment_1<uint8_t>> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 System::ArraySegment_1<uint8_t> __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(System::ArraySegment_1<uint8_t> value) ;

constexpr System::ArraySegment_1<uint8_t> __get__current() const;


// Properties

 System::ArraySegment_1<uint8_t> __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<System::ArraySegment_1<uint8_t>> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 System::ArraySegment_1<uint8_t> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 3482 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::ProBuilder::BezierPoint> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::ProBuilder::BezierPoint>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::ProBuilder::BezierPoint>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::ProBuilder::BezierPoint>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::ProBuilder::BezierPoint", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::ProBuilder::BezierPoint> _list, int32_t _index, int32_t _version, UnityEngine::ProBuilder::BezierPoint _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::ProBuilder::BezierPoint> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::ProBuilder::BezierPoint> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::ProBuilder::BezierPoint> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::ProBuilder::BezierPoint __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::ProBuilder::BezierPoint value) ;

constexpr UnityEngine::ProBuilder::BezierPoint __get__current() const;


// Properties

 UnityEngine::ProBuilder::BezierPoint __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::ProBuilder::BezierPoint> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ProBuilder::BezierPoint get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 3496 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::UICharInfo> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::UICharInfo>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::UICharInfo>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::UICharInfo>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::UICharInfo", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::UICharInfo> _list, int32_t _index, int32_t _version, UnityEngine::UICharInfo _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::UICharInfo> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::UICharInfo> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::UICharInfo> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::UICharInfo __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::UICharInfo value) ;

constexpr UnityEngine::UICharInfo __get__current() const;


// Properties

 UnityEngine::UICharInfo __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::UICharInfo> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UICharInfo get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 3497 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::UILineInfo> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::UILineInfo>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::UILineInfo>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::UILineInfo>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::UILineInfo", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::UILineInfo> _list, int32_t _index, int32_t _version, UnityEngine::UILineInfo _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::UILineInfo> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::UILineInfo> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::UILineInfo> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::UILineInfo __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::UILineInfo value) ;

constexpr UnityEngine::UILineInfo __get__current() const;


// Properties

 UnityEngine::UILineInfo __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::UILineInfo> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UILineInfo get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 3498 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::UIVertex> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::UIVertex>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::UIVertex>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::UIVertex>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::UIVertex", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::UIVertex> _list, int32_t _index, int32_t _version, UnityEngine::UIVertex _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::UIVertex> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::UIVertex> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::UIVertex> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::UIVertex __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::UIVertex value) ;

constexpr UnityEngine::UIVertex __get__current() const;


// Properties

 UnityEngine::UIVertex __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::UIVertex> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIVertex get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 3499 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> _list, int32_t _index, int32_t _version, UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo value) ;

constexpr UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo __get__current() const;


// Properties

 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 3678 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<GlobalNamespace::FPSTimestamp> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<GlobalNamespace::FPSTimestamp>
constexpr operator  System::Collections::Generic::IEnumerator_1<GlobalNamespace::FPSTimestamp>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<GlobalNamespace::FPSTimestamp>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "GlobalNamespace::FPSTimestamp", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<GlobalNamespace::FPSTimestamp> _list, int32_t _index, int32_t _version, GlobalNamespace::FPSTimestamp _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<GlobalNamespace::FPSTimestamp> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<GlobalNamespace::FPSTimestamp> value) ;

constexpr System::Collections::Generic::List_1<GlobalNamespace::FPSTimestamp> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 GlobalNamespace::FPSTimestamp __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(GlobalNamespace::FPSTimestamp value) ;

constexpr GlobalNamespace::FPSTimestamp __get__current() const;


// Properties

 GlobalNamespace::FPSTimestamp __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<GlobalNamespace::FPSTimestamp> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::FPSTimestamp get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 3834 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> _list, int32_t _index, int32_t _version, UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo value) ;

constexpr UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo __get__current() const;


// Properties

 UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 3950 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IEnumerator_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> _list, int32_t _index, int32_t _version, System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType> _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> value) ;

constexpr System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType> __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType> value) ;

constexpr System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType> __get__current() const;


// Properties

 System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType> __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 3992 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::AnimatorClipInfo> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::AnimatorClipInfo>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::AnimatorClipInfo>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::AnimatorClipInfo>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::AnimatorClipInfo", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::AnimatorClipInfo> _list, int32_t _index, int32_t _version, UnityEngine::AnimatorClipInfo _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::AnimatorClipInfo> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::AnimatorClipInfo> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::AnimatorClipInfo> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::AnimatorClipInfo __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::AnimatorClipInfo value) ;

constexpr UnityEngine::AnimatorClipInfo __get__current() const;


// Properties

 UnityEngine::AnimatorClipInfo __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::AnimatorClipInfo> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::AnimatorClipInfo get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4002 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<GlobalNamespace::BezierCurve> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<GlobalNamespace::BezierCurve>
constexpr operator  System::Collections::Generic::IEnumerator_1<GlobalNamespace::BezierCurve>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<GlobalNamespace::BezierCurve>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "GlobalNamespace::BezierCurve", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<GlobalNamespace::BezierCurve> _list, int32_t _index, int32_t _version, GlobalNamespace::BezierCurve _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<GlobalNamespace::BezierCurve> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<GlobalNamespace::BezierCurve> value) ;

constexpr System::Collections::Generic::List_1<GlobalNamespace::BezierCurve> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 GlobalNamespace::BezierCurve __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(GlobalNamespace::BezierCurve value) ;

constexpr GlobalNamespace::BezierCurve __get__current() const;


// Properties

 GlobalNamespace::BezierCurve __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<GlobalNamespace::BezierCurve> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::BezierCurve get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4011 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::ComputedTransitionProperty> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::ComputedTransitionProperty>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::ComputedTransitionProperty>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::UIElements::ComputedTransitionProperty>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::UIElements::ComputedTransitionProperty", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::UIElements::ComputedTransitionProperty> _list, int32_t _index, int32_t _version, UnityEngine::UIElements::ComputedTransitionProperty _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::UIElements::ComputedTransitionProperty> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::UIElements::ComputedTransitionProperty> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::UIElements::ComputedTransitionProperty> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::UIElements::ComputedTransitionProperty __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::UIElements::ComputedTransitionProperty value) ;

constexpr UnityEngine::UIElements::ComputedTransitionProperty __get__current() const;


// Properties

 UnityEngine::UIElements::ComputedTransitionProperty __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::UIElements::ComputedTransitionProperty> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::ComputedTransitionProperty get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4029 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<HoudiniEngineUnity::HAPI_PartInfo> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<HoudiniEngineUnity::HAPI_PartInfo>
constexpr operator  System::Collections::Generic::IEnumerator_1<HoudiniEngineUnity::HAPI_PartInfo>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<HoudiniEngineUnity::HAPI_PartInfo>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "HoudiniEngineUnity::HAPI_PartInfo", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<HoudiniEngineUnity::HAPI_PartInfo> _list, int32_t _index, int32_t _version, HoudiniEngineUnity::HAPI_PartInfo _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<HoudiniEngineUnity::HAPI_PartInfo> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<HoudiniEngineUnity::HAPI_PartInfo> value) ;

constexpr System::Collections::Generic::List_1<HoudiniEngineUnity::HAPI_PartInfo> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 HoudiniEngineUnity::HAPI_PartInfo __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(HoudiniEngineUnity::HAPI_PartInfo value) ;

constexpr HoudiniEngineUnity::HAPI_PartInfo __get__current() const;


// Properties

 HoudiniEngineUnity::HAPI_PartInfo __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<HoudiniEngineUnity::HAPI_PartInfo> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 HoudiniEngineUnity::HAPI_PartInfo get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4077 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::Timeline::IntervalTreeNode> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::Timeline::IntervalTreeNode>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::Timeline::IntervalTreeNode>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::Timeline::IntervalTreeNode>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::Timeline::IntervalTreeNode", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::Timeline::IntervalTreeNode> _list, int32_t _index, int32_t _version, UnityEngine::Timeline::IntervalTreeNode _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::Timeline::IntervalTreeNode> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::Timeline::IntervalTreeNode> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::Timeline::IntervalTreeNode> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::Timeline::IntervalTreeNode __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::Timeline::IntervalTreeNode value) ;

constexpr UnityEngine::Timeline::IntervalTreeNode __get__current() const;


// Properties

 UnityEngine::Timeline::IntervalTreeNode __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::Timeline::IntervalTreeNode> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Timeline::IntervalTreeNode get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4078 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<Newtonsoft::Json::JsonPosition> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<Newtonsoft::Json::JsonPosition>
constexpr operator  System::Collections::Generic::IEnumerator_1<Newtonsoft::Json::JsonPosition>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<Newtonsoft::Json::JsonPosition>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "Newtonsoft::Json::JsonPosition", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<Newtonsoft::Json::JsonPosition> _list, int32_t _index, int32_t _version, Newtonsoft::Json::JsonPosition _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<Newtonsoft::Json::JsonPosition> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<Newtonsoft::Json::JsonPosition> value) ;

constexpr System::Collections::Generic::List_1<Newtonsoft::Json::JsonPosition> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 Newtonsoft::Json::JsonPosition __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(Newtonsoft::Json::JsonPosition value) ;

constexpr Newtonsoft::Json::JsonPosition __get__current() const;


// Properties

 Newtonsoft::Json::JsonPosition __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<Newtonsoft::Json::JsonPosition> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 Newtonsoft::Json::JsonPosition get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4094 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<MidiParser::MidiEvent> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<MidiParser::MidiEvent>
constexpr operator  System::Collections::Generic::IEnumerator_1<MidiParser::MidiEvent>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<MidiParser::MidiEvent>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "MidiParser::MidiEvent", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<MidiParser::MidiEvent> _list, int32_t _index, int32_t _version, MidiParser::MidiEvent _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<MidiParser::MidiEvent> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<MidiParser::MidiEvent> value) ;

constexpr System::Collections::Generic::List_1<MidiParser::MidiEvent> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 MidiParser::MidiEvent __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(MidiParser::MidiEvent value) ;

constexpr MidiParser::MidiEvent __get__current() const;


// Properties

 MidiParser::MidiEvent __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<MidiParser::MidiEvent> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 MidiParser::MidiEvent get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4102 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::ResourceManagement::Util::ObjectInitializationData> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::ResourceManagement::Util::ObjectInitializationData", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData> _list, int32_t _index, int32_t _version, UnityEngine::ResourceManagement::Util::ObjectInitializationData _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::ResourceManagement::Util::ObjectInitializationData __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::ResourceManagement::Util::ObjectInitializationData value) ;

constexpr UnityEngine::ResourceManagement::Util::ObjectInitializationData __get__current() const;


// Properties

 UnityEngine::ResourceManagement::Util::ObjectInitializationData __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ResourceManagement::Util::ObjectInitializationData get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4119 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::RaycastHit2D> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::RaycastHit2D>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::RaycastHit2D>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::RaycastHit2D>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::RaycastHit2D", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::RaycastHit2D> _list, int32_t _index, int32_t _version, UnityEngine::RaycastHit2D _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::RaycastHit2D> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::RaycastHit2D> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::RaycastHit2D> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::RaycastHit2D __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::RaycastHit2D value) ;

constexpr UnityEngine::RaycastHit2D __get__current() const;


// Properties

 UnityEngine::RaycastHit2D __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::RaycastHit2D> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::RaycastHit2D get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4125 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UIR::RenderChainTextEntry> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UIR::RenderChainTextEntry>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UIR::RenderChainTextEntry>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::RenderChainTextEntry>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::UIElements::UIR::RenderChainTextEntry", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::RenderChainTextEntry> _list, int32_t _index, int32_t _version, UnityEngine::UIElements::UIR::RenderChainTextEntry _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::RenderChainTextEntry> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::RenderChainTextEntry> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::RenderChainTextEntry> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::UIElements::UIR::RenderChainTextEntry __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::UIElements::UIR::RenderChainTextEntry value) ;

constexpr UnityEngine::UIElements::UIR::RenderChainTextEntry __get__current() const;


// Properties

 UnityEngine::UIElements::UIR::RenderChainTextEntry __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::RenderChainTextEntry> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UIR::RenderChainTextEntry get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4127 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::RuleMatcher> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::RuleMatcher>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::RuleMatcher>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::UIElements::RuleMatcher>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::UIElements::RuleMatcher", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::UIElements::RuleMatcher> _list, int32_t _index, int32_t _version, UnityEngine::UIElements::RuleMatcher _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::UIElements::RuleMatcher> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::UIElements::RuleMatcher> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::UIElements::RuleMatcher> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::UIElements::RuleMatcher __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::UIElements::RuleMatcher value) ;

constexpr UnityEngine::UIElements::RuleMatcher __get__current() const;


// Properties

 UnityEngine::UIElements::RuleMatcher __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::UIElements::RuleMatcher> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::RuleMatcher get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4135 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::StyleSheets::StylePropertyValue> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::UIElements::StyleSheets::StylePropertyValue", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue> _list, int32_t _index, int32_t _version, UnityEngine::UIElements::StyleSheets::StylePropertyValue _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::UIElements::StyleSheets::StylePropertyValue __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::UIElements::StyleSheets::StylePropertyValue value) ;

constexpr UnityEngine::UIElements::StyleSheets::StylePropertyValue __get__current() const;


// Properties

 UnityEngine::UIElements::StyleSheets::StylePropertyValue __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::StyleSheets::StylePropertyValue get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4137 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::StyleSelectorPart> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::StyleSelectorPart>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::StyleSelectorPart>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSelectorPart>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::UIElements::StyleSelectorPart", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSelectorPart> _list, int32_t _index, int32_t _version, UnityEngine::UIElements::StyleSelectorPart _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSelectorPart> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSelectorPart> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSelectorPart> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::UIElements::StyleSelectorPart __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::UIElements::StyleSelectorPart value) ;

constexpr UnityEngine::UIElements::StyleSelectorPart __get__current() const;


// Properties

 UnityEngine::UIElements::StyleSelectorPart __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSelectorPart> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::StyleSelectorPart get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4138 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> _list, int32_t _index, int32_t _version, UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken value) ;

constexpr UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken __get__current() const;


// Properties

 UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4139 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::StyleSheets::StyleValue> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::StyleSheets::StyleValue>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::StyleSheets::StyleValue>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::StyleValue>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::UIElements::StyleSheets::StyleValue", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::StyleValue> _list, int32_t _index, int32_t _version, UnityEngine::UIElements::StyleSheets::StyleValue _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::StyleValue> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::StyleValue> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::StyleValue> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::UIElements::StyleSheets::StyleValue __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::UIElements::StyleSheets::StyleValue value) ;

constexpr UnityEngine::UIElements::StyleSheets::StyleValue __get__current() const;


// Properties

 UnityEngine::UIElements::StyleSheets::StyleValue __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::StyleValue> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::StyleSheets::StyleValue get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4140 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::StyleSheets::StyleValueManaged> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::UIElements::StyleSheets::StyleValueManaged", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged> _list, int32_t _index, int32_t _version, UnityEngine::UIElements::StyleSheets::StyleValueManaged _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::UIElements::StyleSheets::StyleValueManaged __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::UIElements::StyleSheets::StyleValueManaged value) ;

constexpr UnityEngine::UIElements::StyleSheets::StyleValueManaged __get__current() const;


// Properties

 UnityEngine::UIElements::StyleSheets::StyleValueManaged __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::StyleSheets::StyleValueManaged get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4141 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::StyleVariable> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::StyleVariable>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::StyleVariable>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::UIElements::StyleVariable>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::UIElements::StyleVariable", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::UIElements::StyleVariable> _list, int32_t _index, int32_t _version, UnityEngine::UIElements::StyleVariable _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::UIElements::StyleVariable> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::UIElements::StyleVariable> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::UIElements::StyleVariable> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::UIElements::StyleVariable __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::UIElements::StyleVariable value) ;

constexpr UnityEngine::UIElements::StyleVariable __get__current() const;


// Properties

 UnityEngine::UIElements::StyleVariable __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::UIElements::StyleVariable> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::StyleVariable get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4142 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::Rendering::SubMeshDescriptor> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::Rendering::SubMeshDescriptor>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::Rendering::SubMeshDescriptor>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::Rendering::SubMeshDescriptor>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::Rendering::SubMeshDescriptor", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::Rendering::SubMeshDescriptor> _list, int32_t _index, int32_t _version, UnityEngine::Rendering::SubMeshDescriptor _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::Rendering::SubMeshDescriptor> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::Rendering::SubMeshDescriptor> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::Rendering::SubMeshDescriptor> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::Rendering::SubMeshDescriptor __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::Rendering::SubMeshDescriptor value) ;

constexpr UnityEngine::Rendering::SubMeshDescriptor __get__current() const;


// Properties

 UnityEngine::Rendering::SubMeshDescriptor __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::Rendering::SubMeshDescriptor> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Rendering::SubMeshDescriptor get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4165 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<HoudiniEngineUnity::TransformData> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<HoudiniEngineUnity::TransformData>
constexpr operator  System::Collections::Generic::IEnumerator_1<HoudiniEngineUnity::TransformData>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<HoudiniEngineUnity::TransformData>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "HoudiniEngineUnity::TransformData", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<HoudiniEngineUnity::TransformData> _list, int32_t _index, int32_t _version, HoudiniEngineUnity::TransformData _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<HoudiniEngineUnity::TransformData> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<HoudiniEngineUnity::TransformData> value) ;

constexpr System::Collections::Generic::List_1<HoudiniEngineUnity::TransformData> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 HoudiniEngineUnity::TransformData __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(HoudiniEngineUnity::TransformData value) ;

constexpr HoudiniEngineUnity::TransformData __get__current() const;


// Properties

 HoudiniEngineUnity::TransformData __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<HoudiniEngineUnity::TransformData> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 HoudiniEngineUnity::TransformData get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4166 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::TreeInstance> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::TreeInstance>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::TreeInstance>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::TreeInstance>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::TreeInstance", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::TreeInstance> _list, int32_t _index, int32_t _version, UnityEngine::TreeInstance _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::TreeInstance> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::TreeInstance> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::TreeInstance> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::TreeInstance __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::TreeInstance value) ;

constexpr UnityEngine::TreeInstance __get__current() const;


// Properties

 UnityEngine::TreeInstance __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::TreeInstance> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::TreeInstance get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4171 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::XR::UsageHint> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::XR::UsageHint>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::XR::UsageHint>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::InputSystem::XR::UsageHint>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::InputSystem::XR::UsageHint", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::InputSystem::XR::UsageHint> _list, int32_t _index, int32_t _version, UnityEngine::InputSystem::XR::UsageHint _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::InputSystem::XR::UsageHint> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::InputSystem::XR::UsageHint> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::InputSystem::XR::UsageHint> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::InputSystem::XR::UsageHint __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::InputSystem::XR::UsageHint value) ;

constexpr UnityEngine::InputSystem::XR::UsageHint __get__current() const;


// Properties

 UnityEngine::InputSystem::XR::UsageHint __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::InputSystem::XR::UsageHint> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::XR::UsageHint get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4177 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<System::Security::Cryptography::X509Certificates::X509ChainStatus> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<System::Security::Cryptography::X509Certificates::X509ChainStatus>
constexpr operator  System::Collections::Generic::IEnumerator_1<System::Security::Cryptography::X509Certificates::X509ChainStatus>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<System::Security::Cryptography::X509Certificates::X509ChainStatus>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "System::Security::Cryptography::X509Certificates::X509ChainStatus", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<System::Security::Cryptography::X509Certificates::X509ChainStatus> _list, int32_t _index, int32_t _version, System::Security::Cryptography::X509Certificates::X509ChainStatus _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<System::Security::Cryptography::X509Certificates::X509ChainStatus> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<System::Security::Cryptography::X509Certificates::X509ChainStatus> value) ;

constexpr System::Collections::Generic::List_1<System::Security::Cryptography::X509Certificates::X509ChainStatus> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 System::Security::Cryptography::X509Certificates::X509ChainStatus __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(System::Security::Cryptography::X509Certificates::X509ChainStatus value) ;

constexpr System::Security::Cryptography::X509Certificates::X509ChainStatus __get__current() const;


// Properties

 System::Security::Cryptography::X509Certificates::X509ChainStatus __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<System::Security::Cryptography::X509Certificates::X509ChainStatus> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Security::Cryptography::X509Certificates::X509ChainStatus get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4178 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::XR::XRFeatureDescriptor> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::InputSystem::XR::XRFeatureDescriptor", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor> _list, int32_t _index, int32_t _version, UnityEngine::InputSystem::XR::XRFeatureDescriptor _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::InputSystem::XR::XRFeatureDescriptor __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::InputSystem::XR::XRFeatureDescriptor value) ;

constexpr UnityEngine::InputSystem::XR::XRFeatureDescriptor __get__current() const;


// Properties

 UnityEngine::InputSystem::XR::XRFeatureDescriptor __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::XR::XRFeatureDescriptor get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4182 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> _list, int32_t _index, int32_t _version, UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo value) ;

constexpr UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo __get__current() const;


// Properties

 UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4184 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData>
constexpr operator  System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "GlobalNamespace::GlobalNamespace__BeatLine__HighlightData", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> _list, int32_t _index, int32_t _version, GlobalNamespace::GlobalNamespace__BeatLine__HighlightData _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> value) ;

constexpr System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 GlobalNamespace::GlobalNamespace__BeatLine__HighlightData __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(GlobalNamespace::GlobalNamespace__BeatLine__HighlightData value) ;

constexpr GlobalNamespace::GlobalNamespace__BeatLine__HighlightData __get__current() const;


// Properties

 GlobalNamespace::GlobalNamespace__BeatLine__HighlightData __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__BeatLine__HighlightData get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4205 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> _list, int32_t _index, int32_t _version, UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock value) ;

constexpr UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock __get__current() const;


// Properties

 UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4206 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> _list, int32_t _index, int32_t _version, UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page value) ;

constexpr UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page __get__current() const;


// Properties

 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4210 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::UnityEngine__Camera__RenderRequest> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::UnityEngine__Camera__RenderRequest>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::UnityEngine__Camera__RenderRequest>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::UnityEngine__Camera__RenderRequest>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::UnityEngine__Camera__RenderRequest", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::UnityEngine__Camera__RenderRequest> _list, int32_t _index, int32_t _version, UnityEngine::UnityEngine__Camera__RenderRequest _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::UnityEngine__Camera__RenderRequest> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::UnityEngine__Camera__RenderRequest> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::UnityEngine__Camera__RenderRequest> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::UnityEngine__Camera__RenderRequest __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::UnityEngine__Camera__RenderRequest value) ;

constexpr UnityEngine::UnityEngine__Camera__RenderRequest __get__current() const;


// Properties

 UnityEngine::UnityEngine__Camera__RenderRequest __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::UnityEngine__Camera__RenderRequest> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UnityEngine__Camera__RenderRequest get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4214 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<Zenject::Zenject__DisposableManager__DisposableInfo> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<Zenject::Zenject__DisposableManager__DisposableInfo>
constexpr operator  System::Collections::Generic::IEnumerator_1<Zenject::Zenject__DisposableManager__DisposableInfo>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<Zenject::Zenject__DisposableManager__DisposableInfo>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "Zenject::Zenject__DisposableManager__DisposableInfo", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<Zenject::Zenject__DisposableManager__DisposableInfo> _list, int32_t _index, int32_t _version, Zenject::Zenject__DisposableManager__DisposableInfo _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<Zenject::Zenject__DisposableManager__DisposableInfo> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<Zenject::Zenject__DisposableManager__DisposableInfo> value) ;

constexpr System::Collections::Generic::List_1<Zenject::Zenject__DisposableManager__DisposableInfo> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 Zenject::Zenject__DisposableManager__DisposableInfo __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(Zenject::Zenject__DisposableManager__DisposableInfo value) ;

constexpr Zenject::Zenject__DisposableManager__DisposableInfo __get__current() const;


// Properties

 Zenject::Zenject__DisposableManager__DisposableInfo __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<Zenject::Zenject__DisposableManager__DisposableInfo> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 Zenject::Zenject__DisposableManager__DisposableInfo get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4216 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair>
constexpr operator  System::Collections::Generic::IEnumerator_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> _list, int32_t _index, int32_t _version, Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> value) ;

constexpr System::Collections::Generic::List_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair value) ;

constexpr Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair __get__current() const;


// Properties

 Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4223 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> _list, int32_t _index, int32_t _version, UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement value) ;

constexpr UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement __get__current() const;


// Properties

 UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4227 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition>
constexpr operator  System::Collections::Generic::IEnumerator_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> _list, int32_t _index, int32_t _version, Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> value) ;

constexpr System::Collections::Generic::List_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition value) ;

constexpr Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition __get__current() const;


// Properties

 Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4235 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> _list, int32_t _index, int32_t _version, UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor value) ;

constexpr UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor __get__current() const;


// Properties

 UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4236 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> _list, int32_t _index, int32_t _version, UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor value) ;

constexpr UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor __get__current() const;


// Properties

 UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4237 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> _list, int32_t _index, int32_t _version, UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData value) ;

constexpr UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData __get__current() const;


// Properties

 UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4240 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> _list, int32_t _index, int32_t _version, UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson value) ;

constexpr UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson __get__current() const;


// Properties

 UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4241 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> _list, int32_t _index, int32_t _version, UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem value) ;

constexpr UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem __get__current() const;


// Properties

 UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4242 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> _list, int32_t _index, int32_t _version, UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper value) ;

constexpr UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper __get__current() const;


// Properties

 UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4251 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue>
constexpr operator  System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> _list, int32_t _index, int32_t _version, GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> value) ;

constexpr System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue value) ;

constexpr GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue __get__current() const;


// Properties

 GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4256 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition>
constexpr operator  System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> _list, int32_t _index, int32_t _version, GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> value) ;

constexpr System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition value) ;

constexpr GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition __get__current() const;


// Properties

 GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4257 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry>
constexpr operator  System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> _list, int32_t _index, int32_t _version, GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> value) ;

constexpr System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry value) ;

constexpr GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry __get__current() const;


// Properties

 GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4260 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor>
constexpr operator  System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> _list, int32_t _index, int32_t _version, GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> value) ;

constexpr System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor value) ;

constexpr GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor __get__current() const;


// Properties

 GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4267 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit>
constexpr operator  System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> _list, int32_t _index, int32_t _version, GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> value) ;

constexpr System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit value) ;

constexpr GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit __get__current() const;


// Properties

 GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4268 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog>
constexpr operator  System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> _list, int32_t _index, int32_t _version, GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> value) ;

constexpr System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog value) ;

constexpr GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog __get__current() const;


// Properties

 GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4269 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast>
constexpr operator  System::Collections::Generic::IEnumerator_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> _list, int32_t _index, int32_t _version, VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> value) ;

constexpr System::Collections::Generic::List_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast value) ;

constexpr VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast __get__current() const;


// Properties

 VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4287 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> _list, int32_t _index, int32_t _version, UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData value) ;

constexpr UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData __get__current() const;


// Properties

 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4288 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> _list, int32_t _index, int32_t _version, UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest value) ;

constexpr UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest __get__current() const;


// Properties

 UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4293 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction>
constexpr operator  System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> _list, int32_t _index, int32_t _version, GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> value) ;

constexpr System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction value) ;

constexpr GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction __get__current() const;


// Properties

 GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4300 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> _list, int32_t _index, int32_t _version, UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride value) ;

constexpr UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride __get__current() const;


// Properties

 UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4301 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> _list, int32_t _index, int32_t _version, UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap value) ;

constexpr UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap __get__current() const;


// Properties

 UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4302 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame>
constexpr operator  System::Collections::Generic::IEnumerator_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> _list, int32_t _index, int32_t _version, TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> value) ;

constexpr System::Collections::Generic::List_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame value) ;

constexpr TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame __get__current() const;


// Properties

 TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4303 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> _list, int32_t _index, int32_t _version, UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo value) ;

constexpr UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo __get__current() const;


// Properties

 UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4306 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> _list, int32_t _index, int32_t _version, UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData value) ;

constexpr UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData __get__current() const;


// Properties

 UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4307 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> _list, int32_t _index, int32_t _version, UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper value) ;

constexpr UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper __get__current() const;


// Properties

 UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4308 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> _list, int32_t _index, int32_t _version, UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry value) ;

constexpr UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry __get__current() const;


// Properties

 UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4309 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> _list, int32_t _index, int32_t _version, UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree value) ;

constexpr UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree __get__current() const;


// Properties

 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4310 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> _list, int32_t _index, int32_t _version, UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate value) ;

constexpr UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate __get__current() const;


// Properties

 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4311 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> _list, int32_t _index, int32_t _version, UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest value) ;

constexpr UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest __get__current() const;


// Properties

 UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4313 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> _list, int32_t _index, int32_t _version, UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition value) ;

constexpr UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition __get__current() const;


// Properties

 UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4314 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> _list, int32_t _index, int32_t _version, UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry value) ;

constexpr UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry __get__current() const;


// Properties

 UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4315 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>
constexpr operator  System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> _list, int32_t _index, int32_t _version, GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> value) ;

constexpr System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData value) ;

constexpr GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData __get__current() const;


// Properties

 GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4317 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher>
constexpr operator  System::Collections::Generic::IEnumerator_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> _list, int32_t _index, int32_t _version, GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> value) ;

constexpr System::Collections::Generic::List_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher value) ;

constexpr GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher __get__current() const;


// Properties

 GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 4831 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<System::Int32Enum> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<System::Int32Enum>
constexpr operator  System::Collections::Generic::IEnumerator_1<System::Int32Enum>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<System::Int32Enum>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "System::Int32Enum", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<System::Int32Enum> _list, int32_t _index, int32_t _version, System::Int32Enum _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<System::Int32Enum> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<System::Int32Enum> value) ;

constexpr System::Collections::Generic::List_1<System::Int32Enum> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 System::Int32Enum __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(System::Int32Enum value) ;

constexpr System::Int32Enum __get__current() const;


// Properties

 System::Int32Enum __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<System::Int32Enum> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Int32Enum get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 5803 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<HoudiniEngineUnity::HAPI_GeoInfo> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<HoudiniEngineUnity::HAPI_GeoInfo>
constexpr operator  System::Collections::Generic::IEnumerator_1<HoudiniEngineUnity::HAPI_GeoInfo>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<HoudiniEngineUnity::HAPI_GeoInfo>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "HoudiniEngineUnity::HAPI_GeoInfo", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<HoudiniEngineUnity::HAPI_GeoInfo> _list, int32_t _index, int32_t _version, HoudiniEngineUnity::HAPI_GeoInfo _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<HoudiniEngineUnity::HAPI_GeoInfo> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<HoudiniEngineUnity::HAPI_GeoInfo> value) ;

constexpr System::Collections::Generic::List_1<HoudiniEngineUnity::HAPI_GeoInfo> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 HoudiniEngineUnity::HAPI_GeoInfo __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(HoudiniEngineUnity::HAPI_GeoInfo value) ;

constexpr HoudiniEngineUnity::HAPI_GeoInfo __get__current() const;


// Properties

 HoudiniEngineUnity::HAPI_GeoInfo __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<HoudiniEngineUnity::HAPI_GeoInfo> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 HoudiniEngineUnity::HAPI_GeoInfo get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 5822 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> _list, int32_t _index, int32_t _version, UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding value) ;

constexpr UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding __get__current() const;


// Properties

 UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 5824 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData>
constexpr operator  System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> _list, int32_t _index, int32_t _version, GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> value) ;

constexpr System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData value) ;

constexpr GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData __get__current() const;


// Properties

 GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 5971 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IEnumerator_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> _list, int32_t _index, int32_t _version, System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType> _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> value) ;

constexpr System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType> __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType> value) ;

constexpr System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType> __get__current() const;


// Properties

 System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType> __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 5972 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IEnumerator_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> _list, int32_t _index, int32_t _version, IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> value) ;

constexpr System::Collections::Generic::List_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

constexpr IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> __get__current() const;


// Properties

 IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 5973 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<Zenject::Zenject__PoolableManager__PoolableInfo> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<Zenject::Zenject__PoolableManager__PoolableInfo>
constexpr operator  System::Collections::Generic::IEnumerator_1<Zenject::Zenject__PoolableManager__PoolableInfo>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<Zenject::Zenject__PoolableManager__PoolableInfo>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "Zenject::Zenject__PoolableManager__PoolableInfo", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<Zenject::Zenject__PoolableManager__PoolableInfo> _list, int32_t _index, int32_t _version, Zenject::Zenject__PoolableManager__PoolableInfo _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<Zenject::Zenject__PoolableManager__PoolableInfo> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<Zenject::Zenject__PoolableManager__PoolableInfo> value) ;

constexpr System::Collections::Generic::List_1<Zenject::Zenject__PoolableManager__PoolableInfo> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 Zenject::Zenject__PoolableManager__PoolableInfo __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(Zenject::Zenject__PoolableManager__PoolableInfo value) ;

constexpr Zenject::Zenject__PoolableManager__PoolableInfo __get__current() const;


// Properties

 Zenject::Zenject__PoolableManager__PoolableInfo __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<Zenject::Zenject__PoolableManager__PoolableInfo> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 Zenject::Zenject__PoolableManager__PoolableInfo get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 6255 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<System::Collections::DictionaryEntry> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<System::Collections::DictionaryEntry>
constexpr operator  System::Collections::Generic::IEnumerator_1<System::Collections::DictionaryEntry>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<System::Collections::DictionaryEntry>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "System::Collections::DictionaryEntry", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<System::Collections::DictionaryEntry> _list, int32_t _index, int32_t _version, System::Collections::DictionaryEntry _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<System::Collections::DictionaryEntry> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<System::Collections::DictionaryEntry> value) ;

constexpr System::Collections::Generic::List_1<System::Collections::DictionaryEntry> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 System::Collections::DictionaryEntry __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(System::Collections::DictionaryEntry value) ;

constexpr System::Collections::DictionaryEntry __get__current() const;


// Properties

 System::Collections::DictionaryEntry __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<System::Collections::DictionaryEntry> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::DictionaryEntry get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 6256 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IEnumerator_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> _list, int32_t _index, int32_t _version, System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType> _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> value) ;

constexpr System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType> __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType> value) ;

constexpr System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType> __get__current() const;


// Properties

 System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType> __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 6262 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> _list, int32_t _index, int32_t _version, UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType> _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType> __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType> value) ;

constexpr UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType> __get__current() const;


// Properties

 UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType> __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 6263 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>>
constexpr operator  System::Collections::Generic::IEnumerator_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> _list, int32_t _index, int32_t _version, System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> value) ;

constexpr System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> value) ;

constexpr System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> __get__current() const;


// Properties

 System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 6264 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<Unity::Collections::NativeArray_1<uint16_t>> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<Unity::Collections::NativeArray_1<uint16_t>>
constexpr operator  System::Collections::Generic::IEnumerator_1<Unity::Collections::NativeArray_1<uint16_t>>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<Unity::Collections::NativeArray_1<uint16_t>>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "Unity::Collections::NativeArray_1<uint16_t>", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<Unity::Collections::NativeArray_1<uint16_t>> _list, int32_t _index, int32_t _version, Unity::Collections::NativeArray_1<uint16_t> _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<Unity::Collections::NativeArray_1<uint16_t>> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<Unity::Collections::NativeArray_1<uint16_t>> value) ;

constexpr System::Collections::Generic::List_1<Unity::Collections::NativeArray_1<uint16_t>> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 Unity::Collections::NativeArray_1<uint16_t> __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(Unity::Collections::NativeArray_1<uint16_t> value) ;

constexpr Unity::Collections::NativeArray_1<uint16_t> __get__current() const;


// Properties

 Unity::Collections::NativeArray_1<uint16_t> __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<Unity::Collections::NativeArray_1<uint16_t>> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 Unity::Collections::NativeArray_1<uint16_t> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 6265 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>>
constexpr operator  System::Collections::Generic::IEnumerator_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> _list, int32_t _index, int32_t _version, Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex> _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> value) ;

constexpr System::Collections::Generic::List_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex> __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex> value) ;

constexpr Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex> __get__current() const;


// Properties

 Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex> __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 6266 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> _list, int32_t _index, int32_t _version, GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> value) ;

constexpr System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

constexpr GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> __get__current() const;


// Properties

 GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 6267 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> _list, int32_t _index, int32_t _version, UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge> _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge> __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge> value) ;

constexpr UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge> __get__current() const;


// Properties

 UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge> __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 6268 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> _list, int32_t _index, int32_t _version, UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t> _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t> __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t> value) ;

constexpr UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t> __get__current() const;


// Properties

 UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t> __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 6269 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IEnumerator_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> _list, int32_t _index, int32_t _version, UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> value) ;

constexpr System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

constexpr UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> __get__current() const;


// Properties

 UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 6270 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>
constexpr operator  System::Collections::Generic::IEnumerator_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> _list, int32_t _index, int32_t _version, System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t> _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> value) ;

constexpr System::Collections::Generic::List_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t> __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t> value) ;

constexpr System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t> __get__current() const;


// Properties

 System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t> __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 6271 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IEnumerator_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> _list, int32_t _index, int32_t _version, System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> value) ;

constexpr System::Collections::Generic::List_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

constexpr System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> __get__current() const;


// Properties

 System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 6272 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>>
constexpr operator  System::Collections::Generic::IEnumerator_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> _list, int32_t _index, int32_t _version, System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3> _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> value) ;

constexpr System::Collections::Generic::List_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3> __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3> value) ;

constexpr System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3> __get__current() const;


// Properties

 System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3> __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 6273 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IEnumerator_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> _list, int32_t _index, int32_t _version, System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType> _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> value) ;

constexpr System::Collections::Generic::List_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType> __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType> value) ;

constexpr System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType> __get__current() const;


// Properties

 System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType> __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2638)), TypeDefinitionIndex(TypeDefinitionIndex(3827))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 6274 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<System::UInt16Enum> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<System::UInt16Enum>
constexpr operator  System::Collections::Generic::IEnumerator_1<System::UInt16Enum>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<System::UInt16Enum>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "System::UInt16Enum", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<System::UInt16Enum> _list, int32_t _index, int32_t _version, System::UInt16Enum _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<System::UInt16Enum> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<System::UInt16Enum> value) ;

constexpr System::Collections::Generic::List_1<System::UInt16Enum> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 System::UInt16Enum __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(System::UInt16Enum value) ;

constexpr System::UInt16Enum __get__current() const;


// Properties

 System::UInt16Enum __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<System::UInt16Enum> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 System::UInt16Enum get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3827)), TypeDefinitionIndex(TypeDefinitionIndex(2638))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3827), inst: 6275 })
// CS Name: System.Collections.Generic.List`1::Enumerator
struct CORDL_TYPE System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> : public ::bs_hook::ValueTypeWrapper {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair>
constexpr operator  System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair>() const;

/// @brief Convert operator to System::IDisposable
constexpr operator  System::IDisposable() const;

/// @brief Convert operator to System::Collections::IEnumerator
constexpr operator  System::Collections::IEnumerator() const;

// Ctor Parameters [CppParam { name: "_list", ty: "System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair>", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair", modifiers: "", def_value: None }]
constexpr System__Collections__Generic__List_1__Enumerator(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> _list, int32_t _index, int32_t _version, GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair _current) noexcept;


                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator const&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator(System__Collections__Generic__List_1__Enumerator&&) = default;
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator const& o) {
                        __instance = o.__instance;
                        return *this;
                    };
                    constexpr System__Collections__Generic__List_1__Enumerator& operator=(System__Collections__Generic__List_1__Enumerator&& o) noexcept {
                        __instance = std::move(o.__instance);
                        return *this;
                    };
                

/// @brief The size of the true value type
static constexpr auto  __CORDL_VALUE_TYPE_SIZE{0x20};

/// @brief Holds the value type data
 std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>  __instance;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __CORDL_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
constexpr explicit System__Collections__Generic__List_1__Enumerator(std::array<std::byte, __CORDL_VALUE_TYPE_SIZE> instance) noexcept : ::bs_hook::ValueTypeWrapper(),__instance(std::move(instance)) {
}

/// @brief conversion method for value type
constexpr void* convert() const noexcept {
return const_cast<void*>(static_cast<const void*>(__instance.data()));
}


// Fields

 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> __declspec(property(get=__get__list, put=__set__list))  _list;

constexpr void __set__list(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> value) ;

constexpr System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> __get__list() const;

 int32_t __declspec(property(get=__get__index, put=__set__index))  _index;

constexpr void __set__index(int32_t value) ;

constexpr int32_t __get__index() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair __declspec(property(get=__get__current, put=__set__current))  _current;

constexpr void __set__current(GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair value) ;

constexpr GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair __get__current() const;


// Properties

 GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair __declspec(property(get=get_Current))  Current;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IEnumerator_get_Current))  System_Collections_IEnumerator_Current;


// Methods

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
 void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
 bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
 bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IEnumerator_Reset() ;

static constexpr bool __CORDL_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<::cordl_internals::il2cpp_reference_type T>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 2 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<T> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<T>;

/// @brief Convert operator to System::Collections::Generic::IList_1<T>
constexpr operator  System::Collections::Generic::IList_1<T>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<T>
constexpr operator  System::Collections::Generic::ICollection_1<T>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<T>
constexpr operator  System::Collections::Generic::IEnumerable_1<T>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<T>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<T>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<T>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<T>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<T> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<T> value) ;

constexpr ::ArrayW<T> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<T> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<T> value) ;

static ::ArrayW<T> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 T __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<T>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<T> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<T> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 T get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, T value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(T item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(T item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<T> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<T> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, T item, System::Collections::Generic::IComparer_1<T> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(T item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(T item, System::Collections::Generic::IComparer_1<T> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(T item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<T,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<T> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<T> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<T> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 T Find(System::Predicate_1<T> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<T> FindAll(System::Predicate_1<T> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<T> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<T> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 T FindLast(System::Predicate_1<T> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<T> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<T> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<T> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<T> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(T item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, T item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<T> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(T item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<T> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<T> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<T> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<T> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<T> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<T> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 92 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<int32_t> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<int32_t>;

/// @brief Convert operator to System::Collections::Generic::IList_1<int32_t>
constexpr operator  System::Collections::Generic::IList_1<int32_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<int32_t>
constexpr operator  System::Collections::Generic::ICollection_1<int32_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<int32_t>
constexpr operator  System::Collections::Generic::IEnumerable_1<int32_t>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<int32_t>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<int32_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<int32_t>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<int32_t>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<int32_t> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<int32_t> value) ;

constexpr ::ArrayW<int32_t> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<int32_t> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<int32_t> value) ;

static ::ArrayW<int32_t> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 int32_t __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<int32_t>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<int32_t> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<int32_t> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, int32_t value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(int32_t item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(int32_t item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<int32_t> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<int32_t> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, int32_t item, System::Collections::Generic::IComparer_1<int32_t> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t item, System::Collections::Generic::IComparer_1<int32_t> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(int32_t item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<int32_t,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<int32_t> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<int32_t> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<int32_t> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t Find(System::Predicate_1<int32_t> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<int32_t> FindAll(System::Predicate_1<int32_t> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<int32_t> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<int32_t> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindLast(System::Predicate_1<int32_t> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<int32_t> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<int32_t> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<int32_t> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<int32_t> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(int32_t item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, int32_t item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<int32_t> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(int32_t item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<int32_t> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<int32_t> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<int32_t> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<int32_t> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<int32_t> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<int32_t> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 99 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<bool> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<bool>;

/// @brief Convert operator to System::Collections::Generic::IList_1<bool>
constexpr operator  System::Collections::Generic::IList_1<bool>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<bool>
constexpr operator  System::Collections::Generic::ICollection_1<bool>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<bool>
constexpr operator  System::Collections::Generic::IEnumerable_1<bool>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<bool>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<bool>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<bool>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<bool>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<bool> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<bool> value) ;

constexpr ::ArrayW<bool> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<bool> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<bool> value) ;

static ::ArrayW<bool> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<bool>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<bool> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<bool> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 bool get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, bool value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(bool item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(bool item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<bool> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<bool> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, bool item, System::Collections::Generic::IComparer_1<bool> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(bool item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(bool item, System::Collections::Generic::IComparer_1<bool> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(bool item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<bool,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<bool> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<bool> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<bool> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Find(System::Predicate_1<bool> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<bool> FindAll(System::Predicate_1<bool> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<bool> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<bool> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 bool FindLast(System::Predicate_1<bool> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<bool> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<bool> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<bool> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<bool> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(bool item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, bool item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<bool> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(bool item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<bool> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<bool> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<bool> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<bool> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<bool> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<bool> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 265 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> value) ;

constexpr ::ArrayW<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> value) ;

static ::ArrayW<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle item, System::Collections::Generic::IComparer_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle item, System::Collections::Generic::IComparer_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle Find(System::Predicate_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> FindAll(System::Predicate_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle FindLast(System::Predicate_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 279 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<char16_t> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<char16_t>;

/// @brief Convert operator to System::Collections::Generic::IList_1<char16_t>
constexpr operator  System::Collections::Generic::IList_1<char16_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<char16_t>
constexpr operator  System::Collections::Generic::ICollection_1<char16_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<char16_t>
constexpr operator  System::Collections::Generic::IEnumerable_1<char16_t>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<char16_t>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<char16_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<char16_t>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<char16_t>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<char16_t> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<char16_t> value) ;

constexpr ::ArrayW<char16_t> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<char16_t> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<char16_t> value) ;

static ::ArrayW<char16_t> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 char16_t __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<char16_t>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<char16_t> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<char16_t> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 char16_t get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, char16_t value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(char16_t item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(char16_t item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<char16_t> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<char16_t> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, char16_t item, System::Collections::Generic::IComparer_1<char16_t> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(char16_t item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(char16_t item, System::Collections::Generic::IComparer_1<char16_t> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(char16_t item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<char16_t,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<char16_t> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<char16_t> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<char16_t> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 char16_t Find(System::Predicate_1<char16_t> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<char16_t> FindAll(System::Predicate_1<char16_t> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<char16_t> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<char16_t> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 char16_t FindLast(System::Predicate_1<char16_t> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<char16_t> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<char16_t> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<char16_t> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<char16_t> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(char16_t item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, char16_t item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<char16_t> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(char16_t item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<char16_t> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<char16_t> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<char16_t> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<char16_t> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<char16_t> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<char16_t> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 280 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::Color> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::Color>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::Color>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::Color>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::Color>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::Color>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::Color>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::Color>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::Color>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::Color>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Color>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Color>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::Color> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::Color> value) ;

constexpr ::ArrayW<UnityEngine::Color> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::Color> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::Color> value) ;

static ::ArrayW<UnityEngine::Color> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::Color __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::Color>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::Color> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::Color> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Color get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::Color value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::Color item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::Color item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::Color> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::Color> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::Color item, System::Collections::Generic::IComparer_1<UnityEngine::Color> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::Color item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::Color item, System::Collections::Generic::IComparer_1<UnityEngine::Color> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::Color item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::Color,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::Color> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::Color> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::Color> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::Color Find(System::Predicate_1<UnityEngine::Color> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::Color> FindAll(System::Predicate_1<UnityEngine::Color> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::Color> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::Color> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::Color FindLast(System::Predicate_1<UnityEngine::Color> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::Color> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::Color> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::Color> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::Color> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::Color item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::Color item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::Color> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::Color item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::Color> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::Color> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::Color> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::Color> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::Color> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::Color> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 289 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> value) ;

constexpr ::ArrayW<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> value) ;

static ::ArrayW<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent item, System::Collections::Generic::IComparer_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent item, System::Collections::Generic::IComparer_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent Find(System::Predicate_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> FindAll(System::Predicate_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent FindLast(System::Predicate_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 315 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::InputSystem::LowLevel::InputEventPtr> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::LowLevel::InputEventPtr>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::InputSystem::LowLevel::InputEventPtr>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::InputSystem::LowLevel::InputEventPtr>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::LowLevel::InputEventPtr>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::LowLevel::InputEventPtr>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::LowLevel::InputEventPtr>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::LowLevel::InputEventPtr>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::LowLevel::InputEventPtr>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::LowLevel::InputEventPtr>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::LowLevel::InputEventPtr>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::LowLevel::InputEventPtr>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::InputSystem::LowLevel::InputEventPtr> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::InputSystem::LowLevel::InputEventPtr> value) ;

constexpr ::ArrayW<UnityEngine::InputSystem::LowLevel::InputEventPtr> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::InputSystem::LowLevel::InputEventPtr> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::InputSystem::LowLevel::InputEventPtr> value) ;

static ::ArrayW<UnityEngine::InputSystem::LowLevel::InputEventPtr> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::InputSystem::LowLevel::InputEventPtr __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::LowLevel::InputEventPtr>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::LowLevel::InputEventPtr> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::LowLevel::InputEventPtr> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::LowLevel::InputEventPtr get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::InputSystem::LowLevel::InputEventPtr value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::InputSystem::LowLevel::InputEventPtr item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::InputSystem::LowLevel::InputEventPtr item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::LowLevel::InputEventPtr> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::InputSystem::LowLevel::InputEventPtr> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::InputSystem::LowLevel::InputEventPtr item, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::LowLevel::InputEventPtr> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::InputSystem::LowLevel::InputEventPtr item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::InputSystem::LowLevel::InputEventPtr item, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::LowLevel::InputEventPtr> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::InputSystem::LowLevel::InputEventPtr item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::InputSystem::LowLevel::InputEventPtr,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::InputSystem::LowLevel::InputEventPtr> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::InputSystem::LowLevel::InputEventPtr> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::InputSystem::LowLevel::InputEventPtr> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::InputSystem::LowLevel::InputEventPtr Find(System::Predicate_1<UnityEngine::InputSystem::LowLevel::InputEventPtr> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::InputSystem::LowLevel::InputEventPtr> FindAll(System::Predicate_1<UnityEngine::InputSystem::LowLevel::InputEventPtr> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::InputSystem::LowLevel::InputEventPtr> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::InputSystem::LowLevel::InputEventPtr> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::InputSystem::LowLevel::InputEventPtr FindLast(System::Predicate_1<UnityEngine::InputSystem::LowLevel::InputEventPtr> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::InputSystem::LowLevel::InputEventPtr> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::LowLevel::InputEventPtr> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::LowLevel::InputEventPtr> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::InputSystem::LowLevel::InputEventPtr> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::InputSystem::LowLevel::InputEventPtr item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::InputSystem::LowLevel::InputEventPtr item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::LowLevel::InputEventPtr> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::InputSystem::LowLevel::InputEventPtr item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::InputSystem::LowLevel::InputEventPtr> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::LowLevel::InputEventPtr> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::LowLevel::InputEventPtr> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::InputSystem::LowLevel::InputEventPtr> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::InputSystem::LowLevel::InputEventPtr> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::LowLevel::InputEventPtr> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 374 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<float_t> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<float_t>;

/// @brief Convert operator to System::Collections::Generic::IList_1<float_t>
constexpr operator  System::Collections::Generic::IList_1<float_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<float_t>
constexpr operator  System::Collections::Generic::ICollection_1<float_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<float_t>
constexpr operator  System::Collections::Generic::IEnumerable_1<float_t>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<float_t>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<float_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<float_t>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<float_t>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<float_t> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<float_t> value) ;

constexpr ::ArrayW<float_t> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<float_t> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<float_t> value) ;

static ::ArrayW<float_t> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 float_t __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<float_t>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<float_t> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<float_t> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 float_t get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, float_t value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(float_t item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(float_t item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<float_t> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<float_t> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, float_t item, System::Collections::Generic::IComparer_1<float_t> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(float_t item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(float_t item, System::Collections::Generic::IComparer_1<float_t> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(float_t item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<float_t,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<float_t> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<float_t> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<float_t> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 float_t Find(System::Predicate_1<float_t> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<float_t> FindAll(System::Predicate_1<float_t> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<float_t> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<float_t> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 float_t FindLast(System::Predicate_1<float_t> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<float_t> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<float_t> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<float_t> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<float_t> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(float_t item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, float_t item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<float_t> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(float_t item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<float_t> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<float_t> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<float_t> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<float_t> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<float_t> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<float_t> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 389 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<uint64_t> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<uint64_t>;

/// @brief Convert operator to System::Collections::Generic::IList_1<uint64_t>
constexpr operator  System::Collections::Generic::IList_1<uint64_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<uint64_t>
constexpr operator  System::Collections::Generic::ICollection_1<uint64_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<uint64_t>
constexpr operator  System::Collections::Generic::IEnumerable_1<uint64_t>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<uint64_t>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<uint64_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<uint64_t>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<uint64_t>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<uint64_t> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<uint64_t> value) ;

constexpr ::ArrayW<uint64_t> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<uint64_t> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<uint64_t> value) ;

static ::ArrayW<uint64_t> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 uint64_t __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<uint64_t>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<uint64_t> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<uint64_t> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 uint64_t get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, uint64_t value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(uint64_t item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(uint64_t item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<uint64_t> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<uint64_t> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, uint64_t item, System::Collections::Generic::IComparer_1<uint64_t> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(uint64_t item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(uint64_t item, System::Collections::Generic::IComparer_1<uint64_t> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(uint64_t item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<uint64_t,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<uint64_t> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<uint64_t> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<uint64_t> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 uint64_t Find(System::Predicate_1<uint64_t> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<uint64_t> FindAll(System::Predicate_1<uint64_t> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<uint64_t> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<uint64_t> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 uint64_t FindLast(System::Predicate_1<uint64_t> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<uint64_t> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<uint64_t> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<uint64_t> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<uint64_t> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(uint64_t item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, uint64_t item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<uint64_t> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(uint64_t item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<uint64_t> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<uint64_t> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<uint64_t> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<uint64_t> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<uint64_t> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<uint64_t> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 393 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::Vector2> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::Vector2>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::Vector2>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::Vector2>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::Vector2>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::Vector2>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::Vector2>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::Vector2>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::Vector2>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::Vector2>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Vector2>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Vector2>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::Vector2> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::Vector2> value) ;

constexpr ::ArrayW<UnityEngine::Vector2> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::Vector2> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::Vector2> value) ;

static ::ArrayW<UnityEngine::Vector2> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::Vector2 __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::Vector2>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::Vector2> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::Vector2> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Vector2 get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::Vector2 value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::Vector2 item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::Vector2 item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::Vector2> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::Vector2> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::Vector2 item, System::Collections::Generic::IComparer_1<UnityEngine::Vector2> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::Vector2 item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::Vector2 item, System::Collections::Generic::IComparer_1<UnityEngine::Vector2> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::Vector2 item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::Vector2,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::Vector2> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::Vector2> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::Vector2> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::Vector2 Find(System::Predicate_1<UnityEngine::Vector2> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::Vector2> FindAll(System::Predicate_1<UnityEngine::Vector2> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::Vector2> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::Vector2> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::Vector2 FindLast(System::Predicate_1<UnityEngine::Vector2> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::Vector2> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::Vector2> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::Vector2> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::Vector2> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::Vector2 item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::Vector2 item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::Vector2> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::Vector2 item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::Vector2> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::Vector2> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::Vector2> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::Vector2> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::Vector2> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::Vector2> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 394 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::Vector3> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::Vector3>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::Vector3>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::Vector3>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::Vector3>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::Vector3>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::Vector3>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::Vector3>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::Vector3>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::Vector3>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Vector3>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Vector3>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::Vector3> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::Vector3> value) ;

constexpr ::ArrayW<UnityEngine::Vector3> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::Vector3> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::Vector3> value) ;

static ::ArrayW<UnityEngine::Vector3> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::Vector3 __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::Vector3>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::Vector3> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::Vector3> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Vector3 get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::Vector3 value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::Vector3 item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::Vector3 item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::Vector3> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::Vector3> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::Vector3 item, System::Collections::Generic::IComparer_1<UnityEngine::Vector3> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::Vector3 item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::Vector3 item, System::Collections::Generic::IComparer_1<UnityEngine::Vector3> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::Vector3 item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::Vector3,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::Vector3> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::Vector3> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::Vector3> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::Vector3 Find(System::Predicate_1<UnityEngine::Vector3> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::Vector3> FindAll(System::Predicate_1<UnityEngine::Vector3> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::Vector3> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::Vector3> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::Vector3 FindLast(System::Predicate_1<UnityEngine::Vector3> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::Vector3> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::Vector3> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::Vector3> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::Vector3> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::Vector3 item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::Vector3 item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::Vector3> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::Vector3 item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::Vector3> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::Vector3> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::Vector3> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::Vector3> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::Vector3> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::Vector3> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 399 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::XR::XRNodeState> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::XR::XRNodeState>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::XR::XRNodeState>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::XR::XRNodeState>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::XR::XRNodeState>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::XR::XRNodeState>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::XR::XRNodeState>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::XR::XRNodeState>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::XR::XRNodeState>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::XR::XRNodeState>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::XR::XRNodeState>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::XR::XRNodeState>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::XR::XRNodeState> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::XR::XRNodeState> value) ;

constexpr ::ArrayW<UnityEngine::XR::XRNodeState> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::XR::XRNodeState> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::XR::XRNodeState> value) ;

static ::ArrayW<UnityEngine::XR::XRNodeState> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::XR::XRNodeState __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::XR::XRNodeState>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::XR::XRNodeState> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::XR::XRNodeState> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::XR::XRNodeState get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::XR::XRNodeState value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::XR::XRNodeState item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::XR::XRNodeState item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::XR::XRNodeState> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::XR::XRNodeState> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::XR::XRNodeState item, System::Collections::Generic::IComparer_1<UnityEngine::XR::XRNodeState> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::XR::XRNodeState item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::XR::XRNodeState item, System::Collections::Generic::IComparer_1<UnityEngine::XR::XRNodeState> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::XR::XRNodeState item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::XR::XRNodeState,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::XR::XRNodeState> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::XR::XRNodeState> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::XR::XRNodeState> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::XR::XRNodeState Find(System::Predicate_1<UnityEngine::XR::XRNodeState> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::XR::XRNodeState> FindAll(System::Predicate_1<UnityEngine::XR::XRNodeState> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::XR::XRNodeState> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::XR::XRNodeState> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::XR::XRNodeState FindLast(System::Predicate_1<UnityEngine::XR::XRNodeState> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::XR::XRNodeState> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::XR::XRNodeState> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::XR::XRNodeState> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::XR::XRNodeState> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::XR::XRNodeState item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::XR::XRNodeState item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::XR::XRNodeState> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::XR::XRNodeState item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::XR::XRNodeState> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::XR::XRNodeState> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::XR::XRNodeState> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::XR::XRNodeState> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::XR::XRNodeState> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::XR::XRNodeState> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 716 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::BoneWeight> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::BoneWeight>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::BoneWeight>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::BoneWeight>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::BoneWeight>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::BoneWeight>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::BoneWeight>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::BoneWeight>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::BoneWeight>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::BoneWeight>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::BoneWeight>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::BoneWeight>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::BoneWeight> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::BoneWeight> value) ;

constexpr ::ArrayW<UnityEngine::BoneWeight> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::BoneWeight> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::BoneWeight> value) ;

static ::ArrayW<UnityEngine::BoneWeight> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::BoneWeight __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::BoneWeight>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::BoneWeight> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::BoneWeight> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::BoneWeight get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::BoneWeight value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::BoneWeight item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::BoneWeight item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::BoneWeight> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::BoneWeight> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::BoneWeight item, System::Collections::Generic::IComparer_1<UnityEngine::BoneWeight> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::BoneWeight item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::BoneWeight item, System::Collections::Generic::IComparer_1<UnityEngine::BoneWeight> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::BoneWeight item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::BoneWeight,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::BoneWeight> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::BoneWeight> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::BoneWeight> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::BoneWeight Find(System::Predicate_1<UnityEngine::BoneWeight> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::BoneWeight> FindAll(System::Predicate_1<UnityEngine::BoneWeight> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::BoneWeight> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::BoneWeight> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::BoneWeight FindLast(System::Predicate_1<UnityEngine::BoneWeight> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::BoneWeight> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::BoneWeight> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::BoneWeight> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::BoneWeight> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::BoneWeight item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::BoneWeight item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::BoneWeight> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::BoneWeight item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::BoneWeight> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::BoneWeight> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::BoneWeight> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::BoneWeight> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::BoneWeight> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::BoneWeight> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 718 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<uint8_t> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<uint8_t>;

/// @brief Convert operator to System::Collections::Generic::IList_1<uint8_t>
constexpr operator  System::Collections::Generic::IList_1<uint8_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<uint8_t>
constexpr operator  System::Collections::Generic::ICollection_1<uint8_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<uint8_t>
constexpr operator  System::Collections::Generic::IEnumerable_1<uint8_t>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<uint8_t>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<uint8_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<uint8_t>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<uint8_t>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<uint8_t> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<uint8_t> value) ;

constexpr ::ArrayW<uint8_t> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<uint8_t> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<uint8_t> value) ;

static ::ArrayW<uint8_t> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 uint8_t __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<uint8_t>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<uint8_t> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<uint8_t> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 uint8_t get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, uint8_t value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(uint8_t item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(uint8_t item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<uint8_t> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<uint8_t> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, uint8_t item, System::Collections::Generic::IComparer_1<uint8_t> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(uint8_t item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(uint8_t item, System::Collections::Generic::IComparer_1<uint8_t> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(uint8_t item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<uint8_t,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<uint8_t> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<uint8_t> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<uint8_t> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 uint8_t Find(System::Predicate_1<uint8_t> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<uint8_t> FindAll(System::Predicate_1<uint8_t> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<uint8_t> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<uint8_t> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 uint8_t FindLast(System::Predicate_1<uint8_t> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<uint8_t> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<uint8_t> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<uint8_t> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<uint8_t> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(uint8_t item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, uint8_t item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<uint8_t> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(uint8_t item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<uint8_t> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<uint8_t> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<uint8_t> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<uint8_t> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<uint8_t> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<uint8_t> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 719 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::Color32> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::Color32>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::Color32>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::Color32>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::Color32>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::Color32>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::Color32>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::Color32>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::Color32>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::Color32>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Color32>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Color32>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::Color32> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::Color32> value) ;

constexpr ::ArrayW<UnityEngine::Color32> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::Color32> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::Color32> value) ;

static ::ArrayW<UnityEngine::Color32> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::Color32 __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::Color32>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::Color32> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::Color32> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Color32 get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::Color32 value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::Color32 item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::Color32 item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::Color32> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::Color32> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::Color32 item, System::Collections::Generic::IComparer_1<UnityEngine::Color32> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::Color32 item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::Color32 item, System::Collections::Generic::IComparer_1<UnityEngine::Color32> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::Color32 item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::Color32,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::Color32> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::Color32> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::Color32> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::Color32 Find(System::Predicate_1<UnityEngine::Color32> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::Color32> FindAll(System::Predicate_1<UnityEngine::Color32> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::Color32> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::Color32> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::Color32 FindLast(System::Predicate_1<UnityEngine::Color32> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::Color32> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::Color32> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::Color32> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::Color32> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::Color32 item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::Color32 item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::Color32> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::Color32 item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::Color32> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::Color32> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::Color32> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::Color32> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::Color32> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::Color32> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 722 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<int16_t> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<int16_t>;

/// @brief Convert operator to System::Collections::Generic::IList_1<int16_t>
constexpr operator  System::Collections::Generic::IList_1<int16_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<int16_t>
constexpr operator  System::Collections::Generic::ICollection_1<int16_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<int16_t>
constexpr operator  System::Collections::Generic::IEnumerable_1<int16_t>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<int16_t>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<int16_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<int16_t>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<int16_t>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<int16_t> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<int16_t> value) ;

constexpr ::ArrayW<int16_t> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<int16_t> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<int16_t> value) ;

static ::ArrayW<int16_t> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 int16_t __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<int16_t>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<int16_t> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<int16_t> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 int16_t get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, int16_t value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(int16_t item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(int16_t item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<int16_t> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<int16_t> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, int16_t item, System::Collections::Generic::IComparer_1<int16_t> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int16_t item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int16_t item, System::Collections::Generic::IComparer_1<int16_t> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(int16_t item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<int16_t,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<int16_t> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<int16_t> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<int16_t> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 int16_t Find(System::Predicate_1<int16_t> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<int16_t> FindAll(System::Predicate_1<int16_t> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<int16_t> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<int16_t> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 int16_t FindLast(System::Predicate_1<int16_t> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<int16_t> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<int16_t> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<int16_t> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<int16_t> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(int16_t item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, int16_t item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<int16_t> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(int16_t item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<int16_t> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<int16_t> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<int16_t> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<int16_t> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<int16_t> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<int16_t> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 729 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<uint16_t> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<uint16_t>;

/// @brief Convert operator to System::Collections::Generic::IList_1<uint16_t>
constexpr operator  System::Collections::Generic::IList_1<uint16_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<uint16_t>
constexpr operator  System::Collections::Generic::ICollection_1<uint16_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<uint16_t>
constexpr operator  System::Collections::Generic::IEnumerable_1<uint16_t>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<uint16_t>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<uint16_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<uint16_t>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<uint16_t>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<uint16_t> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<uint16_t> value) ;

constexpr ::ArrayW<uint16_t> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<uint16_t> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<uint16_t> value) ;

static ::ArrayW<uint16_t> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 uint16_t __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<uint16_t>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<uint16_t> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<uint16_t> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 uint16_t get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, uint16_t value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(uint16_t item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(uint16_t item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<uint16_t> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<uint16_t> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, uint16_t item, System::Collections::Generic::IComparer_1<uint16_t> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(uint16_t item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(uint16_t item, System::Collections::Generic::IComparer_1<uint16_t> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(uint16_t item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<uint16_t,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<uint16_t> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<uint16_t> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<uint16_t> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 uint16_t Find(System::Predicate_1<uint16_t> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<uint16_t> FindAll(System::Predicate_1<uint16_t> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<uint16_t> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<uint16_t> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 uint16_t FindLast(System::Predicate_1<uint16_t> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<uint16_t> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<uint16_t> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<uint16_t> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<uint16_t> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(uint16_t item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, uint16_t item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<uint16_t> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(uint16_t item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<uint16_t> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<uint16_t> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<uint16_t> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<uint16_t> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<uint16_t> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<uint16_t> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 730 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<uint32_t> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<uint32_t>;

/// @brief Convert operator to System::Collections::Generic::IList_1<uint32_t>
constexpr operator  System::Collections::Generic::IList_1<uint32_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<uint32_t>
constexpr operator  System::Collections::Generic::ICollection_1<uint32_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<uint32_t>
constexpr operator  System::Collections::Generic::IEnumerable_1<uint32_t>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<uint32_t>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<uint32_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<uint32_t>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<uint32_t>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<uint32_t> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<uint32_t> value) ;

constexpr ::ArrayW<uint32_t> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<uint32_t> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<uint32_t> value) ;

static ::ArrayW<uint32_t> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 uint32_t __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<uint32_t>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<uint32_t> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<uint32_t> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 uint32_t get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, uint32_t value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(uint32_t item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(uint32_t item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<uint32_t> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<uint32_t> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, uint32_t item, System::Collections::Generic::IComparer_1<uint32_t> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(uint32_t item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(uint32_t item, System::Collections::Generic::IComparer_1<uint32_t> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(uint32_t item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<uint32_t,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<uint32_t> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<uint32_t> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<uint32_t> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 uint32_t Find(System::Predicate_1<uint32_t> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<uint32_t> FindAll(System::Predicate_1<uint32_t> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<uint32_t> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<uint32_t> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 uint32_t FindLast(System::Predicate_1<uint32_t> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<uint32_t> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<uint32_t> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<uint32_t> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<uint32_t> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(uint32_t item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, uint32_t item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<uint32_t> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(uint32_t item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<uint32_t> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<uint32_t> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<uint32_t> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<uint32_t> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<uint32_t> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<uint32_t> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 731 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::Vector3Int> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::Vector3Int>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::Vector3Int>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::Vector3Int>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::Vector3Int>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::Vector3Int>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::Vector3Int>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::Vector3Int>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::Vector3Int>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::Vector3Int>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Vector3Int>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Vector3Int>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::Vector3Int> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::Vector3Int> value) ;

constexpr ::ArrayW<UnityEngine::Vector3Int> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::Vector3Int> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::Vector3Int> value) ;

static ::ArrayW<UnityEngine::Vector3Int> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::Vector3Int __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::Vector3Int>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::Vector3Int> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::Vector3Int> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Vector3Int get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::Vector3Int value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::Vector3Int item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::Vector3Int item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::Vector3Int> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::Vector3Int> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::Vector3Int item, System::Collections::Generic::IComparer_1<UnityEngine::Vector3Int> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::Vector3Int item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::Vector3Int item, System::Collections::Generic::IComparer_1<UnityEngine::Vector3Int> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::Vector3Int item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::Vector3Int,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::Vector3Int> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::Vector3Int> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::Vector3Int> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::Vector3Int Find(System::Predicate_1<UnityEngine::Vector3Int> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::Vector3Int> FindAll(System::Predicate_1<UnityEngine::Vector3Int> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::Vector3Int> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::Vector3Int> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::Vector3Int FindLast(System::Predicate_1<UnityEngine::Vector3Int> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::Vector3Int> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::Vector3Int> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::Vector3Int> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::Vector3Int> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::Vector3Int item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::Vector3Int item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::Vector3Int> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::Vector3Int item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::Vector3Int> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::Vector3Int> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::Vector3Int> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::Vector3Int> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::Vector3Int> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::Vector3Int> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 732 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::Vector4> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::Vector4>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::Vector4>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::Vector4>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::Vector4>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::Vector4>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::Vector4>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::Vector4>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::Vector4>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::Vector4>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Vector4>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Vector4>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::Vector4> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::Vector4> value) ;

constexpr ::ArrayW<UnityEngine::Vector4> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::Vector4> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::Vector4> value) ;

static ::ArrayW<UnityEngine::Vector4> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::Vector4 __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::Vector4>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::Vector4> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::Vector4> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Vector4 get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::Vector4 value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::Vector4 item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::Vector4 item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::Vector4> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::Vector4> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::Vector4 item, System::Collections::Generic::IComparer_1<UnityEngine::Vector4> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::Vector4 item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::Vector4 item, System::Collections::Generic::IComparer_1<UnityEngine::Vector4> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::Vector4 item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::Vector4,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::Vector4> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::Vector4> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::Vector4> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::Vector4 Find(System::Predicate_1<UnityEngine::Vector4> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::Vector4> FindAll(System::Predicate_1<UnityEngine::Vector4> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::Vector4> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::Vector4> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::Vector4 FindLast(System::Predicate_1<UnityEngine::Vector4> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::Vector4> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::Vector4> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::Vector4> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::Vector4> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::Vector4 item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::Vector4 item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::Vector4> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::Vector4 item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::Vector4> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::Vector4> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::Vector4> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::Vector4> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::Vector4> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::Vector4> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 734 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::Rendering::VertexAttributeDescriptor> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::Rendering::VertexAttributeDescriptor>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::Rendering::VertexAttributeDescriptor>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::Rendering::VertexAttributeDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::Rendering::VertexAttributeDescriptor>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::Rendering::VertexAttributeDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::Rendering::VertexAttributeDescriptor>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::Rendering::VertexAttributeDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::Rendering::VertexAttributeDescriptor>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::Rendering::VertexAttributeDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Rendering::VertexAttributeDescriptor>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Rendering::VertexAttributeDescriptor>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::Rendering::VertexAttributeDescriptor> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::Rendering::VertexAttributeDescriptor> value) ;

constexpr ::ArrayW<UnityEngine::Rendering::VertexAttributeDescriptor> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::Rendering::VertexAttributeDescriptor> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::Rendering::VertexAttributeDescriptor> value) ;

static ::ArrayW<UnityEngine::Rendering::VertexAttributeDescriptor> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::Rendering::VertexAttributeDescriptor __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::Rendering::VertexAttributeDescriptor>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::Rendering::VertexAttributeDescriptor> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::Rendering::VertexAttributeDescriptor> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Rendering::VertexAttributeDescriptor get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::Rendering::VertexAttributeDescriptor value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::Rendering::VertexAttributeDescriptor item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::Rendering::VertexAttributeDescriptor item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::Rendering::VertexAttributeDescriptor> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::Rendering::VertexAttributeDescriptor> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::Rendering::VertexAttributeDescriptor item, System::Collections::Generic::IComparer_1<UnityEngine::Rendering::VertexAttributeDescriptor> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::Rendering::VertexAttributeDescriptor item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::Rendering::VertexAttributeDescriptor item, System::Collections::Generic::IComparer_1<UnityEngine::Rendering::VertexAttributeDescriptor> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::Rendering::VertexAttributeDescriptor item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::Rendering::VertexAttributeDescriptor,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::Rendering::VertexAttributeDescriptor> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::Rendering::VertexAttributeDescriptor> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::Rendering::VertexAttributeDescriptor> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::Rendering::VertexAttributeDescriptor Find(System::Predicate_1<UnityEngine::Rendering::VertexAttributeDescriptor> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::Rendering::VertexAttributeDescriptor> FindAll(System::Predicate_1<UnityEngine::Rendering::VertexAttributeDescriptor> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::Rendering::VertexAttributeDescriptor> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::Rendering::VertexAttributeDescriptor> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::Rendering::VertexAttributeDescriptor FindLast(System::Predicate_1<UnityEngine::Rendering::VertexAttributeDescriptor> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::Rendering::VertexAttributeDescriptor> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::Rendering::VertexAttributeDescriptor> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::Rendering::VertexAttributeDescriptor> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::Rendering::VertexAttributeDescriptor> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::Rendering::VertexAttributeDescriptor item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::Rendering::VertexAttributeDescriptor item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::Rendering::VertexAttributeDescriptor> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::Rendering::VertexAttributeDescriptor item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::Rendering::VertexAttributeDescriptor> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::Rendering::VertexAttributeDescriptor> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::Rendering::VertexAttributeDescriptor> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::Rendering::VertexAttributeDescriptor> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::Rendering::VertexAttributeDescriptor> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::Rendering::VertexAttributeDescriptor> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 831 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<int64_t> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<int64_t>;

/// @brief Convert operator to System::Collections::Generic::IList_1<int64_t>
constexpr operator  System::Collections::Generic::IList_1<int64_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<int64_t>
constexpr operator  System::Collections::Generic::ICollection_1<int64_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<int64_t>
constexpr operator  System::Collections::Generic::IEnumerable_1<int64_t>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<int64_t>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<int64_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<int64_t>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<int64_t>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<int64_t> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<int64_t> value) ;

constexpr ::ArrayW<int64_t> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<int64_t> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<int64_t> value) ;

static ::ArrayW<int64_t> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 int64_t __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<int64_t>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<int64_t> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<int64_t> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 int64_t get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, int64_t value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(int64_t item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(int64_t item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<int64_t> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<int64_t> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, int64_t item, System::Collections::Generic::IComparer_1<int64_t> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int64_t item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int64_t item, System::Collections::Generic::IComparer_1<int64_t> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(int64_t item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<int64_t,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<int64_t> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<int64_t> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<int64_t> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 int64_t Find(System::Predicate_1<int64_t> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<int64_t> FindAll(System::Predicate_1<int64_t> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<int64_t> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<int64_t> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 int64_t FindLast(System::Predicate_1<int64_t> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<int64_t> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<int64_t> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<int64_t> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<int64_t> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(int64_t item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, int64_t item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<int64_t> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(int64_t item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<int64_t> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<int64_t> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<int64_t> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<int64_t> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<int64_t> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<int64_t> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 1007 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> value) ;

constexpr ::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> value) ;

static ::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t> __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t> get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t> value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t> item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t> item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t> item, System::Collections::Generic::IComparer_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t> item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t> item, System::Collections::Generic::IComparer_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t> item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t> Find(System::Predicate_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> FindAll(System::Predicate_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t> FindLast(System::Predicate_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t> item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t> item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t> item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 1008 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> value) ;

constexpr ::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> value) ;

static ::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2> __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2> get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2> value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2> item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2> item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2> item, System::Collections::Generic::IComparer_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2> item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2> item, System::Collections::Generic::IComparer_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2> item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2> Find(System::Predicate_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> FindAll(System::Predicate_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2> FindLast(System::Predicate_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2> item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2> item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2> item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 1015 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<GlobalNamespace::OVRSpaceUser> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<GlobalNamespace::OVRSpaceUser>;

/// @brief Convert operator to System::Collections::Generic::IList_1<GlobalNamespace::OVRSpaceUser>
constexpr operator  System::Collections::Generic::IList_1<GlobalNamespace::OVRSpaceUser>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<GlobalNamespace::OVRSpaceUser>
constexpr operator  System::Collections::Generic::ICollection_1<GlobalNamespace::OVRSpaceUser>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<GlobalNamespace::OVRSpaceUser>
constexpr operator  System::Collections::Generic::IEnumerable_1<GlobalNamespace::OVRSpaceUser>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::OVRSpaceUser>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::OVRSpaceUser>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::OVRSpaceUser>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::OVRSpaceUser>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<GlobalNamespace::OVRSpaceUser> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<GlobalNamespace::OVRSpaceUser> value) ;

constexpr ::ArrayW<GlobalNamespace::OVRSpaceUser> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<GlobalNamespace::OVRSpaceUser> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<GlobalNamespace::OVRSpaceUser> value) ;

static ::ArrayW<GlobalNamespace::OVRSpaceUser> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 GlobalNamespace::OVRSpaceUser __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<GlobalNamespace::OVRSpaceUser>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<GlobalNamespace::OVRSpaceUser> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<GlobalNamespace::OVRSpaceUser> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::OVRSpaceUser get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, GlobalNamespace::OVRSpaceUser value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(GlobalNamespace::OVRSpaceUser item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(GlobalNamespace::OVRSpaceUser item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<GlobalNamespace::OVRSpaceUser> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<GlobalNamespace::OVRSpaceUser> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, GlobalNamespace::OVRSpaceUser item, System::Collections::Generic::IComparer_1<GlobalNamespace::OVRSpaceUser> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(GlobalNamespace::OVRSpaceUser item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(GlobalNamespace::OVRSpaceUser item, System::Collections::Generic::IComparer_1<GlobalNamespace::OVRSpaceUser> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(GlobalNamespace::OVRSpaceUser item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<GlobalNamespace::OVRSpaceUser,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<GlobalNamespace::OVRSpaceUser> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<GlobalNamespace::OVRSpaceUser> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<GlobalNamespace::OVRSpaceUser> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 GlobalNamespace::OVRSpaceUser Find(System::Predicate_1<GlobalNamespace::OVRSpaceUser> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<GlobalNamespace::OVRSpaceUser> FindAll(System::Predicate_1<GlobalNamespace::OVRSpaceUser> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<GlobalNamespace::OVRSpaceUser> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<GlobalNamespace::OVRSpaceUser> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 GlobalNamespace::OVRSpaceUser FindLast(System::Predicate_1<GlobalNamespace::OVRSpaceUser> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<GlobalNamespace::OVRSpaceUser> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<GlobalNamespace::OVRSpaceUser> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<GlobalNamespace::OVRSpaceUser> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<GlobalNamespace::OVRSpaceUser> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(GlobalNamespace::OVRSpaceUser item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, GlobalNamespace::OVRSpaceUser item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<GlobalNamespace::OVRSpaceUser> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(GlobalNamespace::OVRSpaceUser item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<GlobalNamespace::OVRSpaceUser> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<GlobalNamespace::OVRSpaceUser> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<GlobalNamespace::OVRSpaceUser> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<GlobalNamespace::OVRSpaceUser> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<GlobalNamespace::OVRSpaceUser> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<GlobalNamespace::OVRSpaceUser> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 1017 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::EventSystems::RaycastResult> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::EventSystems::RaycastResult>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::EventSystems::RaycastResult>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::EventSystems::RaycastResult>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::EventSystems::RaycastResult>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::EventSystems::RaycastResult>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::EventSystems::RaycastResult>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::EventSystems::RaycastResult>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::EventSystems::RaycastResult>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::EventSystems::RaycastResult>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::EventSystems::RaycastResult>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::EventSystems::RaycastResult>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::EventSystems::RaycastResult> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::EventSystems::RaycastResult> value) ;

constexpr ::ArrayW<UnityEngine::EventSystems::RaycastResult> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::EventSystems::RaycastResult> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::EventSystems::RaycastResult> value) ;

static ::ArrayW<UnityEngine::EventSystems::RaycastResult> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::EventSystems::RaycastResult __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::EventSystems::RaycastResult>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::EventSystems::RaycastResult> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::EventSystems::RaycastResult> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::EventSystems::RaycastResult get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::EventSystems::RaycastResult value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::EventSystems::RaycastResult item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::EventSystems::RaycastResult item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::EventSystems::RaycastResult> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::EventSystems::RaycastResult> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::EventSystems::RaycastResult item, System::Collections::Generic::IComparer_1<UnityEngine::EventSystems::RaycastResult> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::EventSystems::RaycastResult item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::EventSystems::RaycastResult item, System::Collections::Generic::IComparer_1<UnityEngine::EventSystems::RaycastResult> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::EventSystems::RaycastResult item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::EventSystems::RaycastResult,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::EventSystems::RaycastResult> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::EventSystems::RaycastResult> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::EventSystems::RaycastResult> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::EventSystems::RaycastResult Find(System::Predicate_1<UnityEngine::EventSystems::RaycastResult> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::EventSystems::RaycastResult> FindAll(System::Predicate_1<UnityEngine::EventSystems::RaycastResult> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::EventSystems::RaycastResult> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::EventSystems::RaycastResult> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::EventSystems::RaycastResult FindLast(System::Predicate_1<UnityEngine::EventSystems::RaycastResult> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::EventSystems::RaycastResult> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::EventSystems::RaycastResult> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::EventSystems::RaycastResult> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::EventSystems::RaycastResult> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::EventSystems::RaycastResult item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::EventSystems::RaycastResult item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::EventSystems::RaycastResult> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::EventSystems::RaycastResult item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::EventSystems::RaycastResult> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::EventSystems::RaycastResult> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::EventSystems::RaycastResult> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::EventSystems::RaycastResult> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::EventSystems::RaycastResult> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::EventSystems::RaycastResult> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 1018 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> value) ;

constexpr ::ArrayW<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> value) ;

static ::ArrayW<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::UIElements::StyleSheets::SelectorMatchRecord __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::StyleSheets::SelectorMatchRecord get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::UIElements::StyleSheets::SelectorMatchRecord value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::UIElements::StyleSheets::SelectorMatchRecord item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::UIElements::StyleSheets::SelectorMatchRecord item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::UIElements::StyleSheets::SelectorMatchRecord item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::StyleSheets::SelectorMatchRecord item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::StyleSheets::SelectorMatchRecord item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::StyleSheets::SelectorMatchRecord item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::StyleSheets::SelectorMatchRecord Find(System::Predicate_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> FindAll(System::Predicate_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::StyleSheets::SelectorMatchRecord FindLast(System::Predicate_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::StyleSheets::SelectorMatchRecord item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::UIElements::StyleSheets::SelectorMatchRecord item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::UIElements::StyleSheets::SelectorMatchRecord item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 1021 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit>;

/// @brief Convert operator to System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit>
constexpr operator  System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit>
constexpr operator  System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit>
constexpr operator  System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> value) ;

constexpr ::ArrayW<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> value) ;

static ::ArrayW<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit item, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit item, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit Find(System::Predicate_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> FindAll(System::Predicate_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit FindLast(System::Predicate_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 1022 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> value) ;

constexpr ::ArrayW<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> value) ;

static ::ArrayW<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry item, System::Collections::Generic::IComparer_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry item, System::Collections::Generic::IComparer_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry Find(System::Predicate_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> FindAll(System::Predicate_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry FindLast(System::Predicate_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 1024 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> value) ;

constexpr ::ArrayW<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> value) ;

static ::ArrayW<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData item, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData item, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData Find(System::Predicate_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> FindAll(System::Predicate_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData FindLast(System::Predicate_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 1025 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult>;

/// @brief Convert operator to System::Collections::Generic::IList_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult>
constexpr operator  System::Collections::Generic::IList_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult>
constexpr operator  System::Collections::Generic::ICollection_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult>
constexpr operator  System::Collections::Generic::IEnumerable_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> value) ;

constexpr ::ArrayW<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> value) ;

static ::ArrayW<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult item, System::Collections::Generic::IComparer_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult item, System::Collections::Generic::IComparer_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult Find(System::Predicate_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> FindAll(System::Predicate_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult FindLast(System::Predicate_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 1613 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::UIElements::StylePropertyName> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::StylePropertyName>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::StylePropertyName>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::StylePropertyName>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::StylePropertyName>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::StylePropertyName>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StylePropertyName>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StylePropertyName>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::StylePropertyName>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::StylePropertyName>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::StylePropertyName>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::StylePropertyName>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::UIElements::StylePropertyName> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::UIElements::StylePropertyName> value) ;

constexpr ::ArrayW<UnityEngine::UIElements::StylePropertyName> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::UIElements::StylePropertyName> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::UIElements::StylePropertyName> value) ;

static ::ArrayW<UnityEngine::UIElements::StylePropertyName> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::UIElements::StylePropertyName __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StylePropertyName>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StylePropertyName> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StylePropertyName> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::StylePropertyName get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::UIElements::StylePropertyName value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::UIElements::StylePropertyName item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::UIElements::StylePropertyName item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StylePropertyName> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::UIElements::StylePropertyName> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::UIElements::StylePropertyName item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::StylePropertyName> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::StylePropertyName item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::StylePropertyName item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::StylePropertyName> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::StylePropertyName item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::UIElements::StylePropertyName,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::UIElements::StylePropertyName> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::StylePropertyName> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::UIElements::StylePropertyName> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::StylePropertyName Find(System::Predicate_1<UnityEngine::UIElements::StylePropertyName> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::StylePropertyName> FindAll(System::Predicate_1<UnityEngine::UIElements::StylePropertyName> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::UIElements::StylePropertyName> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::UIElements::StylePropertyName> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::StylePropertyName FindLast(System::Predicate_1<UnityEngine::UIElements::StylePropertyName> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::UIElements::StylePropertyName> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::StylePropertyName> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::StylePropertyName> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::StylePropertyName> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::StylePropertyName item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::UIElements::StylePropertyName item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StylePropertyName> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::UIElements::StylePropertyName item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::UIElements::StylePropertyName> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::UIElements::StylePropertyName> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::StylePropertyName> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::UIElements::StylePropertyName> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::UIElements::StylePropertyName> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StylePropertyName> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 1618 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> value) ;

constexpr ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> value) ;

static ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry Find(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> FindAll(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry FindLast(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 2495 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::ProBuilder::Edge> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::ProBuilder::Edge>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::ProBuilder::Edge>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::ProBuilder::Edge>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::ProBuilder::Edge>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::ProBuilder::Edge>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::Edge>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::Edge>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::ProBuilder::Edge>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::ProBuilder::Edge>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ProBuilder::Edge>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ProBuilder::Edge>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::ProBuilder::Edge> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::ProBuilder::Edge> value) ;

constexpr ::ArrayW<UnityEngine::ProBuilder::Edge> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::ProBuilder::Edge> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::ProBuilder::Edge> value) ;

static ::ArrayW<UnityEngine::ProBuilder::Edge> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::ProBuilder::Edge __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::Edge>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::Edge> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::Edge> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ProBuilder::Edge get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::ProBuilder::Edge value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::ProBuilder::Edge item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::ProBuilder::Edge item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::Edge> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::ProBuilder::Edge> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::ProBuilder::Edge item, System::Collections::Generic::IComparer_1<UnityEngine::ProBuilder::Edge> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::ProBuilder::Edge item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::ProBuilder::Edge item, System::Collections::Generic::IComparer_1<UnityEngine::ProBuilder::Edge> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::ProBuilder::Edge item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::ProBuilder::Edge,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::ProBuilder::Edge> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::ProBuilder::Edge> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::ProBuilder::Edge> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::ProBuilder::Edge Find(System::Predicate_1<UnityEngine::ProBuilder::Edge> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::ProBuilder::Edge> FindAll(System::Predicate_1<UnityEngine::ProBuilder::Edge> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::ProBuilder::Edge> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::ProBuilder::Edge> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::ProBuilder::Edge FindLast(System::Predicate_1<UnityEngine::ProBuilder::Edge> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::ProBuilder::Edge> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::ProBuilder::Edge> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::ProBuilder::Edge> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::ProBuilder::Edge> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::ProBuilder::Edge item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::ProBuilder::Edge item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::Edge> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::ProBuilder::Edge item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::ProBuilder::Edge> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::ProBuilder::Edge> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::ProBuilder::Edge> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::ProBuilder::Edge> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::ProBuilder::Edge> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::Edge> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 2496 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::ProBuilder::EdgeLookup> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::ProBuilder::EdgeLookup>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::ProBuilder::EdgeLookup>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::ProBuilder::EdgeLookup>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::ProBuilder::EdgeLookup>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::ProBuilder::EdgeLookup>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::EdgeLookup>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::EdgeLookup>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::ProBuilder::EdgeLookup>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::ProBuilder::EdgeLookup>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ProBuilder::EdgeLookup>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ProBuilder::EdgeLookup>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::ProBuilder::EdgeLookup> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::ProBuilder::EdgeLookup> value) ;

constexpr ::ArrayW<UnityEngine::ProBuilder::EdgeLookup> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::ProBuilder::EdgeLookup> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::ProBuilder::EdgeLookup> value) ;

static ::ArrayW<UnityEngine::ProBuilder::EdgeLookup> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::ProBuilder::EdgeLookup __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::EdgeLookup>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::EdgeLookup> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::EdgeLookup> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ProBuilder::EdgeLookup get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::ProBuilder::EdgeLookup value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::ProBuilder::EdgeLookup item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::ProBuilder::EdgeLookup item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::EdgeLookup> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::ProBuilder::EdgeLookup> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::ProBuilder::EdgeLookup item, System::Collections::Generic::IComparer_1<UnityEngine::ProBuilder::EdgeLookup> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::ProBuilder::EdgeLookup item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::ProBuilder::EdgeLookup item, System::Collections::Generic::IComparer_1<UnityEngine::ProBuilder::EdgeLookup> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::ProBuilder::EdgeLookup item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::ProBuilder::EdgeLookup,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::ProBuilder::EdgeLookup> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::ProBuilder::EdgeLookup> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::ProBuilder::EdgeLookup> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::ProBuilder::EdgeLookup Find(System::Predicate_1<UnityEngine::ProBuilder::EdgeLookup> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::ProBuilder::EdgeLookup> FindAll(System::Predicate_1<UnityEngine::ProBuilder::EdgeLookup> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::ProBuilder::EdgeLookup> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::ProBuilder::EdgeLookup> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::ProBuilder::EdgeLookup FindLast(System::Predicate_1<UnityEngine::ProBuilder::EdgeLookup> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::ProBuilder::EdgeLookup> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::ProBuilder::EdgeLookup> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::ProBuilder::EdgeLookup> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::ProBuilder::EdgeLookup> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::ProBuilder::EdgeLookup item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::ProBuilder::EdgeLookup item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::EdgeLookup> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::ProBuilder::EdgeLookup item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::ProBuilder::EdgeLookup> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::ProBuilder::EdgeLookup> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::ProBuilder::EdgeLookup> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::ProBuilder::EdgeLookup> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::ProBuilder::EdgeLookup> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::EdgeLookup> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 2498 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<System::Guid> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::Guid>;

/// @brief Convert operator to System::Collections::Generic::IList_1<System::Guid>
constexpr operator  System::Collections::Generic::IList_1<System::Guid>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::Guid>
constexpr operator  System::Collections::Generic::ICollection_1<System::Guid>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::Guid>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::Guid>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::Guid>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::Guid>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::Guid>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::Guid>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<System::Guid> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<System::Guid> value) ;

constexpr ::ArrayW<System::Guid> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<System::Guid> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<System::Guid> value) ;

static ::ArrayW<System::Guid> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 System::Guid __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<System::Guid>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<System::Guid> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<System::Guid> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Guid get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, System::Guid value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(System::Guid item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(System::Guid item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<System::Guid> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<System::Guid> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, System::Guid item, System::Collections::Generic::IComparer_1<System::Guid> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::Guid item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::Guid item, System::Collections::Generic::IComparer_1<System::Guid> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::Guid item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<System::Guid,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<System::Guid> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::Guid> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<System::Guid> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Guid Find(System::Predicate_1<System::Guid> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::Guid> FindAll(System::Predicate_1<System::Guid> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<System::Guid> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<System::Guid> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Guid FindLast(System::Predicate_1<System::Guid> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<System::Guid> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::Guid> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::Guid> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::Guid> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::Guid item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, System::Guid item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<System::Guid> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(System::Guid item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<System::Guid> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<System::Guid> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<System::Guid> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<System::Guid> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<System::Guid> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<System::Guid> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 2502 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::InputSystem::Utilities::InternedString> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::Utilities::InternedString>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::InternedString>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::InternedString>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::Utilities::InternedString>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::Utilities::InternedString>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::InternedString>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::InternedString>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::Utilities::InternedString>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::Utilities::InternedString>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::Utilities::InternedString>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::Utilities::InternedString>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::InputSystem::Utilities::InternedString> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::InputSystem::Utilities::InternedString> value) ;

constexpr ::ArrayW<UnityEngine::InputSystem::Utilities::InternedString> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::InputSystem::Utilities::InternedString> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::InputSystem::Utilities::InternedString> value) ;

static ::ArrayW<UnityEngine::InputSystem::Utilities::InternedString> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::InputSystem::Utilities::InternedString __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::InternedString>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::InternedString> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::InternedString> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::Utilities::InternedString get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::InputSystem::Utilities::InternedString value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::InputSystem::Utilities::InternedString item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::InputSystem::Utilities::InternedString item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::InternedString> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::InputSystem::Utilities::InternedString> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::InputSystem::Utilities::InternedString item, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::Utilities::InternedString> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::InputSystem::Utilities::InternedString item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::InputSystem::Utilities::InternedString item, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::Utilities::InternedString> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::InputSystem::Utilities::InternedString item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::InputSystem::Utilities::InternedString,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::InputSystem::Utilities::InternedString> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::InputSystem::Utilities::InternedString> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::InputSystem::Utilities::InternedString> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::InputSystem::Utilities::InternedString Find(System::Predicate_1<UnityEngine::InputSystem::Utilities::InternedString> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::InternedString> FindAll(System::Predicate_1<UnityEngine::InputSystem::Utilities::InternedString> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::InputSystem::Utilities::InternedString> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::InputSystem::Utilities::InternedString> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::InputSystem::Utilities::InternedString FindLast(System::Predicate_1<UnityEngine::InputSystem::Utilities::InternedString> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::InputSystem::Utilities::InternedString> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::Utilities::InternedString> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::Utilities::InternedString> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::InternedString> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::InputSystem::Utilities::InternedString item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::InputSystem::Utilities::InternedString item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::InternedString> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::InputSystem::Utilities::InternedString item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::InputSystem::Utilities::InternedString> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::Utilities::InternedString> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::Utilities::InternedString> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::InputSystem::Utilities::InternedString> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::InputSystem::Utilities::InternedString> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::InternedString> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 2599 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<System::DateTime> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::DateTime>;

/// @brief Convert operator to System::Collections::Generic::IList_1<System::DateTime>
constexpr operator  System::Collections::Generic::IList_1<System::DateTime>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::DateTime>
constexpr operator  System::Collections::Generic::ICollection_1<System::DateTime>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::DateTime>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::DateTime>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::DateTime>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::DateTime>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::DateTime>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::DateTime>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<System::DateTime> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<System::DateTime> value) ;

constexpr ::ArrayW<System::DateTime> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<System::DateTime> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<System::DateTime> value) ;

static ::ArrayW<System::DateTime> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 System::DateTime __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<System::DateTime>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<System::DateTime> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<System::DateTime> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::DateTime get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, System::DateTime value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(System::DateTime item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(System::DateTime item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<System::DateTime> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<System::DateTime> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, System::DateTime item, System::Collections::Generic::IComparer_1<System::DateTime> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::DateTime item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::DateTime item, System::Collections::Generic::IComparer_1<System::DateTime> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::DateTime item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<System::DateTime,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<System::DateTime> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::DateTime> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<System::DateTime> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 System::DateTime Find(System::Predicate_1<System::DateTime> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::DateTime> FindAll(System::Predicate_1<System::DateTime> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<System::DateTime> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<System::DateTime> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 System::DateTime FindLast(System::Predicate_1<System::DateTime> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<System::DateTime> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::DateTime> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::DateTime> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::DateTime> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::DateTime item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, System::DateTime item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<System::DateTime> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(System::DateTime item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<System::DateTime> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<System::DateTime> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<System::DateTime> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<System::DateTime> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<System::DateTime> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<System::DateTime> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 2600 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<System::DateTimeOffset> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::DateTimeOffset>;

/// @brief Convert operator to System::Collections::Generic::IList_1<System::DateTimeOffset>
constexpr operator  System::Collections::Generic::IList_1<System::DateTimeOffset>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::DateTimeOffset>
constexpr operator  System::Collections::Generic::ICollection_1<System::DateTimeOffset>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::DateTimeOffset>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::DateTimeOffset>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::DateTimeOffset>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::DateTimeOffset>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::DateTimeOffset>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::DateTimeOffset>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<System::DateTimeOffset> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<System::DateTimeOffset> value) ;

constexpr ::ArrayW<System::DateTimeOffset> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<System::DateTimeOffset> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<System::DateTimeOffset> value) ;

static ::ArrayW<System::DateTimeOffset> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 System::DateTimeOffset __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<System::DateTimeOffset>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<System::DateTimeOffset> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<System::DateTimeOffset> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::DateTimeOffset get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, System::DateTimeOffset value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(System::DateTimeOffset item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(System::DateTimeOffset item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<System::DateTimeOffset> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<System::DateTimeOffset> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, System::DateTimeOffset item, System::Collections::Generic::IComparer_1<System::DateTimeOffset> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::DateTimeOffset item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::DateTimeOffset item, System::Collections::Generic::IComparer_1<System::DateTimeOffset> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::DateTimeOffset item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<System::DateTimeOffset,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<System::DateTimeOffset> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::DateTimeOffset> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<System::DateTimeOffset> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 System::DateTimeOffset Find(System::Predicate_1<System::DateTimeOffset> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::DateTimeOffset> FindAll(System::Predicate_1<System::DateTimeOffset> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<System::DateTimeOffset> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<System::DateTimeOffset> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 System::DateTimeOffset FindLast(System::Predicate_1<System::DateTimeOffset> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<System::DateTimeOffset> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::DateTimeOffset> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::DateTimeOffset> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::DateTimeOffset> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::DateTimeOffset item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, System::DateTimeOffset item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<System::DateTimeOffset> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(System::DateTimeOffset item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<System::DateTimeOffset> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<System::DateTimeOffset> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<System::DateTimeOffset> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<System::DateTimeOffset> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<System::DateTimeOffset> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<System::DateTimeOffset> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 2601 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<System::Decimal> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::Decimal>;

/// @brief Convert operator to System::Collections::Generic::IList_1<System::Decimal>
constexpr operator  System::Collections::Generic::IList_1<System::Decimal>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::Decimal>
constexpr operator  System::Collections::Generic::ICollection_1<System::Decimal>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::Decimal>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::Decimal>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::Decimal>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::Decimal>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::Decimal>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::Decimal>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<System::Decimal> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<System::Decimal> value) ;

constexpr ::ArrayW<System::Decimal> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<System::Decimal> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<System::Decimal> value) ;

static ::ArrayW<System::Decimal> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 System::Decimal __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<System::Decimal>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<System::Decimal> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<System::Decimal> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Decimal get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, System::Decimal value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(System::Decimal item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(System::Decimal item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<System::Decimal> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<System::Decimal> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, System::Decimal item, System::Collections::Generic::IComparer_1<System::Decimal> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::Decimal item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::Decimal item, System::Collections::Generic::IComparer_1<System::Decimal> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::Decimal item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<System::Decimal,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<System::Decimal> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::Decimal> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<System::Decimal> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Decimal Find(System::Predicate_1<System::Decimal> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::Decimal> FindAll(System::Predicate_1<System::Decimal> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<System::Decimal> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<System::Decimal> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Decimal FindLast(System::Predicate_1<System::Decimal> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<System::Decimal> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::Decimal> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::Decimal> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::Decimal> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::Decimal item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, System::Decimal item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<System::Decimal> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(System::Decimal item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<System::Decimal> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<System::Decimal> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<System::Decimal> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<System::Decimal> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<System::Decimal> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<System::Decimal> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 2602 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<double_t> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<double_t>;

/// @brief Convert operator to System::Collections::Generic::IList_1<double_t>
constexpr operator  System::Collections::Generic::IList_1<double_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<double_t>
constexpr operator  System::Collections::Generic::ICollection_1<double_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<double_t>
constexpr operator  System::Collections::Generic::IEnumerable_1<double_t>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<double_t>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<double_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<double_t>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<double_t>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<double_t> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<double_t> value) ;

constexpr ::ArrayW<double_t> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<double_t> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<double_t> value) ;

static ::ArrayW<double_t> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 double_t __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<double_t>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<double_t> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<double_t> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 double_t get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, double_t value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(double_t item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(double_t item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<double_t> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<double_t> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, double_t item, System::Collections::Generic::IComparer_1<double_t> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(double_t item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(double_t item, System::Collections::Generic::IComparer_1<double_t> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(double_t item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<double_t,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<double_t> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<double_t> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<double_t> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 double_t Find(System::Predicate_1<double_t> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<double_t> FindAll(System::Predicate_1<double_t> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<double_t> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<double_t> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 double_t FindLast(System::Predicate_1<double_t> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<double_t> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<double_t> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<double_t> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<double_t> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(double_t item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, double_t item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<double_t> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(double_t item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<double_t> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<double_t> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<double_t> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<double_t> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<double_t> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<double_t> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 2605 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<int8_t> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<int8_t>;

/// @brief Convert operator to System::Collections::Generic::IList_1<int8_t>
constexpr operator  System::Collections::Generic::IList_1<int8_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<int8_t>
constexpr operator  System::Collections::Generic::ICollection_1<int8_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<int8_t>
constexpr operator  System::Collections::Generic::IEnumerable_1<int8_t>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<int8_t>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<int8_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<int8_t>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<int8_t>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<int8_t> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<int8_t> value) ;

constexpr ::ArrayW<int8_t> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<int8_t> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<int8_t> value) ;

static ::ArrayW<int8_t> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 int8_t __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<int8_t>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<int8_t> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<int8_t> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 int8_t get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, int8_t value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(int8_t item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(int8_t item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<int8_t> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<int8_t> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, int8_t item, System::Collections::Generic::IComparer_1<int8_t> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int8_t item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int8_t item, System::Collections::Generic::IComparer_1<int8_t> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(int8_t item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<int8_t,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<int8_t> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<int8_t> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<int8_t> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 int8_t Find(System::Predicate_1<int8_t> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<int8_t> FindAll(System::Predicate_1<int8_t> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<int8_t> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<int8_t> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 int8_t FindLast(System::Predicate_1<int8_t> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<int8_t> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<int8_t> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<int8_t> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<int8_t> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(int8_t item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, int8_t item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<int8_t> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(int8_t item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<int8_t> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<int8_t> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<int8_t> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<int8_t> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<int8_t> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<int8_t> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 2608 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::InputSystem::Utilities::Substring> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::Utilities::Substring>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::Substring>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::Substring>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::Utilities::Substring>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::Utilities::Substring>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::Substring>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::Substring>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::Utilities::Substring>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::Utilities::Substring>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::Utilities::Substring>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::Utilities::Substring>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::InputSystem::Utilities::Substring> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::InputSystem::Utilities::Substring> value) ;

constexpr ::ArrayW<UnityEngine::InputSystem::Utilities::Substring> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::InputSystem::Utilities::Substring> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::InputSystem::Utilities::Substring> value) ;

static ::ArrayW<UnityEngine::InputSystem::Utilities::Substring> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::InputSystem::Utilities::Substring __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::Substring>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::Substring> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::Substring> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::Utilities::Substring get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::InputSystem::Utilities::Substring value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::InputSystem::Utilities::Substring item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::InputSystem::Utilities::Substring item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::Substring> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::InputSystem::Utilities::Substring> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::InputSystem::Utilities::Substring item, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::Utilities::Substring> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::InputSystem::Utilities::Substring item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::InputSystem::Utilities::Substring item, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::Utilities::Substring> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::InputSystem::Utilities::Substring item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::InputSystem::Utilities::Substring,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::InputSystem::Utilities::Substring> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::InputSystem::Utilities::Substring> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::InputSystem::Utilities::Substring> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::InputSystem::Utilities::Substring Find(System::Predicate_1<UnityEngine::InputSystem::Utilities::Substring> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::Substring> FindAll(System::Predicate_1<UnityEngine::InputSystem::Utilities::Substring> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::InputSystem::Utilities::Substring> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::InputSystem::Utilities::Substring> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::InputSystem::Utilities::Substring FindLast(System::Predicate_1<UnityEngine::InputSystem::Utilities::Substring> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::InputSystem::Utilities::Substring> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::Utilities::Substring> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::Utilities::Substring> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::Substring> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::InputSystem::Utilities::Substring item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::InputSystem::Utilities::Substring item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::Substring> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::InputSystem::Utilities::Substring item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::InputSystem::Utilities::Substring> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::Utilities::Substring> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::Utilities::Substring> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::InputSystem::Utilities::Substring> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::InputSystem::Utilities::Substring> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::Substring> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 2609 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<System::TimeSpan> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::TimeSpan>;

/// @brief Convert operator to System::Collections::Generic::IList_1<System::TimeSpan>
constexpr operator  System::Collections::Generic::IList_1<System::TimeSpan>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::TimeSpan>
constexpr operator  System::Collections::Generic::ICollection_1<System::TimeSpan>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::TimeSpan>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::TimeSpan>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::TimeSpan>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::TimeSpan>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::TimeSpan>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::TimeSpan>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<System::TimeSpan> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<System::TimeSpan> value) ;

constexpr ::ArrayW<System::TimeSpan> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<System::TimeSpan> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<System::TimeSpan> value) ;

static ::ArrayW<System::TimeSpan> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 System::TimeSpan __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<System::TimeSpan>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<System::TimeSpan> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<System::TimeSpan> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::TimeSpan get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, System::TimeSpan value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(System::TimeSpan item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(System::TimeSpan item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<System::TimeSpan> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<System::TimeSpan> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, System::TimeSpan item, System::Collections::Generic::IComparer_1<System::TimeSpan> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::TimeSpan item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::TimeSpan item, System::Collections::Generic::IComparer_1<System::TimeSpan> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::TimeSpan item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<System::TimeSpan,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<System::TimeSpan> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::TimeSpan> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<System::TimeSpan> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 System::TimeSpan Find(System::Predicate_1<System::TimeSpan> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::TimeSpan> FindAll(System::Predicate_1<System::TimeSpan> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<System::TimeSpan> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<System::TimeSpan> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 System::TimeSpan FindLast(System::Predicate_1<System::TimeSpan> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<System::TimeSpan> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::TimeSpan> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::TimeSpan> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::TimeSpan> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::TimeSpan item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, System::TimeSpan item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<System::TimeSpan> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(System::TimeSpan item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<System::TimeSpan> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<System::TimeSpan> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<System::TimeSpan> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<System::TimeSpan> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<System::TimeSpan> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<System::TimeSpan> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 2636 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange>;

/// @brief Convert operator to System::Collections::Generic::IList_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange>
constexpr operator  System::Collections::Generic::IList_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange>
constexpr operator  System::Collections::Generic::ICollection_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> value) ;

constexpr ::ArrayW<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> value) ;

static ::ArrayW<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange item, System::Collections::Generic::IComparer_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange item, System::Collections::Generic::IComparer_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange Find(System::Predicate_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> FindAll(System::Predicate_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange FindLast(System::Predicate_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 2955 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>;

/// @brief Convert operator to System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>
constexpr operator  System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>
constexpr operator  System::Collections::Generic::ICollection_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> value) ;

constexpr ::ArrayW<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> value) ;

static ::ArrayW<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 System::Collections::Generic::KeyValuePair_2<int32_t,int32_t> __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::KeyValuePair_2<int32_t,int32_t> get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, System::Collections::Generic::KeyValuePair_2<int32_t,int32_t> value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(System::Collections::Generic::KeyValuePair_2<int32_t,int32_t> item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(System::Collections::Generic::KeyValuePair_2<int32_t,int32_t> item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, System::Collections::Generic::KeyValuePair_2<int32_t,int32_t> item, System::Collections::Generic::IComparer_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::Collections::Generic::KeyValuePair_2<int32_t,int32_t> item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::Collections::Generic::KeyValuePair_2<int32_t,int32_t> item, System::Collections::Generic::IComparer_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::Collections::Generic::KeyValuePair_2<int32_t,int32_t> item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::KeyValuePair_2<int32_t,int32_t> Find(System::Predicate_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> FindAll(System::Predicate_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::KeyValuePair_2<int32_t,int32_t> FindLast(System::Predicate_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::Collections::Generic::KeyValuePair_2<int32_t,int32_t> item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, System::Collections::Generic::KeyValuePair_2<int32_t,int32_t> item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(System::Collections::Generic::KeyValuePair_2<int32_t,int32_t> item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 2956 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>;

/// @brief Convert operator to System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::ICollection_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> value) ;

constexpr ::ArrayW<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> value) ;

static ::ArrayW<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item, System::Collections::Generic::IComparer_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item, System::Collections::Generic::IComparer_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> Find(System::Predicate_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> FindAll(System::Predicate_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> FindLast(System::Predicate_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 2977 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<Zenject::BindingId> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<Zenject::BindingId>;

/// @brief Convert operator to System::Collections::Generic::IList_1<Zenject::BindingId>
constexpr operator  System::Collections::Generic::IList_1<Zenject::BindingId>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<Zenject::BindingId>
constexpr operator  System::Collections::Generic::ICollection_1<Zenject::BindingId>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<Zenject::BindingId>
constexpr operator  System::Collections::Generic::IEnumerable_1<Zenject::BindingId>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<Zenject::BindingId>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<Zenject::BindingId>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<Zenject::BindingId>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<Zenject::BindingId>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<Zenject::BindingId> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<Zenject::BindingId> value) ;

constexpr ::ArrayW<Zenject::BindingId> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<Zenject::BindingId> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<Zenject::BindingId> value) ;

static ::ArrayW<Zenject::BindingId> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 Zenject::BindingId __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<Zenject::BindingId>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<Zenject::BindingId> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<Zenject::BindingId> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 Zenject::BindingId get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, Zenject::BindingId value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(Zenject::BindingId item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(Zenject::BindingId item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<Zenject::BindingId> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<Zenject::BindingId> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, Zenject::BindingId item, System::Collections::Generic::IComparer_1<Zenject::BindingId> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(Zenject::BindingId item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(Zenject::BindingId item, System::Collections::Generic::IComparer_1<Zenject::BindingId> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(Zenject::BindingId item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<Zenject::BindingId,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<Zenject::BindingId> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<Zenject::BindingId> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<Zenject::BindingId> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 Zenject::BindingId Find(System::Predicate_1<Zenject::BindingId> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<Zenject::BindingId> FindAll(System::Predicate_1<Zenject::BindingId> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<Zenject::BindingId> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<Zenject::BindingId> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 Zenject::BindingId FindLast(System::Predicate_1<Zenject::BindingId> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<Zenject::BindingId> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<Zenject::BindingId> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<Zenject::BindingId> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<Zenject::BindingId> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(Zenject::BindingId item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, Zenject::BindingId item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<Zenject::BindingId> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(Zenject::BindingId item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<Zenject::BindingId> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<Zenject::BindingId> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<Zenject::BindingId> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<Zenject::BindingId> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<Zenject::BindingId> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<Zenject::BindingId> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 3000 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::InputSystem::InputBinding> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::InputBinding>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::InputSystem::InputBinding>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::InputSystem::InputBinding>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::InputBinding>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::InputBinding>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::InputBinding>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::InputBinding>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::InputBinding>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::InputBinding>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::InputBinding>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::InputBinding>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::InputSystem::InputBinding> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::InputSystem::InputBinding> value) ;

constexpr ::ArrayW<UnityEngine::InputSystem::InputBinding> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::InputSystem::InputBinding> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::InputSystem::InputBinding> value) ;

static ::ArrayW<UnityEngine::InputSystem::InputBinding> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::InputSystem::InputBinding __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::InputBinding>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::InputBinding> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::InputBinding> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::InputBinding get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::InputSystem::InputBinding value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::InputSystem::InputBinding item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::InputSystem::InputBinding item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::InputBinding> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::InputSystem::InputBinding> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::InputSystem::InputBinding item, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::InputBinding> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::InputSystem::InputBinding item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::InputSystem::InputBinding item, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::InputBinding> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::InputSystem::InputBinding item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::InputSystem::InputBinding,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::InputSystem::InputBinding> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::InputSystem::InputBinding> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::InputSystem::InputBinding> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::InputSystem::InputBinding Find(System::Predicate_1<UnityEngine::InputSystem::InputBinding> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::InputSystem::InputBinding> FindAll(System::Predicate_1<UnityEngine::InputSystem::InputBinding> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::InputSystem::InputBinding> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::InputSystem::InputBinding> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::InputSystem::InputBinding FindLast(System::Predicate_1<UnityEngine::InputSystem::InputBinding> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::InputSystem::InputBinding> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::InputBinding> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::InputBinding> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::InputSystem::InputBinding> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::InputSystem::InputBinding item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::InputSystem::InputBinding item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::InputBinding> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::InputSystem::InputBinding item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::InputSystem::InputBinding> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::InputBinding> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::InputBinding> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::InputSystem::InputBinding> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::InputSystem::InputBinding> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::InputBinding> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 3008 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::InputSystem::Utilities::NameAndParameters> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::Utilities::NameAndParameters>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::NameAndParameters>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::NameAndParameters>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::Utilities::NameAndParameters>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::Utilities::NameAndParameters>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::NameAndParameters>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::NameAndParameters>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::Utilities::NameAndParameters>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::Utilities::NameAndParameters>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::Utilities::NameAndParameters>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::Utilities::NameAndParameters>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::InputSystem::Utilities::NameAndParameters> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::InputSystem::Utilities::NameAndParameters> value) ;

constexpr ::ArrayW<UnityEngine::InputSystem::Utilities::NameAndParameters> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::InputSystem::Utilities::NameAndParameters> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::InputSystem::Utilities::NameAndParameters> value) ;

static ::ArrayW<UnityEngine::InputSystem::Utilities::NameAndParameters> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::InputSystem::Utilities::NameAndParameters __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::NameAndParameters>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::NameAndParameters> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::NameAndParameters> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::Utilities::NameAndParameters get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::InputSystem::Utilities::NameAndParameters value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::InputSystem::Utilities::NameAndParameters item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::InputSystem::Utilities::NameAndParameters item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::NameAndParameters> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::InputSystem::Utilities::NameAndParameters> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::InputSystem::Utilities::NameAndParameters item, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::Utilities::NameAndParameters> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::InputSystem::Utilities::NameAndParameters item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::InputSystem::Utilities::NameAndParameters item, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::Utilities::NameAndParameters> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::InputSystem::Utilities::NameAndParameters item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::InputSystem::Utilities::NameAndParameters,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::InputSystem::Utilities::NameAndParameters> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::InputSystem::Utilities::NameAndParameters> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::InputSystem::Utilities::NameAndParameters> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::InputSystem::Utilities::NameAndParameters Find(System::Predicate_1<UnityEngine::InputSystem::Utilities::NameAndParameters> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::NameAndParameters> FindAll(System::Predicate_1<UnityEngine::InputSystem::Utilities::NameAndParameters> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::InputSystem::Utilities::NameAndParameters> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::InputSystem::Utilities::NameAndParameters> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::InputSystem::Utilities::NameAndParameters FindLast(System::Predicate_1<UnityEngine::InputSystem::Utilities::NameAndParameters> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::InputSystem::Utilities::NameAndParameters> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::Utilities::NameAndParameters> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::Utilities::NameAndParameters> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::NameAndParameters> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::InputSystem::Utilities::NameAndParameters item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::InputSystem::Utilities::NameAndParameters item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::NameAndParameters> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::InputSystem::Utilities::NameAndParameters item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::InputSystem::Utilities::NameAndParameters> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::Utilities::NameAndParameters> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::Utilities::NameAndParameters> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::InputSystem::Utilities::NameAndParameters> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::InputSystem::Utilities::NameAndParameters> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::NameAndParameters> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 3009 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::InputSystem::Utilities::NamedValue> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::Utilities::NamedValue>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::NamedValue>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::NamedValue>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::Utilities::NamedValue>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::Utilities::NamedValue>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::NamedValue>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::NamedValue>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::Utilities::NamedValue>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::Utilities::NamedValue>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::Utilities::NamedValue>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::Utilities::NamedValue>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::InputSystem::Utilities::NamedValue> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::InputSystem::Utilities::NamedValue> value) ;

constexpr ::ArrayW<UnityEngine::InputSystem::Utilities::NamedValue> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::InputSystem::Utilities::NamedValue> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::InputSystem::Utilities::NamedValue> value) ;

static ::ArrayW<UnityEngine::InputSystem::Utilities::NamedValue> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::InputSystem::Utilities::NamedValue __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::NamedValue>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::NamedValue> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::NamedValue> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::Utilities::NamedValue get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::InputSystem::Utilities::NamedValue value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::InputSystem::Utilities::NamedValue item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::InputSystem::Utilities::NamedValue item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::NamedValue> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::InputSystem::Utilities::NamedValue> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::InputSystem::Utilities::NamedValue item, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::Utilities::NamedValue> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::InputSystem::Utilities::NamedValue item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::InputSystem::Utilities::NamedValue item, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::Utilities::NamedValue> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::InputSystem::Utilities::NamedValue item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::InputSystem::Utilities::NamedValue,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::InputSystem::Utilities::NamedValue> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::InputSystem::Utilities::NamedValue> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::InputSystem::Utilities::NamedValue> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::InputSystem::Utilities::NamedValue Find(System::Predicate_1<UnityEngine::InputSystem::Utilities::NamedValue> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::NamedValue> FindAll(System::Predicate_1<UnityEngine::InputSystem::Utilities::NamedValue> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::InputSystem::Utilities::NamedValue> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::InputSystem::Utilities::NamedValue> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::InputSystem::Utilities::NamedValue FindLast(System::Predicate_1<UnityEngine::InputSystem::Utilities::NamedValue> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::InputSystem::Utilities::NamedValue> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::Utilities::NamedValue> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::Utilities::NamedValue> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::NamedValue> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::InputSystem::Utilities::NamedValue item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::InputSystem::Utilities::NamedValue item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::NamedValue> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::InputSystem::Utilities::NamedValue item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::InputSystem::Utilities::NamedValue> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::Utilities::NamedValue> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::Utilities::NamedValue> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::InputSystem::Utilities::NamedValue> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::InputSystem::Utilities::NamedValue> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::NamedValue> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 3011 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::Playables::PlayableBinding> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::Playables::PlayableBinding>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::Playables::PlayableBinding>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::Playables::PlayableBinding>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::Playables::PlayableBinding>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::Playables::PlayableBinding>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::Playables::PlayableBinding>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::Playables::PlayableBinding>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Playables::PlayableBinding>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Playables::PlayableBinding>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::Playables::PlayableBinding> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::Playables::PlayableBinding> value) ;

constexpr ::ArrayW<UnityEngine::Playables::PlayableBinding> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::Playables::PlayableBinding> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::Playables::PlayableBinding> value) ;

static ::ArrayW<UnityEngine::Playables::PlayableBinding> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::Playables::PlayableBinding __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Playables::PlayableBinding get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::Playables::PlayableBinding value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::Playables::PlayableBinding item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::Playables::PlayableBinding item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::Playables::PlayableBinding> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::Playables::PlayableBinding item, System::Collections::Generic::IComparer_1<UnityEngine::Playables::PlayableBinding> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::Playables::PlayableBinding item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::Playables::PlayableBinding item, System::Collections::Generic::IComparer_1<UnityEngine::Playables::PlayableBinding> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::Playables::PlayableBinding item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::Playables::PlayableBinding,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::Playables::PlayableBinding> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::Playables::PlayableBinding> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::Playables::PlayableBinding> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::Playables::PlayableBinding Find(System::Predicate_1<UnityEngine::Playables::PlayableBinding> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::Playables::PlayableBinding> FindAll(System::Predicate_1<UnityEngine::Playables::PlayableBinding> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::Playables::PlayableBinding> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::Playables::PlayableBinding> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::Playables::PlayableBinding FindLast(System::Predicate_1<UnityEngine::Playables::PlayableBinding> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::Playables::PlayableBinding> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::Playables::PlayableBinding> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::Playables::PlayableBinding> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::Playables::PlayableBinding item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::Playables::PlayableBinding item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::Playables::PlayableBinding item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::Playables::PlayableBinding> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::Playables::PlayableBinding> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::Playables::PlayableBinding> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::Playables::PlayableBinding> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::Playables::PlayableBinding> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 3016 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::SceneManagement::Scene> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::SceneManagement::Scene>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::SceneManagement::Scene>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::SceneManagement::Scene>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::SceneManagement::Scene>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::SceneManagement::Scene>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::SceneManagement::Scene>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::SceneManagement::Scene>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::SceneManagement::Scene>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::SceneManagement::Scene>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::SceneManagement::Scene>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::SceneManagement::Scene>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::SceneManagement::Scene> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::SceneManagement::Scene> value) ;

constexpr ::ArrayW<UnityEngine::SceneManagement::Scene> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::SceneManagement::Scene> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::SceneManagement::Scene> value) ;

static ::ArrayW<UnityEngine::SceneManagement::Scene> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::SceneManagement::Scene __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::SceneManagement::Scene>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::SceneManagement::Scene> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::SceneManagement::Scene> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::SceneManagement::Scene get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::SceneManagement::Scene value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::SceneManagement::Scene item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::SceneManagement::Scene item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::SceneManagement::Scene> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::SceneManagement::Scene> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::SceneManagement::Scene item, System::Collections::Generic::IComparer_1<UnityEngine::SceneManagement::Scene> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::SceneManagement::Scene item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::SceneManagement::Scene item, System::Collections::Generic::IComparer_1<UnityEngine::SceneManagement::Scene> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::SceneManagement::Scene item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::SceneManagement::Scene,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::SceneManagement::Scene> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::SceneManagement::Scene> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::SceneManagement::Scene> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::SceneManagement::Scene Find(System::Predicate_1<UnityEngine::SceneManagement::Scene> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::SceneManagement::Scene> FindAll(System::Predicate_1<UnityEngine::SceneManagement::Scene> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::SceneManagement::Scene> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::SceneManagement::Scene> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::SceneManagement::Scene FindLast(System::Predicate_1<UnityEngine::SceneManagement::Scene> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::SceneManagement::Scene> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::SceneManagement::Scene> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::SceneManagement::Scene> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::SceneManagement::Scene> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::SceneManagement::Scene item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::SceneManagement::Scene item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::SceneManagement::Scene> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::SceneManagement::Scene item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::SceneManagement::Scene> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::SceneManagement::Scene> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::SceneManagement::Scene> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::SceneManagement::Scene> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::SceneManagement::Scene> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::SceneManagement::Scene> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 3026 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<Zenject::TypeValuePair> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<Zenject::TypeValuePair>;

/// @brief Convert operator to System::Collections::Generic::IList_1<Zenject::TypeValuePair>
constexpr operator  System::Collections::Generic::IList_1<Zenject::TypeValuePair>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<Zenject::TypeValuePair>
constexpr operator  System::Collections::Generic::ICollection_1<Zenject::TypeValuePair>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<Zenject::TypeValuePair>
constexpr operator  System::Collections::Generic::IEnumerable_1<Zenject::TypeValuePair>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<Zenject::TypeValuePair>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<Zenject::TypeValuePair>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<Zenject::TypeValuePair>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<Zenject::TypeValuePair>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<Zenject::TypeValuePair> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<Zenject::TypeValuePair> value) ;

constexpr ::ArrayW<Zenject::TypeValuePair> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<Zenject::TypeValuePair> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<Zenject::TypeValuePair> value) ;

static ::ArrayW<Zenject::TypeValuePair> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 Zenject::TypeValuePair __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<Zenject::TypeValuePair>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<Zenject::TypeValuePair> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<Zenject::TypeValuePair> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 Zenject::TypeValuePair get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, Zenject::TypeValuePair value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(Zenject::TypeValuePair item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(Zenject::TypeValuePair item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<Zenject::TypeValuePair> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<Zenject::TypeValuePair> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, Zenject::TypeValuePair item, System::Collections::Generic::IComparer_1<Zenject::TypeValuePair> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(Zenject::TypeValuePair item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(Zenject::TypeValuePair item, System::Collections::Generic::IComparer_1<Zenject::TypeValuePair> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(Zenject::TypeValuePair item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<Zenject::TypeValuePair,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<Zenject::TypeValuePair> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<Zenject::TypeValuePair> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<Zenject::TypeValuePair> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 Zenject::TypeValuePair Find(System::Predicate_1<Zenject::TypeValuePair> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<Zenject::TypeValuePair> FindAll(System::Predicate_1<Zenject::TypeValuePair> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<Zenject::TypeValuePair> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<Zenject::TypeValuePair> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 Zenject::TypeValuePair FindLast(System::Predicate_1<Zenject::TypeValuePair> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<Zenject::TypeValuePair> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<Zenject::TypeValuePair> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<Zenject::TypeValuePair> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<Zenject::TypeValuePair> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(Zenject::TypeValuePair item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, Zenject::TypeValuePair item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<Zenject::TypeValuePair> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(Zenject::TypeValuePair item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<Zenject::TypeValuePair> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<Zenject::TypeValuePair> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<Zenject::TypeValuePair> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<Zenject::TypeValuePair> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<Zenject::TypeValuePair> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<Zenject::TypeValuePair> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 3176 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::UIElements::EasingFunction> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::EasingFunction>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::EasingFunction>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::EasingFunction>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::EasingFunction>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::EasingFunction>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::EasingFunction>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::EasingFunction>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::EasingFunction>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::EasingFunction>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::EasingFunction>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::EasingFunction>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::UIElements::EasingFunction> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::UIElements::EasingFunction> value) ;

constexpr ::ArrayW<UnityEngine::UIElements::EasingFunction> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::UIElements::EasingFunction> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::UIElements::EasingFunction> value) ;

static ::ArrayW<UnityEngine::UIElements::EasingFunction> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::UIElements::EasingFunction __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::EasingFunction>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::EasingFunction> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::EasingFunction> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::EasingFunction get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::UIElements::EasingFunction value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::UIElements::EasingFunction item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::UIElements::EasingFunction item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::EasingFunction> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::UIElements::EasingFunction> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::UIElements::EasingFunction item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::EasingFunction> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::EasingFunction item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::EasingFunction item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::EasingFunction> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::EasingFunction item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::UIElements::EasingFunction,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::UIElements::EasingFunction> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::EasingFunction> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::UIElements::EasingFunction> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::EasingFunction Find(System::Predicate_1<UnityEngine::UIElements::EasingFunction> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::EasingFunction> FindAll(System::Predicate_1<UnityEngine::UIElements::EasingFunction> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::UIElements::EasingFunction> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::UIElements::EasingFunction> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::EasingFunction FindLast(System::Predicate_1<UnityEngine::UIElements::EasingFunction> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::UIElements::EasingFunction> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::EasingFunction> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::EasingFunction> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::EasingFunction> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::EasingFunction item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::UIElements::EasingFunction item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::EasingFunction> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::UIElements::EasingFunction item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::UIElements::EasingFunction> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::UIElements::EasingFunction> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::EasingFunction> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::UIElements::EasingFunction> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::UIElements::EasingFunction> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::EasingFunction> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 3184 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> value) ;

constexpr ::ArrayW<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> value) ;

static ::ArrayW<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord item, System::Collections::Generic::IComparer_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord item, System::Collections::Generic::IComparer_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord Find(System::Predicate_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> FindAll(System::Predicate_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord FindLast(System::Predicate_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 3185 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::TextCore::GlyphRect> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::TextCore::GlyphRect>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::TextCore::GlyphRect>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::TextCore::GlyphRect>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::TextCore::GlyphRect>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::TextCore::GlyphRect>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::TextCore::GlyphRect>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::TextCore::GlyphRect>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::TextCore::GlyphRect>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::TextCore::GlyphRect>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::TextCore::GlyphRect>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::TextCore::GlyphRect>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::TextCore::GlyphRect> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::TextCore::GlyphRect> value) ;

constexpr ::ArrayW<UnityEngine::TextCore::GlyphRect> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::TextCore::GlyphRect> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::TextCore::GlyphRect> value) ;

static ::ArrayW<UnityEngine::TextCore::GlyphRect> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::TextCore::GlyphRect __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::TextCore::GlyphRect>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::TextCore::GlyphRect> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::TextCore::GlyphRect> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::TextCore::GlyphRect get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::TextCore::GlyphRect value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::TextCore::GlyphRect item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::TextCore::GlyphRect item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::TextCore::GlyphRect> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::TextCore::GlyphRect> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::TextCore::GlyphRect item, System::Collections::Generic::IComparer_1<UnityEngine::TextCore::GlyphRect> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::TextCore::GlyphRect item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::TextCore::GlyphRect item, System::Collections::Generic::IComparer_1<UnityEngine::TextCore::GlyphRect> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::TextCore::GlyphRect item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::TextCore::GlyphRect,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::TextCore::GlyphRect> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::TextCore::GlyphRect> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::TextCore::GlyphRect> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::TextCore::GlyphRect Find(System::Predicate_1<UnityEngine::TextCore::GlyphRect> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect> FindAll(System::Predicate_1<UnityEngine::TextCore::GlyphRect> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::TextCore::GlyphRect> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::TextCore::GlyphRect> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::TextCore::GlyphRect FindLast(System::Predicate_1<UnityEngine::TextCore::GlyphRect> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::TextCore::GlyphRect> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::TextCore::GlyphRect> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::TextCore::GlyphRect> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::TextCore::GlyphRect item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::TextCore::GlyphRect item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::TextCore::GlyphRect> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::TextCore::GlyphRect item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::TextCore::GlyphRect> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::TextCore::GlyphRect> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::TextCore::GlyphRect> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::TextCore::GlyphRect> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::TextCore::GlyphRect> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::TextCore::GlyphRect> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 3195 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::Layouts::InputDeviceDescription>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::InputSystem::Layouts::InputDeviceDescription> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::InputSystem::Layouts::InputDeviceDescription> value) ;

constexpr ::ArrayW<UnityEngine::InputSystem::Layouts::InputDeviceDescription> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::InputSystem::Layouts::InputDeviceDescription> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::InputSystem::Layouts::InputDeviceDescription> value) ;

static ::ArrayW<UnityEngine::InputSystem::Layouts::InputDeviceDescription> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::InputSystem::Layouts::InputDeviceDescription __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::Layouts::InputDeviceDescription get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::InputSystem::Layouts::InputDeviceDescription value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::InputSystem::Layouts::InputDeviceDescription item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::InputSystem::Layouts::InputDeviceDescription item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::InputSystem::Layouts::InputDeviceDescription item, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::InputSystem::Layouts::InputDeviceDescription item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::InputSystem::Layouts::InputDeviceDescription item, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::InputSystem::Layouts::InputDeviceDescription item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::InputSystem::Layouts::InputDeviceDescription,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::InputSystem::Layouts::InputDeviceDescription> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::InputSystem::Layouts::InputDeviceDescription> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::InputSystem::Layouts::InputDeviceDescription Find(System::Predicate_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription> FindAll(System::Predicate_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::InputSystem::Layouts::InputDeviceDescription FindLast(System::Predicate_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::Layouts::InputDeviceDescription> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::InputSystem::Layouts::InputDeviceDescription item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::InputSystem::Layouts::InputDeviceDescription item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::InputSystem::Layouts::InputDeviceDescription item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::InputSystem::Layouts::InputDeviceDescription> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 3207 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::UIElements::ManipulatorActivationFilter> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::ManipulatorActivationFilter>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::ManipulatorActivationFilter>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::ManipulatorActivationFilter>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::ManipulatorActivationFilter>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::ManipulatorActivationFilter>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::ManipulatorActivationFilter>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::ManipulatorActivationFilter>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::ManipulatorActivationFilter>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::ManipulatorActivationFilter>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::ManipulatorActivationFilter>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::ManipulatorActivationFilter>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::UIElements::ManipulatorActivationFilter> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::UIElements::ManipulatorActivationFilter> value) ;

constexpr ::ArrayW<UnityEngine::UIElements::ManipulatorActivationFilter> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::UIElements::ManipulatorActivationFilter> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::UIElements::ManipulatorActivationFilter> value) ;

static ::ArrayW<UnityEngine::UIElements::ManipulatorActivationFilter> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::UIElements::ManipulatorActivationFilter __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::ManipulatorActivationFilter>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::ManipulatorActivationFilter> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::ManipulatorActivationFilter> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::ManipulatorActivationFilter get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::UIElements::ManipulatorActivationFilter value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::UIElements::ManipulatorActivationFilter item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::UIElements::ManipulatorActivationFilter item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::ManipulatorActivationFilter> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::UIElements::ManipulatorActivationFilter> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::UIElements::ManipulatorActivationFilter item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::ManipulatorActivationFilter> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::ManipulatorActivationFilter item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::ManipulatorActivationFilter item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::ManipulatorActivationFilter> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::ManipulatorActivationFilter item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::UIElements::ManipulatorActivationFilter,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::UIElements::ManipulatorActivationFilter> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::ManipulatorActivationFilter> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::UIElements::ManipulatorActivationFilter> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::ManipulatorActivationFilter Find(System::Predicate_1<UnityEngine::UIElements::ManipulatorActivationFilter> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::ManipulatorActivationFilter> FindAll(System::Predicate_1<UnityEngine::UIElements::ManipulatorActivationFilter> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::UIElements::ManipulatorActivationFilter> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::UIElements::ManipulatorActivationFilter> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::ManipulatorActivationFilter FindLast(System::Predicate_1<UnityEngine::UIElements::ManipulatorActivationFilter> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::UIElements::ManipulatorActivationFilter> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::ManipulatorActivationFilter> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::ManipulatorActivationFilter> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::ManipulatorActivationFilter> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::ManipulatorActivationFilter item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::UIElements::ManipulatorActivationFilter item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::ManipulatorActivationFilter> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::UIElements::ManipulatorActivationFilter item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::UIElements::ManipulatorActivationFilter> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::UIElements::ManipulatorActivationFilter> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::ManipulatorActivationFilter> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::UIElements::ManipulatorActivationFilter> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::UIElements::ManipulatorActivationFilter> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::ManipulatorActivationFilter> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 3209 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::Matrix4x4> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::Matrix4x4>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::Matrix4x4>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::Matrix4x4>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::Matrix4x4>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::Matrix4x4>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::Matrix4x4>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::Matrix4x4>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::Matrix4x4>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::Matrix4x4>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Matrix4x4>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Matrix4x4>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::Matrix4x4> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::Matrix4x4> value) ;

constexpr ::ArrayW<UnityEngine::Matrix4x4> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::Matrix4x4> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::Matrix4x4> value) ;

static ::ArrayW<UnityEngine::Matrix4x4> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::Matrix4x4 __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::Matrix4x4>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::Matrix4x4> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::Matrix4x4> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Matrix4x4 get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::Matrix4x4 value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::Matrix4x4 item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::Matrix4x4 item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::Matrix4x4> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::Matrix4x4> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::Matrix4x4 item, System::Collections::Generic::IComparer_1<UnityEngine::Matrix4x4> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::Matrix4x4 item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::Matrix4x4 item, System::Collections::Generic::IComparer_1<UnityEngine::Matrix4x4> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::Matrix4x4 item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::Matrix4x4,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::Matrix4x4> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::Matrix4x4> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::Matrix4x4> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::Matrix4x4 Find(System::Predicate_1<UnityEngine::Matrix4x4> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::Matrix4x4> FindAll(System::Predicate_1<UnityEngine::Matrix4x4> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::Matrix4x4> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::Matrix4x4> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::Matrix4x4 FindLast(System::Predicate_1<UnityEngine::Matrix4x4> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::Matrix4x4> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::Matrix4x4> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::Matrix4x4> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::Matrix4x4> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::Matrix4x4 item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::Matrix4x4 item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::Matrix4x4> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::Matrix4x4 item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::Matrix4x4> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::Matrix4x4> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::Matrix4x4> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::Matrix4x4> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::Matrix4x4> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::Matrix4x4> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 3217 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::Playables::Playable> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::Playables::Playable>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::Playables::Playable>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::Playables::Playable>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::Playables::Playable>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::Playables::Playable>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::Playable>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::Playable>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::Playables::Playable>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::Playables::Playable>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Playables::Playable>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Playables::Playable>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::Playables::Playable> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::Playables::Playable> value) ;

constexpr ::ArrayW<UnityEngine::Playables::Playable> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::Playables::Playable> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::Playables::Playable> value) ;

static ::ArrayW<UnityEngine::Playables::Playable> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::Playables::Playable __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::Playable>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::Playable> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::Playable> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Playables::Playable get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::Playables::Playable value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::Playables::Playable item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::Playables::Playable item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::Playable> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::Playables::Playable> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::Playables::Playable item, System::Collections::Generic::IComparer_1<UnityEngine::Playables::Playable> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::Playables::Playable item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::Playables::Playable item, System::Collections::Generic::IComparer_1<UnityEngine::Playables::Playable> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::Playables::Playable item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::Playables::Playable,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::Playables::Playable> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::Playables::Playable> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::Playables::Playable> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::Playables::Playable Find(System::Predicate_1<UnityEngine::Playables::Playable> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::Playables::Playable> FindAll(System::Predicate_1<UnityEngine::Playables::Playable> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::Playables::Playable> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::Playables::Playable> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::Playables::Playable FindLast(System::Predicate_1<UnityEngine::Playables::Playable> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::Playables::Playable> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::Playables::Playable> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::Playable> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::Playables::Playable> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::Playables::Playable item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::Playables::Playable item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::Playable> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::Playables::Playable item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::Playables::Playable> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::Playables::Playable> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::Playables::Playable> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::Playables::Playable> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::Playables::Playable> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::Playable> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 3226 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::Quaternion> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::Quaternion>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::Quaternion>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::Quaternion>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::Quaternion>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::Quaternion>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::Quaternion>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::Quaternion>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::Quaternion>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::Quaternion>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Quaternion>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Quaternion>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::Quaternion> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::Quaternion> value) ;

constexpr ::ArrayW<UnityEngine::Quaternion> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::Quaternion> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::Quaternion> value) ;

static ::ArrayW<UnityEngine::Quaternion> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::Quaternion __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::Quaternion>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::Quaternion> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::Quaternion> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Quaternion get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::Quaternion value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::Quaternion item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::Quaternion item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::Quaternion> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::Quaternion> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::Quaternion item, System::Collections::Generic::IComparer_1<UnityEngine::Quaternion> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::Quaternion item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::Quaternion item, System::Collections::Generic::IComparer_1<UnityEngine::Quaternion> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::Quaternion item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::Quaternion,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::Quaternion> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::Quaternion> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::Quaternion> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::Quaternion Find(System::Predicate_1<UnityEngine::Quaternion> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::Quaternion> FindAll(System::Predicate_1<UnityEngine::Quaternion> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::Quaternion> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::Quaternion> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::Quaternion FindLast(System::Predicate_1<UnityEngine::Quaternion> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::Quaternion> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::Quaternion> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::Quaternion> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::Quaternion> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::Quaternion item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::Quaternion item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::Quaternion> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::Quaternion item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::Quaternion> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::Quaternion> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::Quaternion> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::Quaternion> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::Quaternion> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::Quaternion> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 3229 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::Rect> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::Rect>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::Rect>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::Rect>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::Rect>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::Rect>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::Rect>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::Rect>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::Rect>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::Rect>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Rect>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Rect>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::Rect> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::Rect> value) ;

constexpr ::ArrayW<UnityEngine::Rect> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::Rect> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::Rect> value) ;

static ::ArrayW<UnityEngine::Rect> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::Rect __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::Rect>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::Rect> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::Rect> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Rect get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::Rect value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::Rect item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::Rect item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::Rect> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::Rect> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::Rect item, System::Collections::Generic::IComparer_1<UnityEngine::Rect> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::Rect item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::Rect item, System::Collections::Generic::IComparer_1<UnityEngine::Rect> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::Rect item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::Rect,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::Rect> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::Rect> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::Rect> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::Rect Find(System::Predicate_1<UnityEngine::Rect> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::Rect> FindAll(System::Predicate_1<UnityEngine::Rect> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::Rect> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::Rect> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::Rect FindLast(System::Predicate_1<UnityEngine::Rect> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::Rect> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::Rect> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::Rect> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::Rect> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::Rect item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::Rect item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::Rect> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::Rect item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::Rect> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::Rect> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::Rect> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::Rect> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::Rect> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::Rect> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 3252 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::UIElements::TimeValue> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::TimeValue>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::TimeValue>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::TimeValue>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::TimeValue>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::TimeValue>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::TimeValue>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::TimeValue>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::TimeValue>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::TimeValue>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::TimeValue>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::TimeValue>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::UIElements::TimeValue> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::UIElements::TimeValue> value) ;

constexpr ::ArrayW<UnityEngine::UIElements::TimeValue> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::UIElements::TimeValue> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::UIElements::TimeValue> value) ;

static ::ArrayW<UnityEngine::UIElements::TimeValue> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::UIElements::TimeValue __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::TimeValue>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::TimeValue> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::TimeValue> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::TimeValue get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::UIElements::TimeValue value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::UIElements::TimeValue item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::UIElements::TimeValue item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::TimeValue> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::UIElements::TimeValue> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::UIElements::TimeValue item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::TimeValue> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::TimeValue item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::TimeValue item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::TimeValue> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::TimeValue item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::UIElements::TimeValue,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::UIElements::TimeValue> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::TimeValue> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::UIElements::TimeValue> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::TimeValue Find(System::Predicate_1<UnityEngine::UIElements::TimeValue> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::TimeValue> FindAll(System::Predicate_1<UnityEngine::UIElements::TimeValue> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::UIElements::TimeValue> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::UIElements::TimeValue> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::TimeValue FindLast(System::Predicate_1<UnityEngine::UIElements::TimeValue> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::UIElements::TimeValue> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::TimeValue> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::TimeValue> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::TimeValue> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::TimeValue item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::UIElements::TimeValue item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::TimeValue> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::UIElements::TimeValue item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::UIElements::TimeValue> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::UIElements::TimeValue> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::TimeValue> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::UIElements::TimeValue> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::UIElements::TimeValue> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::TimeValue> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 3256 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::ProBuilder::Triangle> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::ProBuilder::Triangle>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::ProBuilder::Triangle>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::ProBuilder::Triangle>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::ProBuilder::Triangle>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::ProBuilder::Triangle>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::Triangle>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::Triangle>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::ProBuilder::Triangle>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::ProBuilder::Triangle>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ProBuilder::Triangle>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ProBuilder::Triangle>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::ProBuilder::Triangle> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::ProBuilder::Triangle> value) ;

constexpr ::ArrayW<UnityEngine::ProBuilder::Triangle> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::ProBuilder::Triangle> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::ProBuilder::Triangle> value) ;

static ::ArrayW<UnityEngine::ProBuilder::Triangle> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::ProBuilder::Triangle __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::Triangle>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::Triangle> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::Triangle> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ProBuilder::Triangle get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::ProBuilder::Triangle value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::ProBuilder::Triangle item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::ProBuilder::Triangle item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::Triangle> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::ProBuilder::Triangle> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::ProBuilder::Triangle item, System::Collections::Generic::IComparer_1<UnityEngine::ProBuilder::Triangle> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::ProBuilder::Triangle item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::ProBuilder::Triangle item, System::Collections::Generic::IComparer_1<UnityEngine::ProBuilder::Triangle> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::ProBuilder::Triangle item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::ProBuilder::Triangle,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::ProBuilder::Triangle> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::ProBuilder::Triangle> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::ProBuilder::Triangle> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::ProBuilder::Triangle Find(System::Predicate_1<UnityEngine::ProBuilder::Triangle> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::ProBuilder::Triangle> FindAll(System::Predicate_1<UnityEngine::ProBuilder::Triangle> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::ProBuilder::Triangle> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::ProBuilder::Triangle> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::ProBuilder::Triangle FindLast(System::Predicate_1<UnityEngine::ProBuilder::Triangle> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::ProBuilder::Triangle> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::ProBuilder::Triangle> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::ProBuilder::Triangle> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::ProBuilder::Triangle> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::ProBuilder::Triangle item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::ProBuilder::Triangle item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::Triangle> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::ProBuilder::Triangle item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::ProBuilder::Triangle> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::ProBuilder::Triangle> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::ProBuilder::Triangle> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::ProBuilder::Triangle> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::ProBuilder::Triangle> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::Triangle> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 3270 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> value) ;

constexpr ::ArrayW<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> value) ;

static ::ArrayW<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue item, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue item, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue Find(System::Predicate_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> FindAll(System::Predicate_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue FindLast(System::Predicate_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 3470 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<System::ArraySegment_1<uint8_t>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::ArraySegment_1<uint8_t>>;

/// @brief Convert operator to System::Collections::Generic::IList_1<System::ArraySegment_1<uint8_t>>
constexpr operator  System::Collections::Generic::IList_1<System::ArraySegment_1<uint8_t>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::ArraySegment_1<uint8_t>>
constexpr operator  System::Collections::Generic::ICollection_1<System::ArraySegment_1<uint8_t>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::ArraySegment_1<uint8_t>>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::ArraySegment_1<uint8_t>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::ArraySegment_1<uint8_t>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::ArraySegment_1<uint8_t>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::ArraySegment_1<uint8_t>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::ArraySegment_1<uint8_t>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<System::ArraySegment_1<uint8_t>> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<System::ArraySegment_1<uint8_t>> value) ;

constexpr ::ArrayW<System::ArraySegment_1<uint8_t>> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<System::ArraySegment_1<uint8_t>> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<System::ArraySegment_1<uint8_t>> value) ;

static ::ArrayW<System::ArraySegment_1<uint8_t>> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 System::ArraySegment_1<uint8_t> __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<System::ArraySegment_1<uint8_t>>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<System::ArraySegment_1<uint8_t>> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<System::ArraySegment_1<uint8_t>> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::ArraySegment_1<uint8_t> get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, System::ArraySegment_1<uint8_t> value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(System::ArraySegment_1<uint8_t> item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(System::ArraySegment_1<uint8_t> item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<System::ArraySegment_1<uint8_t>> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<System::ArraySegment_1<uint8_t>> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, System::ArraySegment_1<uint8_t> item, System::Collections::Generic::IComparer_1<System::ArraySegment_1<uint8_t>> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::ArraySegment_1<uint8_t> item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::ArraySegment_1<uint8_t> item, System::Collections::Generic::IComparer_1<System::ArraySegment_1<uint8_t>> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::ArraySegment_1<uint8_t> item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<System::ArraySegment_1<uint8_t>,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<System::ArraySegment_1<uint8_t>> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::ArraySegment_1<uint8_t>> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<System::ArraySegment_1<uint8_t>> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 System::ArraySegment_1<uint8_t> Find(System::Predicate_1<System::ArraySegment_1<uint8_t>> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::ArraySegment_1<uint8_t>> FindAll(System::Predicate_1<System::ArraySegment_1<uint8_t>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<System::ArraySegment_1<uint8_t>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<System::ArraySegment_1<uint8_t>> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 System::ArraySegment_1<uint8_t> FindLast(System::Predicate_1<System::ArraySegment_1<uint8_t>> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<System::ArraySegment_1<uint8_t>> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::ArraySegment_1<uint8_t>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::ArraySegment_1<uint8_t>> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::ArraySegment_1<uint8_t>> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::ArraySegment_1<uint8_t> item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, System::ArraySegment_1<uint8_t> item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<System::ArraySegment_1<uint8_t>> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(System::ArraySegment_1<uint8_t> item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<System::ArraySegment_1<uint8_t>> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<System::ArraySegment_1<uint8_t>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<System::ArraySegment_1<uint8_t>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<System::ArraySegment_1<uint8_t>> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<System::ArraySegment_1<uint8_t>> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<System::ArraySegment_1<uint8_t>> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 3482 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::ProBuilder::BezierPoint> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::ProBuilder::BezierPoint>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::ProBuilder::BezierPoint>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::ProBuilder::BezierPoint>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::ProBuilder::BezierPoint>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::ProBuilder::BezierPoint>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::BezierPoint>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::BezierPoint>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::ProBuilder::BezierPoint>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::ProBuilder::BezierPoint>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ProBuilder::BezierPoint>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ProBuilder::BezierPoint>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::ProBuilder::BezierPoint> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::ProBuilder::BezierPoint> value) ;

constexpr ::ArrayW<UnityEngine::ProBuilder::BezierPoint> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::ProBuilder::BezierPoint> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::ProBuilder::BezierPoint> value) ;

static ::ArrayW<UnityEngine::ProBuilder::BezierPoint> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::ProBuilder::BezierPoint __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::BezierPoint>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::BezierPoint> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::BezierPoint> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ProBuilder::BezierPoint get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::ProBuilder::BezierPoint value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::ProBuilder::BezierPoint item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::ProBuilder::BezierPoint item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::BezierPoint> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::ProBuilder::BezierPoint> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::ProBuilder::BezierPoint item, System::Collections::Generic::IComparer_1<UnityEngine::ProBuilder::BezierPoint> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::ProBuilder::BezierPoint item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::ProBuilder::BezierPoint item, System::Collections::Generic::IComparer_1<UnityEngine::ProBuilder::BezierPoint> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::ProBuilder::BezierPoint item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::ProBuilder::BezierPoint,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::ProBuilder::BezierPoint> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::ProBuilder::BezierPoint> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::ProBuilder::BezierPoint> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::ProBuilder::BezierPoint Find(System::Predicate_1<UnityEngine::ProBuilder::BezierPoint> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::ProBuilder::BezierPoint> FindAll(System::Predicate_1<UnityEngine::ProBuilder::BezierPoint> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::ProBuilder::BezierPoint> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::ProBuilder::BezierPoint> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::ProBuilder::BezierPoint FindLast(System::Predicate_1<UnityEngine::ProBuilder::BezierPoint> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::ProBuilder::BezierPoint> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::ProBuilder::BezierPoint> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::ProBuilder::BezierPoint> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::ProBuilder::BezierPoint> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::ProBuilder::BezierPoint item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::ProBuilder::BezierPoint item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::BezierPoint> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::ProBuilder::BezierPoint item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::ProBuilder::BezierPoint> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::ProBuilder::BezierPoint> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::ProBuilder::BezierPoint> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::ProBuilder::BezierPoint> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::ProBuilder::BezierPoint> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::BezierPoint> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 3496 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::UICharInfo> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UICharInfo>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UICharInfo>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UICharInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UICharInfo>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UICharInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UICharInfo>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UICharInfo>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UICharInfo>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UICharInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UICharInfo>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UICharInfo>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::UICharInfo> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::UICharInfo> value) ;

constexpr ::ArrayW<UnityEngine::UICharInfo> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::UICharInfo> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::UICharInfo> value) ;

static ::ArrayW<UnityEngine::UICharInfo> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::UICharInfo __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::UICharInfo>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::UICharInfo> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::UICharInfo> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UICharInfo get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::UICharInfo value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::UICharInfo item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::UICharInfo item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::UICharInfo> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::UICharInfo> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::UICharInfo item, System::Collections::Generic::IComparer_1<UnityEngine::UICharInfo> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UICharInfo item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UICharInfo item, System::Collections::Generic::IComparer_1<UnityEngine::UICharInfo> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UICharInfo item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::UICharInfo,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::UICharInfo> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UICharInfo> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::UICharInfo> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UICharInfo Find(System::Predicate_1<UnityEngine::UICharInfo> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UICharInfo> FindAll(System::Predicate_1<UnityEngine::UICharInfo> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::UICharInfo> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::UICharInfo> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UICharInfo FindLast(System::Predicate_1<UnityEngine::UICharInfo> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::UICharInfo> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UICharInfo> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UICharInfo> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UICharInfo> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UICharInfo item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::UICharInfo item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::UICharInfo> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::UICharInfo item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::UICharInfo> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::UICharInfo> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::UICharInfo> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::UICharInfo> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::UICharInfo> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::UICharInfo> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 3497 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::UILineInfo> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UILineInfo>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UILineInfo>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UILineInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UILineInfo>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UILineInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UILineInfo>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UILineInfo>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UILineInfo>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UILineInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UILineInfo>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UILineInfo>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::UILineInfo> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::UILineInfo> value) ;

constexpr ::ArrayW<UnityEngine::UILineInfo> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::UILineInfo> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::UILineInfo> value) ;

static ::ArrayW<UnityEngine::UILineInfo> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::UILineInfo __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::UILineInfo>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::UILineInfo> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::UILineInfo> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UILineInfo get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::UILineInfo value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::UILineInfo item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::UILineInfo item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::UILineInfo> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::UILineInfo> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::UILineInfo item, System::Collections::Generic::IComparer_1<UnityEngine::UILineInfo> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UILineInfo item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UILineInfo item, System::Collections::Generic::IComparer_1<UnityEngine::UILineInfo> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UILineInfo item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::UILineInfo,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::UILineInfo> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UILineInfo> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::UILineInfo> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UILineInfo Find(System::Predicate_1<UnityEngine::UILineInfo> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UILineInfo> FindAll(System::Predicate_1<UnityEngine::UILineInfo> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::UILineInfo> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::UILineInfo> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UILineInfo FindLast(System::Predicate_1<UnityEngine::UILineInfo> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::UILineInfo> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UILineInfo> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UILineInfo> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UILineInfo> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UILineInfo item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::UILineInfo item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::UILineInfo> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::UILineInfo item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::UILineInfo> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::UILineInfo> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::UILineInfo> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::UILineInfo> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::UILineInfo> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::UILineInfo> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 3498 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::UIVertex> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIVertex>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIVertex>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIVertex>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIVertex>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIVertex>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIVertex>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIVertex>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIVertex>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIVertex>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIVertex>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIVertex>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::UIVertex> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::UIVertex> value) ;

constexpr ::ArrayW<UnityEngine::UIVertex> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::UIVertex> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::UIVertex> value) ;

static ::ArrayW<UnityEngine::UIVertex> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::UIVertex __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::UIVertex>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::UIVertex> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::UIVertex> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIVertex get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::UIVertex value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::UIVertex item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::UIVertex item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::UIVertex> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::UIVertex> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::UIVertex item, System::Collections::Generic::IComparer_1<UnityEngine::UIVertex> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIVertex item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIVertex item, System::Collections::Generic::IComparer_1<UnityEngine::UIVertex> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIVertex item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::UIVertex,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::UIVertex> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIVertex> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::UIVertex> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIVertex Find(System::Predicate_1<UnityEngine::UIVertex> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIVertex> FindAll(System::Predicate_1<UnityEngine::UIVertex> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::UIVertex> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::UIVertex> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIVertex FindLast(System::Predicate_1<UnityEngine::UIVertex> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::UIVertex> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIVertex> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIVertex> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIVertex> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIVertex item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::UIVertex item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::UIVertex> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::UIVertex item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::UIVertex> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::UIVertex> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::UIVertex> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::UIVertex> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::UIVertex> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::UIVertex> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 3499 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> value) ;

constexpr ::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> value) ;

static ::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo Find(System::Predicate_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> FindAll(System::Predicate_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo FindLast(System::Predicate_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 3678 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<GlobalNamespace::FPSTimestamp> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<GlobalNamespace::FPSTimestamp>;

/// @brief Convert operator to System::Collections::Generic::IList_1<GlobalNamespace::FPSTimestamp>
constexpr operator  System::Collections::Generic::IList_1<GlobalNamespace::FPSTimestamp>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<GlobalNamespace::FPSTimestamp>
constexpr operator  System::Collections::Generic::ICollection_1<GlobalNamespace::FPSTimestamp>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<GlobalNamespace::FPSTimestamp>
constexpr operator  System::Collections::Generic::IEnumerable_1<GlobalNamespace::FPSTimestamp>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::FPSTimestamp>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::FPSTimestamp>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::FPSTimestamp>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::FPSTimestamp>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<GlobalNamespace::FPSTimestamp> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<GlobalNamespace::FPSTimestamp> value) ;

constexpr ::ArrayW<GlobalNamespace::FPSTimestamp> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<GlobalNamespace::FPSTimestamp> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<GlobalNamespace::FPSTimestamp> value) ;

static ::ArrayW<GlobalNamespace::FPSTimestamp> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 GlobalNamespace::FPSTimestamp __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<GlobalNamespace::FPSTimestamp>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<GlobalNamespace::FPSTimestamp> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<GlobalNamespace::FPSTimestamp> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::FPSTimestamp get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, GlobalNamespace::FPSTimestamp value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(GlobalNamespace::FPSTimestamp item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(GlobalNamespace::FPSTimestamp item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<GlobalNamespace::FPSTimestamp> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<GlobalNamespace::FPSTimestamp> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, GlobalNamespace::FPSTimestamp item, System::Collections::Generic::IComparer_1<GlobalNamespace::FPSTimestamp> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(GlobalNamespace::FPSTimestamp item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(GlobalNamespace::FPSTimestamp item, System::Collections::Generic::IComparer_1<GlobalNamespace::FPSTimestamp> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(GlobalNamespace::FPSTimestamp item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<GlobalNamespace::FPSTimestamp,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<GlobalNamespace::FPSTimestamp> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<GlobalNamespace::FPSTimestamp> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<GlobalNamespace::FPSTimestamp> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 GlobalNamespace::FPSTimestamp Find(System::Predicate_1<GlobalNamespace::FPSTimestamp> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<GlobalNamespace::FPSTimestamp> FindAll(System::Predicate_1<GlobalNamespace::FPSTimestamp> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<GlobalNamespace::FPSTimestamp> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<GlobalNamespace::FPSTimestamp> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 GlobalNamespace::FPSTimestamp FindLast(System::Predicate_1<GlobalNamespace::FPSTimestamp> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<GlobalNamespace::FPSTimestamp> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<GlobalNamespace::FPSTimestamp> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<GlobalNamespace::FPSTimestamp> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<GlobalNamespace::FPSTimestamp> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(GlobalNamespace::FPSTimestamp item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, GlobalNamespace::FPSTimestamp item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<GlobalNamespace::FPSTimestamp> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(GlobalNamespace::FPSTimestamp item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<GlobalNamespace::FPSTimestamp> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<GlobalNamespace::FPSTimestamp> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<GlobalNamespace::FPSTimestamp> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<GlobalNamespace::FPSTimestamp> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<GlobalNamespace::FPSTimestamp> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<GlobalNamespace::FPSTimestamp> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 3834 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> value) ;

constexpr ::ArrayW<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> value) ;

static ::ArrayW<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo item, System::Collections::Generic::IComparer_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo item, System::Collections::Generic::IComparer_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo Find(System::Predicate_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> FindAll(System::Predicate_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo FindLast(System::Predicate_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 3950 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>>;

/// @brief Convert operator to System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::ICollection_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> value) ;

constexpr ::ArrayW<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> value) ;

static ::ArrayW<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType> __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType> get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType> item, System::Collections::Generic::IComparer_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType> item, System::Collections::Generic::IComparer_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType> Find(System::Predicate_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> FindAll(System::Predicate_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType> FindLast(System::Predicate_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 3992 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::AnimatorClipInfo> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::AnimatorClipInfo>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::AnimatorClipInfo>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::AnimatorClipInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::AnimatorClipInfo>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::AnimatorClipInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::AnimatorClipInfo>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::AnimatorClipInfo>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::AnimatorClipInfo>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::AnimatorClipInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::AnimatorClipInfo>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::AnimatorClipInfo>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::AnimatorClipInfo> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::AnimatorClipInfo> value) ;

constexpr ::ArrayW<UnityEngine::AnimatorClipInfo> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::AnimatorClipInfo> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::AnimatorClipInfo> value) ;

static ::ArrayW<UnityEngine::AnimatorClipInfo> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::AnimatorClipInfo __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::AnimatorClipInfo>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::AnimatorClipInfo> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::AnimatorClipInfo> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::AnimatorClipInfo get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::AnimatorClipInfo value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::AnimatorClipInfo item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::AnimatorClipInfo item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::AnimatorClipInfo> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::AnimatorClipInfo> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::AnimatorClipInfo item, System::Collections::Generic::IComparer_1<UnityEngine::AnimatorClipInfo> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::AnimatorClipInfo item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::AnimatorClipInfo item, System::Collections::Generic::IComparer_1<UnityEngine::AnimatorClipInfo> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::AnimatorClipInfo item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::AnimatorClipInfo,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::AnimatorClipInfo> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::AnimatorClipInfo> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::AnimatorClipInfo> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::AnimatorClipInfo Find(System::Predicate_1<UnityEngine::AnimatorClipInfo> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::AnimatorClipInfo> FindAll(System::Predicate_1<UnityEngine::AnimatorClipInfo> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::AnimatorClipInfo> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::AnimatorClipInfo> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::AnimatorClipInfo FindLast(System::Predicate_1<UnityEngine::AnimatorClipInfo> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::AnimatorClipInfo> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::AnimatorClipInfo> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::AnimatorClipInfo> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::AnimatorClipInfo> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::AnimatorClipInfo item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::AnimatorClipInfo item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::AnimatorClipInfo> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::AnimatorClipInfo item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::AnimatorClipInfo> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::AnimatorClipInfo> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::AnimatorClipInfo> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::AnimatorClipInfo> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::AnimatorClipInfo> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::AnimatorClipInfo> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4002 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<GlobalNamespace::BezierCurve> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<GlobalNamespace::BezierCurve>;

/// @brief Convert operator to System::Collections::Generic::IList_1<GlobalNamespace::BezierCurve>
constexpr operator  System::Collections::Generic::IList_1<GlobalNamespace::BezierCurve>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<GlobalNamespace::BezierCurve>
constexpr operator  System::Collections::Generic::ICollection_1<GlobalNamespace::BezierCurve>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<GlobalNamespace::BezierCurve>
constexpr operator  System::Collections::Generic::IEnumerable_1<GlobalNamespace::BezierCurve>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::BezierCurve>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::BezierCurve>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::BezierCurve>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::BezierCurve>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<GlobalNamespace::BezierCurve> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<GlobalNamespace::BezierCurve> value) ;

constexpr ::ArrayW<GlobalNamespace::BezierCurve> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<GlobalNamespace::BezierCurve> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<GlobalNamespace::BezierCurve> value) ;

static ::ArrayW<GlobalNamespace::BezierCurve> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 GlobalNamespace::BezierCurve __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<GlobalNamespace::BezierCurve>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<GlobalNamespace::BezierCurve> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<GlobalNamespace::BezierCurve> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::BezierCurve get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, GlobalNamespace::BezierCurve value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(GlobalNamespace::BezierCurve item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(GlobalNamespace::BezierCurve item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<GlobalNamespace::BezierCurve> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<GlobalNamespace::BezierCurve> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, GlobalNamespace::BezierCurve item, System::Collections::Generic::IComparer_1<GlobalNamespace::BezierCurve> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(GlobalNamespace::BezierCurve item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(GlobalNamespace::BezierCurve item, System::Collections::Generic::IComparer_1<GlobalNamespace::BezierCurve> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(GlobalNamespace::BezierCurve item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<GlobalNamespace::BezierCurve,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<GlobalNamespace::BezierCurve> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<GlobalNamespace::BezierCurve> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<GlobalNamespace::BezierCurve> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 GlobalNamespace::BezierCurve Find(System::Predicate_1<GlobalNamespace::BezierCurve> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<GlobalNamespace::BezierCurve> FindAll(System::Predicate_1<GlobalNamespace::BezierCurve> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<GlobalNamespace::BezierCurve> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<GlobalNamespace::BezierCurve> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 GlobalNamespace::BezierCurve FindLast(System::Predicate_1<GlobalNamespace::BezierCurve> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<GlobalNamespace::BezierCurve> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<GlobalNamespace::BezierCurve> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<GlobalNamespace::BezierCurve> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<GlobalNamespace::BezierCurve> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(GlobalNamespace::BezierCurve item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, GlobalNamespace::BezierCurve item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<GlobalNamespace::BezierCurve> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(GlobalNamespace::BezierCurve item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<GlobalNamespace::BezierCurve> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<GlobalNamespace::BezierCurve> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<GlobalNamespace::BezierCurve> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<GlobalNamespace::BezierCurve> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<GlobalNamespace::BezierCurve> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<GlobalNamespace::BezierCurve> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4011 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::UIElements::ComputedTransitionProperty> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::ComputedTransitionProperty>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::ComputedTransitionProperty>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::ComputedTransitionProperty>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::ComputedTransitionProperty>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::ComputedTransitionProperty>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::ComputedTransitionProperty>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::ComputedTransitionProperty>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::ComputedTransitionProperty>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::ComputedTransitionProperty>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::ComputedTransitionProperty>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::ComputedTransitionProperty>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::UIElements::ComputedTransitionProperty> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::UIElements::ComputedTransitionProperty> value) ;

constexpr ::ArrayW<UnityEngine::UIElements::ComputedTransitionProperty> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::UIElements::ComputedTransitionProperty> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::UIElements::ComputedTransitionProperty> value) ;

static ::ArrayW<UnityEngine::UIElements::ComputedTransitionProperty> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::UIElements::ComputedTransitionProperty __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::ComputedTransitionProperty>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::ComputedTransitionProperty> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::ComputedTransitionProperty> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::ComputedTransitionProperty get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::UIElements::ComputedTransitionProperty value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::UIElements::ComputedTransitionProperty item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::UIElements::ComputedTransitionProperty item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::ComputedTransitionProperty> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::UIElements::ComputedTransitionProperty> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::UIElements::ComputedTransitionProperty item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::ComputedTransitionProperty> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::ComputedTransitionProperty item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::ComputedTransitionProperty item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::ComputedTransitionProperty> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::ComputedTransitionProperty item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::UIElements::ComputedTransitionProperty,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::UIElements::ComputedTransitionProperty> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::ComputedTransitionProperty> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::UIElements::ComputedTransitionProperty> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::ComputedTransitionProperty Find(System::Predicate_1<UnityEngine::UIElements::ComputedTransitionProperty> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::ComputedTransitionProperty> FindAll(System::Predicate_1<UnityEngine::UIElements::ComputedTransitionProperty> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::UIElements::ComputedTransitionProperty> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::UIElements::ComputedTransitionProperty> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::ComputedTransitionProperty FindLast(System::Predicate_1<UnityEngine::UIElements::ComputedTransitionProperty> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::UIElements::ComputedTransitionProperty> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::ComputedTransitionProperty> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::ComputedTransitionProperty> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::ComputedTransitionProperty> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::ComputedTransitionProperty item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::UIElements::ComputedTransitionProperty item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::ComputedTransitionProperty> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::UIElements::ComputedTransitionProperty item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::UIElements::ComputedTransitionProperty> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::UIElements::ComputedTransitionProperty> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::ComputedTransitionProperty> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::UIElements::ComputedTransitionProperty> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::UIElements::ComputedTransitionProperty> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::ComputedTransitionProperty> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4029 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<HoudiniEngineUnity::HAPI_PartInfo> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<HoudiniEngineUnity::HAPI_PartInfo>;

/// @brief Convert operator to System::Collections::Generic::IList_1<HoudiniEngineUnity::HAPI_PartInfo>
constexpr operator  System::Collections::Generic::IList_1<HoudiniEngineUnity::HAPI_PartInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<HoudiniEngineUnity::HAPI_PartInfo>
constexpr operator  System::Collections::Generic::ICollection_1<HoudiniEngineUnity::HAPI_PartInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<HoudiniEngineUnity::HAPI_PartInfo>
constexpr operator  System::Collections::Generic::IEnumerable_1<HoudiniEngineUnity::HAPI_PartInfo>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<HoudiniEngineUnity::HAPI_PartInfo>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<HoudiniEngineUnity::HAPI_PartInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<HoudiniEngineUnity::HAPI_PartInfo>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<HoudiniEngineUnity::HAPI_PartInfo>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<HoudiniEngineUnity::HAPI_PartInfo> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<HoudiniEngineUnity::HAPI_PartInfo> value) ;

constexpr ::ArrayW<HoudiniEngineUnity::HAPI_PartInfo> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<HoudiniEngineUnity::HAPI_PartInfo> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<HoudiniEngineUnity::HAPI_PartInfo> value) ;

static ::ArrayW<HoudiniEngineUnity::HAPI_PartInfo> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 HoudiniEngineUnity::HAPI_PartInfo __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<HoudiniEngineUnity::HAPI_PartInfo>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<HoudiniEngineUnity::HAPI_PartInfo> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<HoudiniEngineUnity::HAPI_PartInfo> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 HoudiniEngineUnity::HAPI_PartInfo get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, HoudiniEngineUnity::HAPI_PartInfo value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(HoudiniEngineUnity::HAPI_PartInfo item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(HoudiniEngineUnity::HAPI_PartInfo item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<HoudiniEngineUnity::HAPI_PartInfo> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<HoudiniEngineUnity::HAPI_PartInfo> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, HoudiniEngineUnity::HAPI_PartInfo item, System::Collections::Generic::IComparer_1<HoudiniEngineUnity::HAPI_PartInfo> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(HoudiniEngineUnity::HAPI_PartInfo item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(HoudiniEngineUnity::HAPI_PartInfo item, System::Collections::Generic::IComparer_1<HoudiniEngineUnity::HAPI_PartInfo> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(HoudiniEngineUnity::HAPI_PartInfo item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<HoudiniEngineUnity::HAPI_PartInfo,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<HoudiniEngineUnity::HAPI_PartInfo> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<HoudiniEngineUnity::HAPI_PartInfo> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<HoudiniEngineUnity::HAPI_PartInfo> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 HoudiniEngineUnity::HAPI_PartInfo Find(System::Predicate_1<HoudiniEngineUnity::HAPI_PartInfo> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<HoudiniEngineUnity::HAPI_PartInfo> FindAll(System::Predicate_1<HoudiniEngineUnity::HAPI_PartInfo> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<HoudiniEngineUnity::HAPI_PartInfo> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<HoudiniEngineUnity::HAPI_PartInfo> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 HoudiniEngineUnity::HAPI_PartInfo FindLast(System::Predicate_1<HoudiniEngineUnity::HAPI_PartInfo> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<HoudiniEngineUnity::HAPI_PartInfo> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<HoudiniEngineUnity::HAPI_PartInfo> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<HoudiniEngineUnity::HAPI_PartInfo> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<HoudiniEngineUnity::HAPI_PartInfo> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(HoudiniEngineUnity::HAPI_PartInfo item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, HoudiniEngineUnity::HAPI_PartInfo item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<HoudiniEngineUnity::HAPI_PartInfo> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(HoudiniEngineUnity::HAPI_PartInfo item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<HoudiniEngineUnity::HAPI_PartInfo> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<HoudiniEngineUnity::HAPI_PartInfo> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<HoudiniEngineUnity::HAPI_PartInfo> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<HoudiniEngineUnity::HAPI_PartInfo> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<HoudiniEngineUnity::HAPI_PartInfo> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<HoudiniEngineUnity::HAPI_PartInfo> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4077 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::Timeline::IntervalTreeNode> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::Timeline::IntervalTreeNode>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::Timeline::IntervalTreeNode>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::Timeline::IntervalTreeNode>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::Timeline::IntervalTreeNode>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::Timeline::IntervalTreeNode>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::IntervalTreeNode>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::IntervalTreeNode>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::Timeline::IntervalTreeNode>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::Timeline::IntervalTreeNode>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Timeline::IntervalTreeNode>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Timeline::IntervalTreeNode>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::Timeline::IntervalTreeNode> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::Timeline::IntervalTreeNode> value) ;

constexpr ::ArrayW<UnityEngine::Timeline::IntervalTreeNode> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::Timeline::IntervalTreeNode> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::Timeline::IntervalTreeNode> value) ;

static ::ArrayW<UnityEngine::Timeline::IntervalTreeNode> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::Timeline::IntervalTreeNode __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::IntervalTreeNode>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::IntervalTreeNode> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::IntervalTreeNode> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Timeline::IntervalTreeNode get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::Timeline::IntervalTreeNode value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::Timeline::IntervalTreeNode item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::Timeline::IntervalTreeNode item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::IntervalTreeNode> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::Timeline::IntervalTreeNode> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::Timeline::IntervalTreeNode item, System::Collections::Generic::IComparer_1<UnityEngine::Timeline::IntervalTreeNode> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::Timeline::IntervalTreeNode item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::Timeline::IntervalTreeNode item, System::Collections::Generic::IComparer_1<UnityEngine::Timeline::IntervalTreeNode> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::Timeline::IntervalTreeNode item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::Timeline::IntervalTreeNode,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::Timeline::IntervalTreeNode> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::Timeline::IntervalTreeNode> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::Timeline::IntervalTreeNode> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::Timeline::IntervalTreeNode Find(System::Predicate_1<UnityEngine::Timeline::IntervalTreeNode> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::Timeline::IntervalTreeNode> FindAll(System::Predicate_1<UnityEngine::Timeline::IntervalTreeNode> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::Timeline::IntervalTreeNode> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::Timeline::IntervalTreeNode> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::Timeline::IntervalTreeNode FindLast(System::Predicate_1<UnityEngine::Timeline::IntervalTreeNode> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::Timeline::IntervalTreeNode> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::Timeline::IntervalTreeNode> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::Timeline::IntervalTreeNode> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::Timeline::IntervalTreeNode> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::Timeline::IntervalTreeNode item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::Timeline::IntervalTreeNode item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::IntervalTreeNode> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::Timeline::IntervalTreeNode item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::Timeline::IntervalTreeNode> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::Timeline::IntervalTreeNode> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::Timeline::IntervalTreeNode> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::Timeline::IntervalTreeNode> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::Timeline::IntervalTreeNode> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::IntervalTreeNode> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4078 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<Newtonsoft::Json::JsonPosition> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<Newtonsoft::Json::JsonPosition>;

/// @brief Convert operator to System::Collections::Generic::IList_1<Newtonsoft::Json::JsonPosition>
constexpr operator  System::Collections::Generic::IList_1<Newtonsoft::Json::JsonPosition>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<Newtonsoft::Json::JsonPosition>
constexpr operator  System::Collections::Generic::ICollection_1<Newtonsoft::Json::JsonPosition>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<Newtonsoft::Json::JsonPosition>
constexpr operator  System::Collections::Generic::IEnumerable_1<Newtonsoft::Json::JsonPosition>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<Newtonsoft::Json::JsonPosition>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<Newtonsoft::Json::JsonPosition>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<Newtonsoft::Json::JsonPosition>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<Newtonsoft::Json::JsonPosition>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<Newtonsoft::Json::JsonPosition> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<Newtonsoft::Json::JsonPosition> value) ;

constexpr ::ArrayW<Newtonsoft::Json::JsonPosition> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<Newtonsoft::Json::JsonPosition> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<Newtonsoft::Json::JsonPosition> value) ;

static ::ArrayW<Newtonsoft::Json::JsonPosition> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 Newtonsoft::Json::JsonPosition __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<Newtonsoft::Json::JsonPosition>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<Newtonsoft::Json::JsonPosition> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<Newtonsoft::Json::JsonPosition> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 Newtonsoft::Json::JsonPosition get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, Newtonsoft::Json::JsonPosition value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(Newtonsoft::Json::JsonPosition item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(Newtonsoft::Json::JsonPosition item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<Newtonsoft::Json::JsonPosition> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<Newtonsoft::Json::JsonPosition> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, Newtonsoft::Json::JsonPosition item, System::Collections::Generic::IComparer_1<Newtonsoft::Json::JsonPosition> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(Newtonsoft::Json::JsonPosition item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(Newtonsoft::Json::JsonPosition item, System::Collections::Generic::IComparer_1<Newtonsoft::Json::JsonPosition> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(Newtonsoft::Json::JsonPosition item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<Newtonsoft::Json::JsonPosition,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<Newtonsoft::Json::JsonPosition> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<Newtonsoft::Json::JsonPosition> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<Newtonsoft::Json::JsonPosition> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 Newtonsoft::Json::JsonPosition Find(System::Predicate_1<Newtonsoft::Json::JsonPosition> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<Newtonsoft::Json::JsonPosition> FindAll(System::Predicate_1<Newtonsoft::Json::JsonPosition> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<Newtonsoft::Json::JsonPosition> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<Newtonsoft::Json::JsonPosition> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 Newtonsoft::Json::JsonPosition FindLast(System::Predicate_1<Newtonsoft::Json::JsonPosition> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<Newtonsoft::Json::JsonPosition> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<Newtonsoft::Json::JsonPosition> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<Newtonsoft::Json::JsonPosition> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<Newtonsoft::Json::JsonPosition> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(Newtonsoft::Json::JsonPosition item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, Newtonsoft::Json::JsonPosition item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<Newtonsoft::Json::JsonPosition> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(Newtonsoft::Json::JsonPosition item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<Newtonsoft::Json::JsonPosition> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<Newtonsoft::Json::JsonPosition> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<Newtonsoft::Json::JsonPosition> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<Newtonsoft::Json::JsonPosition> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<Newtonsoft::Json::JsonPosition> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<Newtonsoft::Json::JsonPosition> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4094 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<MidiParser::MidiEvent> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<MidiParser::MidiEvent>;

/// @brief Convert operator to System::Collections::Generic::IList_1<MidiParser::MidiEvent>
constexpr operator  System::Collections::Generic::IList_1<MidiParser::MidiEvent>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<MidiParser::MidiEvent>
constexpr operator  System::Collections::Generic::ICollection_1<MidiParser::MidiEvent>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<MidiParser::MidiEvent>
constexpr operator  System::Collections::Generic::IEnumerable_1<MidiParser::MidiEvent>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<MidiParser::MidiEvent>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<MidiParser::MidiEvent>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<MidiParser::MidiEvent>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<MidiParser::MidiEvent>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<MidiParser::MidiEvent> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<MidiParser::MidiEvent> value) ;

constexpr ::ArrayW<MidiParser::MidiEvent> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<MidiParser::MidiEvent> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<MidiParser::MidiEvent> value) ;

static ::ArrayW<MidiParser::MidiEvent> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 MidiParser::MidiEvent __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<MidiParser::MidiEvent>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<MidiParser::MidiEvent> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<MidiParser::MidiEvent> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 MidiParser::MidiEvent get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, MidiParser::MidiEvent value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(MidiParser::MidiEvent item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(MidiParser::MidiEvent item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<MidiParser::MidiEvent> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<MidiParser::MidiEvent> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, MidiParser::MidiEvent item, System::Collections::Generic::IComparer_1<MidiParser::MidiEvent> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(MidiParser::MidiEvent item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(MidiParser::MidiEvent item, System::Collections::Generic::IComparer_1<MidiParser::MidiEvent> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(MidiParser::MidiEvent item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<MidiParser::MidiEvent,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<MidiParser::MidiEvent> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<MidiParser::MidiEvent> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<MidiParser::MidiEvent> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 MidiParser::MidiEvent Find(System::Predicate_1<MidiParser::MidiEvent> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<MidiParser::MidiEvent> FindAll(System::Predicate_1<MidiParser::MidiEvent> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<MidiParser::MidiEvent> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<MidiParser::MidiEvent> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 MidiParser::MidiEvent FindLast(System::Predicate_1<MidiParser::MidiEvent> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<MidiParser::MidiEvent> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<MidiParser::MidiEvent> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<MidiParser::MidiEvent> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<MidiParser::MidiEvent> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(MidiParser::MidiEvent item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, MidiParser::MidiEvent item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<MidiParser::MidiEvent> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(MidiParser::MidiEvent item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<MidiParser::MidiEvent> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<MidiParser::MidiEvent> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<MidiParser::MidiEvent> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<MidiParser::MidiEvent> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<MidiParser::MidiEvent> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<MidiParser::MidiEvent> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4102 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::ResourceManagement::Util::ObjectInitializationData>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::ResourceManagement::Util::ObjectInitializationData> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::ResourceManagement::Util::ObjectInitializationData> value) ;

constexpr ::ArrayW<UnityEngine::ResourceManagement::Util::ObjectInitializationData> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::ResourceManagement::Util::ObjectInitializationData> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::ResourceManagement::Util::ObjectInitializationData> value) ;

static ::ArrayW<UnityEngine::ResourceManagement::Util::ObjectInitializationData> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::ResourceManagement::Util::ObjectInitializationData __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ResourceManagement::Util::ObjectInitializationData get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::ResourceManagement::Util::ObjectInitializationData value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::ResourceManagement::Util::ObjectInitializationData item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::ResourceManagement::Util::ObjectInitializationData item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::ResourceManagement::Util::ObjectInitializationData item, System::Collections::Generic::IComparer_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::ResourceManagement::Util::ObjectInitializationData item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::ResourceManagement::Util::ObjectInitializationData item, System::Collections::Generic::IComparer_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::ResourceManagement::Util::ObjectInitializationData item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::ResourceManagement::Util::ObjectInitializationData,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::ResourceManagement::Util::ObjectInitializationData> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::ResourceManagement::Util::ObjectInitializationData> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::ResourceManagement::Util::ObjectInitializationData Find(System::Predicate_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData> FindAll(System::Predicate_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::ResourceManagement::Util::ObjectInitializationData FindLast(System::Predicate_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::ResourceManagement::Util::ObjectInitializationData> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::ResourceManagement::Util::ObjectInitializationData item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::ResourceManagement::Util::ObjectInitializationData item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::ResourceManagement::Util::ObjectInitializationData item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::ResourceManagement::Util::ObjectInitializationData> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4119 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::RaycastHit2D> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::RaycastHit2D>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::RaycastHit2D>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::RaycastHit2D>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::RaycastHit2D>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::RaycastHit2D>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::RaycastHit2D>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::RaycastHit2D>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::RaycastHit2D>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::RaycastHit2D>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::RaycastHit2D>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::RaycastHit2D>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::RaycastHit2D> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::RaycastHit2D> value) ;

constexpr ::ArrayW<UnityEngine::RaycastHit2D> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::RaycastHit2D> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::RaycastHit2D> value) ;

static ::ArrayW<UnityEngine::RaycastHit2D> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::RaycastHit2D __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::RaycastHit2D>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::RaycastHit2D> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::RaycastHit2D> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::RaycastHit2D get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::RaycastHit2D value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::RaycastHit2D item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::RaycastHit2D item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::RaycastHit2D> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::RaycastHit2D> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::RaycastHit2D item, System::Collections::Generic::IComparer_1<UnityEngine::RaycastHit2D> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::RaycastHit2D item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::RaycastHit2D item, System::Collections::Generic::IComparer_1<UnityEngine::RaycastHit2D> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::RaycastHit2D item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::RaycastHit2D,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::RaycastHit2D> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::RaycastHit2D> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::RaycastHit2D> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::RaycastHit2D Find(System::Predicate_1<UnityEngine::RaycastHit2D> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::RaycastHit2D> FindAll(System::Predicate_1<UnityEngine::RaycastHit2D> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::RaycastHit2D> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::RaycastHit2D> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::RaycastHit2D FindLast(System::Predicate_1<UnityEngine::RaycastHit2D> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::RaycastHit2D> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::RaycastHit2D> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::RaycastHit2D> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::RaycastHit2D> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::RaycastHit2D item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::RaycastHit2D item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::RaycastHit2D> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::RaycastHit2D item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::RaycastHit2D> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::RaycastHit2D> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::RaycastHit2D> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::RaycastHit2D> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::RaycastHit2D> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::RaycastHit2D> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4125 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::UIElements::UIR::RenderChainTextEntry> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UIR::RenderChainTextEntry>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::RenderChainTextEntry>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::RenderChainTextEntry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UIR::RenderChainTextEntry>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UIR::RenderChainTextEntry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::RenderChainTextEntry>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::RenderChainTextEntry>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UIR::RenderChainTextEntry>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UIR::RenderChainTextEntry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UIR::RenderChainTextEntry>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UIR::RenderChainTextEntry>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::UIElements::UIR::RenderChainTextEntry> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::UIElements::UIR::RenderChainTextEntry> value) ;

constexpr ::ArrayW<UnityEngine::UIElements::UIR::RenderChainTextEntry> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::UIElements::UIR::RenderChainTextEntry> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::UIElements::UIR::RenderChainTextEntry> value) ;

static ::ArrayW<UnityEngine::UIElements::UIR::RenderChainTextEntry> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::UIElements::UIR::RenderChainTextEntry __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::RenderChainTextEntry>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::RenderChainTextEntry> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::RenderChainTextEntry> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UIR::RenderChainTextEntry get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::UIElements::UIR::RenderChainTextEntry value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::UIElements::UIR::RenderChainTextEntry item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::UIElements::UIR::RenderChainTextEntry item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::RenderChainTextEntry> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::UIElements::UIR::RenderChainTextEntry> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::UIElements::UIR::RenderChainTextEntry item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UIR::RenderChainTextEntry> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::UIR::RenderChainTextEntry item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::UIR::RenderChainTextEntry item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UIR::RenderChainTextEntry> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::UIR::RenderChainTextEntry item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::UIElements::UIR::RenderChainTextEntry,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::UIElements::UIR::RenderChainTextEntry> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::UIR::RenderChainTextEntry> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::UIElements::UIR::RenderChainTextEntry> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::UIR::RenderChainTextEntry Find(System::Predicate_1<UnityEngine::UIElements::UIR::RenderChainTextEntry> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::RenderChainTextEntry> FindAll(System::Predicate_1<UnityEngine::UIElements::UIR::RenderChainTextEntry> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::UIElements::UIR::RenderChainTextEntry> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::UIElements::UIR::RenderChainTextEntry> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::UIR::RenderChainTextEntry FindLast(System::Predicate_1<UnityEngine::UIElements::UIR::RenderChainTextEntry> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::UIElements::UIR::RenderChainTextEntry> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UIR::RenderChainTextEntry> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UIR::RenderChainTextEntry> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::RenderChainTextEntry> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::UIR::RenderChainTextEntry item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::UIElements::UIR::RenderChainTextEntry item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::RenderChainTextEntry> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::UIElements::UIR::RenderChainTextEntry item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::UIElements::UIR::RenderChainTextEntry> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UIR::RenderChainTextEntry> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UIR::RenderChainTextEntry> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::UIElements::UIR::RenderChainTextEntry> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::UIElements::UIR::RenderChainTextEntry> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::RenderChainTextEntry> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4127 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::UIElements::RuleMatcher> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::RuleMatcher>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::RuleMatcher>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::RuleMatcher>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::RuleMatcher>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::RuleMatcher>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::RuleMatcher>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::RuleMatcher>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::RuleMatcher>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::RuleMatcher>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::RuleMatcher>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::RuleMatcher>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::UIElements::RuleMatcher> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::UIElements::RuleMatcher> value) ;

constexpr ::ArrayW<UnityEngine::UIElements::RuleMatcher> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::UIElements::RuleMatcher> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::UIElements::RuleMatcher> value) ;

static ::ArrayW<UnityEngine::UIElements::RuleMatcher> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::UIElements::RuleMatcher __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::RuleMatcher>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::RuleMatcher> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::RuleMatcher> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::RuleMatcher get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::UIElements::RuleMatcher value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::UIElements::RuleMatcher item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::UIElements::RuleMatcher item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::RuleMatcher> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::UIElements::RuleMatcher> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::UIElements::RuleMatcher item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::RuleMatcher> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::RuleMatcher item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::RuleMatcher item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::RuleMatcher> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::RuleMatcher item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::UIElements::RuleMatcher,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::UIElements::RuleMatcher> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::RuleMatcher> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::UIElements::RuleMatcher> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::RuleMatcher Find(System::Predicate_1<UnityEngine::UIElements::RuleMatcher> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::RuleMatcher> FindAll(System::Predicate_1<UnityEngine::UIElements::RuleMatcher> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::UIElements::RuleMatcher> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::UIElements::RuleMatcher> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::RuleMatcher FindLast(System::Predicate_1<UnityEngine::UIElements::RuleMatcher> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::UIElements::RuleMatcher> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::RuleMatcher> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::RuleMatcher> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::RuleMatcher> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::RuleMatcher item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::UIElements::RuleMatcher item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::RuleMatcher> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::UIElements::RuleMatcher item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::UIElements::RuleMatcher> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::UIElements::RuleMatcher> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::RuleMatcher> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::UIElements::RuleMatcher> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::UIElements::RuleMatcher> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::RuleMatcher> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4135 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::StyleSheets::StylePropertyValue>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::UIElements::StyleSheets::StylePropertyValue> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::UIElements::StyleSheets::StylePropertyValue> value) ;

constexpr ::ArrayW<UnityEngine::UIElements::StyleSheets::StylePropertyValue> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::UIElements::StyleSheets::StylePropertyValue> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::UIElements::StyleSheets::StylePropertyValue> value) ;

static ::ArrayW<UnityEngine::UIElements::StyleSheets::StylePropertyValue> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::UIElements::StyleSheets::StylePropertyValue __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::StyleSheets::StylePropertyValue get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::UIElements::StyleSheets::StylePropertyValue value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::UIElements::StyleSheets::StylePropertyValue item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::UIElements::StyleSheets::StylePropertyValue item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::UIElements::StyleSheets::StylePropertyValue item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::StyleSheets::StylePropertyValue item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::StyleSheets::StylePropertyValue item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::StyleSheets::StylePropertyValue item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::UIElements::StyleSheets::StylePropertyValue,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::UIElements::StyleSheets::StylePropertyValue> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::StyleSheets::StylePropertyValue> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::StyleSheets::StylePropertyValue Find(System::Predicate_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue> FindAll(System::Predicate_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::StyleSheets::StylePropertyValue FindLast(System::Predicate_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::StyleSheets::StylePropertyValue> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::StyleSheets::StylePropertyValue item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::UIElements::StyleSheets::StylePropertyValue item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::UIElements::StyleSheets::StylePropertyValue item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::UIElements::StyleSheets::StylePropertyValue> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4137 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::UIElements::StyleSelectorPart> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::StyleSelectorPart>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSelectorPart>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSelectorPart>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::StyleSelectorPart>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::StyleSelectorPart>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSelectorPart>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSelectorPart>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::StyleSelectorPart>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::StyleSelectorPart>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::StyleSelectorPart>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::StyleSelectorPart>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::UIElements::StyleSelectorPart> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::UIElements::StyleSelectorPart> value) ;

constexpr ::ArrayW<UnityEngine::UIElements::StyleSelectorPart> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::UIElements::StyleSelectorPart> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::UIElements::StyleSelectorPart> value) ;

static ::ArrayW<UnityEngine::UIElements::StyleSelectorPart> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::UIElements::StyleSelectorPart __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSelectorPart>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSelectorPart> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSelectorPart> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::StyleSelectorPart get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::UIElements::StyleSelectorPart value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::UIElements::StyleSelectorPart item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::UIElements::StyleSelectorPart item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSelectorPart> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::UIElements::StyleSelectorPart> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::UIElements::StyleSelectorPart item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::StyleSelectorPart> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::StyleSelectorPart item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::StyleSelectorPart item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::StyleSelectorPart> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::StyleSelectorPart item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::UIElements::StyleSelectorPart,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::UIElements::StyleSelectorPart> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::StyleSelectorPart> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::UIElements::StyleSelectorPart> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::StyleSelectorPart Find(System::Predicate_1<UnityEngine::UIElements::StyleSelectorPart> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSelectorPart> FindAll(System::Predicate_1<UnityEngine::UIElements::StyleSelectorPart> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::UIElements::StyleSelectorPart> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::UIElements::StyleSelectorPart> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::StyleSelectorPart FindLast(System::Predicate_1<UnityEngine::UIElements::StyleSelectorPart> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::UIElements::StyleSelectorPart> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::StyleSelectorPart> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::StyleSelectorPart> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSelectorPart> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::StyleSelectorPart item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::UIElements::StyleSelectorPart item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSelectorPart> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::UIElements::StyleSelectorPart item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::UIElements::StyleSelectorPart> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::UIElements::StyleSelectorPart> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::StyleSelectorPart> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::UIElements::StyleSelectorPart> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::UIElements::StyleSelectorPart> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSelectorPart> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4138 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> value) ;

constexpr ::ArrayW<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> value) ;

static ::ArrayW<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken Find(System::Predicate_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> FindAll(System::Predicate_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken FindLast(System::Predicate_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4139 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::UIElements::StyleSheets::StyleValue> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::StyleSheets::StyleValue>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::StyleValue>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::StyleValue>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::StyleSheets::StyleValue>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::StyleSheets::StyleValue>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::StyleValue>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::StyleValue>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::StyleSheets::StyleValue>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::StyleSheets::StyleValue>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::StyleSheets::StyleValue>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::StyleSheets::StyleValue>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::UIElements::StyleSheets::StyleValue> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::UIElements::StyleSheets::StyleValue> value) ;

constexpr ::ArrayW<UnityEngine::UIElements::StyleSheets::StyleValue> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::UIElements::StyleSheets::StyleValue> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::UIElements::StyleSheets::StyleValue> value) ;

static ::ArrayW<UnityEngine::UIElements::StyleSheets::StyleValue> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::UIElements::StyleSheets::StyleValue __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::StyleValue>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::StyleValue> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::StyleValue> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::StyleSheets::StyleValue get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::UIElements::StyleSheets::StyleValue value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::UIElements::StyleSheets::StyleValue item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::UIElements::StyleSheets::StyleValue item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::StyleValue> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::UIElements::StyleSheets::StyleValue> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::UIElements::StyleSheets::StyleValue item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::StyleSheets::StyleValue> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::StyleSheets::StyleValue item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::StyleSheets::StyleValue item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::StyleSheets::StyleValue> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::StyleSheets::StyleValue item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::UIElements::StyleSheets::StyleValue,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::UIElements::StyleSheets::StyleValue> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::StyleSheets::StyleValue> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::UIElements::StyleSheets::StyleValue> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::StyleSheets::StyleValue Find(System::Predicate_1<UnityEngine::UIElements::StyleSheets::StyleValue> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::StyleValue> FindAll(System::Predicate_1<UnityEngine::UIElements::StyleSheets::StyleValue> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::UIElements::StyleSheets::StyleValue> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::UIElements::StyleSheets::StyleValue> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::StyleSheets::StyleValue FindLast(System::Predicate_1<UnityEngine::UIElements::StyleSheets::StyleValue> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::UIElements::StyleSheets::StyleValue> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::StyleSheets::StyleValue> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::StyleSheets::StyleValue> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::StyleValue> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::StyleSheets::StyleValue item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::UIElements::StyleSheets::StyleValue item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::StyleValue> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::UIElements::StyleSheets::StyleValue item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::UIElements::StyleSheets::StyleValue> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::UIElements::StyleSheets::StyleValue> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::StyleSheets::StyleValue> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::UIElements::StyleSheets::StyleValue> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::UIElements::StyleSheets::StyleValue> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::StyleValue> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4140 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::StyleSheets::StyleValueManaged>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::UIElements::StyleSheets::StyleValueManaged> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::UIElements::StyleSheets::StyleValueManaged> value) ;

constexpr ::ArrayW<UnityEngine::UIElements::StyleSheets::StyleValueManaged> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::UIElements::StyleSheets::StyleValueManaged> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::UIElements::StyleSheets::StyleValueManaged> value) ;

static ::ArrayW<UnityEngine::UIElements::StyleSheets::StyleValueManaged> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::UIElements::StyleSheets::StyleValueManaged __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::StyleSheets::StyleValueManaged get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::UIElements::StyleSheets::StyleValueManaged value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::UIElements::StyleSheets::StyleValueManaged item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::UIElements::StyleSheets::StyleValueManaged item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::UIElements::StyleSheets::StyleValueManaged item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::StyleSheets::StyleValueManaged item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::StyleSheets::StyleValueManaged item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::StyleSheets::StyleValueManaged item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::UIElements::StyleSheets::StyleValueManaged,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::UIElements::StyleSheets::StyleValueManaged> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::StyleSheets::StyleValueManaged> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::StyleSheets::StyleValueManaged Find(System::Predicate_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged> FindAll(System::Predicate_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::StyleSheets::StyleValueManaged FindLast(System::Predicate_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::StyleSheets::StyleValueManaged> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::StyleSheets::StyleValueManaged item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::UIElements::StyleSheets::StyleValueManaged item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::UIElements::StyleSheets::StyleValueManaged item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::UIElements::StyleSheets::StyleValueManaged> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4141 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::UIElements::StyleVariable> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::StyleVariable>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleVariable>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleVariable>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::StyleVariable>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::StyleVariable>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleVariable>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleVariable>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::StyleVariable>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::StyleVariable>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::StyleVariable>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::StyleVariable>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::UIElements::StyleVariable> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::UIElements::StyleVariable> value) ;

constexpr ::ArrayW<UnityEngine::UIElements::StyleVariable> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::UIElements::StyleVariable> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::UIElements::StyleVariable> value) ;

static ::ArrayW<UnityEngine::UIElements::StyleVariable> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::UIElements::StyleVariable __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleVariable>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleVariable> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleVariable> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::StyleVariable get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::UIElements::StyleVariable value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::UIElements::StyleVariable item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::UIElements::StyleVariable item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleVariable> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::UIElements::StyleVariable> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::UIElements::StyleVariable item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::StyleVariable> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::StyleVariable item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::StyleVariable item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::StyleVariable> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::StyleVariable item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::UIElements::StyleVariable,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::UIElements::StyleVariable> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::StyleVariable> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::UIElements::StyleVariable> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::StyleVariable Find(System::Predicate_1<UnityEngine::UIElements::StyleVariable> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::StyleVariable> FindAll(System::Predicate_1<UnityEngine::UIElements::StyleVariable> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::UIElements::StyleVariable> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::UIElements::StyleVariable> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::StyleVariable FindLast(System::Predicate_1<UnityEngine::UIElements::StyleVariable> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::UIElements::StyleVariable> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::StyleVariable> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::StyleVariable> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::StyleVariable> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::StyleVariable item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::UIElements::StyleVariable item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleVariable> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::UIElements::StyleVariable item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::UIElements::StyleVariable> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::UIElements::StyleVariable> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::StyleVariable> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::UIElements::StyleVariable> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::UIElements::StyleVariable> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleVariable> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4142 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::Rendering::SubMeshDescriptor> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::Rendering::SubMeshDescriptor>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::Rendering::SubMeshDescriptor>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::Rendering::SubMeshDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::Rendering::SubMeshDescriptor>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::Rendering::SubMeshDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::Rendering::SubMeshDescriptor>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::Rendering::SubMeshDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::Rendering::SubMeshDescriptor>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::Rendering::SubMeshDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Rendering::SubMeshDescriptor>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Rendering::SubMeshDescriptor>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::Rendering::SubMeshDescriptor> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::Rendering::SubMeshDescriptor> value) ;

constexpr ::ArrayW<UnityEngine::Rendering::SubMeshDescriptor> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::Rendering::SubMeshDescriptor> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::Rendering::SubMeshDescriptor> value) ;

static ::ArrayW<UnityEngine::Rendering::SubMeshDescriptor> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::Rendering::SubMeshDescriptor __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::Rendering::SubMeshDescriptor>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::Rendering::SubMeshDescriptor> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::Rendering::SubMeshDescriptor> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Rendering::SubMeshDescriptor get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::Rendering::SubMeshDescriptor value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::Rendering::SubMeshDescriptor item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::Rendering::SubMeshDescriptor item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::Rendering::SubMeshDescriptor> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::Rendering::SubMeshDescriptor> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::Rendering::SubMeshDescriptor item, System::Collections::Generic::IComparer_1<UnityEngine::Rendering::SubMeshDescriptor> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::Rendering::SubMeshDescriptor item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::Rendering::SubMeshDescriptor item, System::Collections::Generic::IComparer_1<UnityEngine::Rendering::SubMeshDescriptor> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::Rendering::SubMeshDescriptor item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::Rendering::SubMeshDescriptor,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::Rendering::SubMeshDescriptor> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::Rendering::SubMeshDescriptor> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::Rendering::SubMeshDescriptor> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::Rendering::SubMeshDescriptor Find(System::Predicate_1<UnityEngine::Rendering::SubMeshDescriptor> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::Rendering::SubMeshDescriptor> FindAll(System::Predicate_1<UnityEngine::Rendering::SubMeshDescriptor> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::Rendering::SubMeshDescriptor> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::Rendering::SubMeshDescriptor> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::Rendering::SubMeshDescriptor FindLast(System::Predicate_1<UnityEngine::Rendering::SubMeshDescriptor> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::Rendering::SubMeshDescriptor> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::Rendering::SubMeshDescriptor> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::Rendering::SubMeshDescriptor> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::Rendering::SubMeshDescriptor> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::Rendering::SubMeshDescriptor item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::Rendering::SubMeshDescriptor item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::Rendering::SubMeshDescriptor> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::Rendering::SubMeshDescriptor item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::Rendering::SubMeshDescriptor> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::Rendering::SubMeshDescriptor> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::Rendering::SubMeshDescriptor> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::Rendering::SubMeshDescriptor> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::Rendering::SubMeshDescriptor> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::Rendering::SubMeshDescriptor> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4165 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<HoudiniEngineUnity::TransformData> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<HoudiniEngineUnity::TransformData>;

/// @brief Convert operator to System::Collections::Generic::IList_1<HoudiniEngineUnity::TransformData>
constexpr operator  System::Collections::Generic::IList_1<HoudiniEngineUnity::TransformData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<HoudiniEngineUnity::TransformData>
constexpr operator  System::Collections::Generic::ICollection_1<HoudiniEngineUnity::TransformData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<HoudiniEngineUnity::TransformData>
constexpr operator  System::Collections::Generic::IEnumerable_1<HoudiniEngineUnity::TransformData>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<HoudiniEngineUnity::TransformData>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<HoudiniEngineUnity::TransformData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<HoudiniEngineUnity::TransformData>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<HoudiniEngineUnity::TransformData>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<HoudiniEngineUnity::TransformData> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<HoudiniEngineUnity::TransformData> value) ;

constexpr ::ArrayW<HoudiniEngineUnity::TransformData> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<HoudiniEngineUnity::TransformData> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<HoudiniEngineUnity::TransformData> value) ;

static ::ArrayW<HoudiniEngineUnity::TransformData> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 HoudiniEngineUnity::TransformData __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<HoudiniEngineUnity::TransformData>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<HoudiniEngineUnity::TransformData> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<HoudiniEngineUnity::TransformData> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 HoudiniEngineUnity::TransformData get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, HoudiniEngineUnity::TransformData value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(HoudiniEngineUnity::TransformData item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(HoudiniEngineUnity::TransformData item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<HoudiniEngineUnity::TransformData> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<HoudiniEngineUnity::TransformData> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, HoudiniEngineUnity::TransformData item, System::Collections::Generic::IComparer_1<HoudiniEngineUnity::TransformData> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(HoudiniEngineUnity::TransformData item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(HoudiniEngineUnity::TransformData item, System::Collections::Generic::IComparer_1<HoudiniEngineUnity::TransformData> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(HoudiniEngineUnity::TransformData item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<HoudiniEngineUnity::TransformData,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<HoudiniEngineUnity::TransformData> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<HoudiniEngineUnity::TransformData> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<HoudiniEngineUnity::TransformData> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 HoudiniEngineUnity::TransformData Find(System::Predicate_1<HoudiniEngineUnity::TransformData> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<HoudiniEngineUnity::TransformData> FindAll(System::Predicate_1<HoudiniEngineUnity::TransformData> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<HoudiniEngineUnity::TransformData> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<HoudiniEngineUnity::TransformData> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 HoudiniEngineUnity::TransformData FindLast(System::Predicate_1<HoudiniEngineUnity::TransformData> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<HoudiniEngineUnity::TransformData> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<HoudiniEngineUnity::TransformData> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<HoudiniEngineUnity::TransformData> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<HoudiniEngineUnity::TransformData> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(HoudiniEngineUnity::TransformData item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, HoudiniEngineUnity::TransformData item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<HoudiniEngineUnity::TransformData> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(HoudiniEngineUnity::TransformData item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<HoudiniEngineUnity::TransformData> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<HoudiniEngineUnity::TransformData> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<HoudiniEngineUnity::TransformData> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<HoudiniEngineUnity::TransformData> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<HoudiniEngineUnity::TransformData> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<HoudiniEngineUnity::TransformData> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4166 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::TreeInstance> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::TreeInstance>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::TreeInstance>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::TreeInstance>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::TreeInstance>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::TreeInstance>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::TreeInstance>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::TreeInstance>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::TreeInstance>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::TreeInstance>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::TreeInstance>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::TreeInstance>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::TreeInstance> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::TreeInstance> value) ;

constexpr ::ArrayW<UnityEngine::TreeInstance> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::TreeInstance> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::TreeInstance> value) ;

static ::ArrayW<UnityEngine::TreeInstance> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::TreeInstance __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::TreeInstance>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::TreeInstance> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::TreeInstance> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::TreeInstance get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::TreeInstance value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::TreeInstance item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::TreeInstance item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::TreeInstance> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::TreeInstance> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::TreeInstance item, System::Collections::Generic::IComparer_1<UnityEngine::TreeInstance> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::TreeInstance item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::TreeInstance item, System::Collections::Generic::IComparer_1<UnityEngine::TreeInstance> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::TreeInstance item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::TreeInstance,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::TreeInstance> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::TreeInstance> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::TreeInstance> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::TreeInstance Find(System::Predicate_1<UnityEngine::TreeInstance> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::TreeInstance> FindAll(System::Predicate_1<UnityEngine::TreeInstance> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::TreeInstance> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::TreeInstance> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::TreeInstance FindLast(System::Predicate_1<UnityEngine::TreeInstance> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::TreeInstance> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::TreeInstance> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::TreeInstance> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::TreeInstance> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::TreeInstance item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::TreeInstance item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::TreeInstance> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::TreeInstance item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::TreeInstance> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::TreeInstance> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::TreeInstance> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::TreeInstance> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::TreeInstance> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::TreeInstance> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4171 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::InputSystem::XR::UsageHint> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::XR::UsageHint>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::InputSystem::XR::UsageHint>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::InputSystem::XR::UsageHint>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::XR::UsageHint>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::XR::UsageHint>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::XR::UsageHint>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::XR::UsageHint>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::XR::UsageHint>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::XR::UsageHint>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::XR::UsageHint>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::XR::UsageHint>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::InputSystem::XR::UsageHint> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::InputSystem::XR::UsageHint> value) ;

constexpr ::ArrayW<UnityEngine::InputSystem::XR::UsageHint> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::InputSystem::XR::UsageHint> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::InputSystem::XR::UsageHint> value) ;

static ::ArrayW<UnityEngine::InputSystem::XR::UsageHint> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::InputSystem::XR::UsageHint __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::XR::UsageHint>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::XR::UsageHint> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::XR::UsageHint> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::XR::UsageHint get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::InputSystem::XR::UsageHint value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::InputSystem::XR::UsageHint item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::InputSystem::XR::UsageHint item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::XR::UsageHint> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::InputSystem::XR::UsageHint> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::InputSystem::XR::UsageHint item, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::XR::UsageHint> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::InputSystem::XR::UsageHint item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::InputSystem::XR::UsageHint item, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::XR::UsageHint> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::InputSystem::XR::UsageHint item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::InputSystem::XR::UsageHint,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::InputSystem::XR::UsageHint> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::InputSystem::XR::UsageHint> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::InputSystem::XR::UsageHint> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::InputSystem::XR::UsageHint Find(System::Predicate_1<UnityEngine::InputSystem::XR::UsageHint> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::InputSystem::XR::UsageHint> FindAll(System::Predicate_1<UnityEngine::InputSystem::XR::UsageHint> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::InputSystem::XR::UsageHint> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::InputSystem::XR::UsageHint> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::InputSystem::XR::UsageHint FindLast(System::Predicate_1<UnityEngine::InputSystem::XR::UsageHint> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::InputSystem::XR::UsageHint> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::XR::UsageHint> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::XR::UsageHint> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::InputSystem::XR::UsageHint> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::InputSystem::XR::UsageHint item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::InputSystem::XR::UsageHint item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::XR::UsageHint> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::InputSystem::XR::UsageHint item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::InputSystem::XR::UsageHint> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::XR::UsageHint> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::XR::UsageHint> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::InputSystem::XR::UsageHint> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::InputSystem::XR::UsageHint> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::XR::UsageHint> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4177 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<System::Security::Cryptography::X509Certificates::X509ChainStatus> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::Security::Cryptography::X509Certificates::X509ChainStatus>;

/// @brief Convert operator to System::Collections::Generic::IList_1<System::Security::Cryptography::X509Certificates::X509ChainStatus>
constexpr operator  System::Collections::Generic::IList_1<System::Security::Cryptography::X509Certificates::X509ChainStatus>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::Security::Cryptography::X509Certificates::X509ChainStatus>
constexpr operator  System::Collections::Generic::ICollection_1<System::Security::Cryptography::X509Certificates::X509ChainStatus>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::Security::Cryptography::X509Certificates::X509ChainStatus>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::Security::Cryptography::X509Certificates::X509ChainStatus>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::Security::Cryptography::X509Certificates::X509ChainStatus>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::Security::Cryptography::X509Certificates::X509ChainStatus>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::Security::Cryptography::X509Certificates::X509ChainStatus>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::Security::Cryptography::X509Certificates::X509ChainStatus>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<System::Security::Cryptography::X509Certificates::X509ChainStatus> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<System::Security::Cryptography::X509Certificates::X509ChainStatus> value) ;

constexpr ::ArrayW<System::Security::Cryptography::X509Certificates::X509ChainStatus> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<System::Security::Cryptography::X509Certificates::X509ChainStatus> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<System::Security::Cryptography::X509Certificates::X509ChainStatus> value) ;

static ::ArrayW<System::Security::Cryptography::X509Certificates::X509ChainStatus> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 System::Security::Cryptography::X509Certificates::X509ChainStatus __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<System::Security::Cryptography::X509Certificates::X509ChainStatus>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<System::Security::Cryptography::X509Certificates::X509ChainStatus> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<System::Security::Cryptography::X509Certificates::X509ChainStatus> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Security::Cryptography::X509Certificates::X509ChainStatus get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, System::Security::Cryptography::X509Certificates::X509ChainStatus value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(System::Security::Cryptography::X509Certificates::X509ChainStatus item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(System::Security::Cryptography::X509Certificates::X509ChainStatus item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<System::Security::Cryptography::X509Certificates::X509ChainStatus> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<System::Security::Cryptography::X509Certificates::X509ChainStatus> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, System::Security::Cryptography::X509Certificates::X509ChainStatus item, System::Collections::Generic::IComparer_1<System::Security::Cryptography::X509Certificates::X509ChainStatus> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::Security::Cryptography::X509Certificates::X509ChainStatus item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::Security::Cryptography::X509Certificates::X509ChainStatus item, System::Collections::Generic::IComparer_1<System::Security::Cryptography::X509Certificates::X509ChainStatus> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::Security::Cryptography::X509Certificates::X509ChainStatus item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<System::Security::Cryptography::X509Certificates::X509ChainStatus,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<System::Security::Cryptography::X509Certificates::X509ChainStatus> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::Security::Cryptography::X509Certificates::X509ChainStatus> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<System::Security::Cryptography::X509Certificates::X509ChainStatus> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Security::Cryptography::X509Certificates::X509ChainStatus Find(System::Predicate_1<System::Security::Cryptography::X509Certificates::X509ChainStatus> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::Security::Cryptography::X509Certificates::X509ChainStatus> FindAll(System::Predicate_1<System::Security::Cryptography::X509Certificates::X509ChainStatus> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<System::Security::Cryptography::X509Certificates::X509ChainStatus> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<System::Security::Cryptography::X509Certificates::X509ChainStatus> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Security::Cryptography::X509Certificates::X509ChainStatus FindLast(System::Predicate_1<System::Security::Cryptography::X509Certificates::X509ChainStatus> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<System::Security::Cryptography::X509Certificates::X509ChainStatus> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::Security::Cryptography::X509Certificates::X509ChainStatus> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::Security::Cryptography::X509Certificates::X509ChainStatus> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::Security::Cryptography::X509Certificates::X509ChainStatus> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::Security::Cryptography::X509Certificates::X509ChainStatus item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, System::Security::Cryptography::X509Certificates::X509ChainStatus item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<System::Security::Cryptography::X509Certificates::X509ChainStatus> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(System::Security::Cryptography::X509Certificates::X509ChainStatus item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<System::Security::Cryptography::X509Certificates::X509ChainStatus> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<System::Security::Cryptography::X509Certificates::X509ChainStatus> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<System::Security::Cryptography::X509Certificates::X509ChainStatus> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<System::Security::Cryptography::X509Certificates::X509ChainStatus> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<System::Security::Cryptography::X509Certificates::X509ChainStatus> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<System::Security::Cryptography::X509Certificates::X509ChainStatus> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4178 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::XR::XRFeatureDescriptor>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::InputSystem::XR::XRFeatureDescriptor> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::InputSystem::XR::XRFeatureDescriptor> value) ;

constexpr ::ArrayW<UnityEngine::InputSystem::XR::XRFeatureDescriptor> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::InputSystem::XR::XRFeatureDescriptor> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::InputSystem::XR::XRFeatureDescriptor> value) ;

static ::ArrayW<UnityEngine::InputSystem::XR::XRFeatureDescriptor> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::InputSystem::XR::XRFeatureDescriptor __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::XR::XRFeatureDescriptor get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::InputSystem::XR::XRFeatureDescriptor value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::InputSystem::XR::XRFeatureDescriptor item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::InputSystem::XR::XRFeatureDescriptor item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::InputSystem::XR::XRFeatureDescriptor item, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::InputSystem::XR::XRFeatureDescriptor item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::InputSystem::XR::XRFeatureDescriptor item, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::InputSystem::XR::XRFeatureDescriptor item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::InputSystem::XR::XRFeatureDescriptor,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::InputSystem::XR::XRFeatureDescriptor> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::InputSystem::XR::XRFeatureDescriptor> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::InputSystem::XR::XRFeatureDescriptor Find(System::Predicate_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor> FindAll(System::Predicate_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::InputSystem::XR::XRFeatureDescriptor FindLast(System::Predicate_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::XR::XRFeatureDescriptor> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::InputSystem::XR::XRFeatureDescriptor item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::InputSystem::XR::XRFeatureDescriptor item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::InputSystem::XR::XRFeatureDescriptor item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::InputSystem::XR::XRFeatureDescriptor> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4182 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> value) ;

constexpr ::ArrayW<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> value) ;

static ::ArrayW<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo item, System::Collections::Generic::IComparer_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo item, System::Collections::Generic::IComparer_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo Find(System::Predicate_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> FindAll(System::Predicate_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo FindLast(System::Predicate_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4184 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData>;

/// @brief Convert operator to System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData>
constexpr operator  System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData>
constexpr operator  System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData>
constexpr operator  System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> value) ;

constexpr ::ArrayW<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> value) ;

static ::ArrayW<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 GlobalNamespace::GlobalNamespace__BeatLine__HighlightData __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__BeatLine__HighlightData get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, GlobalNamespace::GlobalNamespace__BeatLine__HighlightData value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(GlobalNamespace::GlobalNamespace__BeatLine__HighlightData item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(GlobalNamespace::GlobalNamespace__BeatLine__HighlightData item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, GlobalNamespace::GlobalNamespace__BeatLine__HighlightData item, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(GlobalNamespace::GlobalNamespace__BeatLine__HighlightData item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(GlobalNamespace::GlobalNamespace__BeatLine__HighlightData item, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(GlobalNamespace::GlobalNamespace__BeatLine__HighlightData item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 GlobalNamespace::GlobalNamespace__BeatLine__HighlightData Find(System::Predicate_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> FindAll(System::Predicate_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 GlobalNamespace::GlobalNamespace__BeatLine__HighlightData FindLast(System::Predicate_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(GlobalNamespace::GlobalNamespace__BeatLine__HighlightData item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, GlobalNamespace::GlobalNamespace__BeatLine__HighlightData item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(GlobalNamespace::GlobalNamespace__BeatLine__HighlightData item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4205 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> value) ;

constexpr ::ArrayW<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> value) ;

static ::ArrayW<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock item, System::Collections::Generic::IComparer_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock item, System::Collections::Generic::IComparer_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock Find(System::Predicate_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> FindAll(System::Predicate_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock FindLast(System::Predicate_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4206 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> value) ;

constexpr ::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> value) ;

static ::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page Find(System::Predicate_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> FindAll(System::Predicate_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page FindLast(System::Predicate_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4210 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::UnityEngine__Camera__RenderRequest> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UnityEngine__Camera__RenderRequest>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UnityEngine__Camera__RenderRequest>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UnityEngine__Camera__RenderRequest>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UnityEngine__Camera__RenderRequest>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UnityEngine__Camera__RenderRequest>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UnityEngine__Camera__RenderRequest>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UnityEngine__Camera__RenderRequest>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UnityEngine__Camera__RenderRequest>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UnityEngine__Camera__RenderRequest>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UnityEngine__Camera__RenderRequest>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UnityEngine__Camera__RenderRequest>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::UnityEngine__Camera__RenderRequest> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::UnityEngine__Camera__RenderRequest> value) ;

constexpr ::ArrayW<UnityEngine::UnityEngine__Camera__RenderRequest> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::UnityEngine__Camera__RenderRequest> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::UnityEngine__Camera__RenderRequest> value) ;

static ::ArrayW<UnityEngine::UnityEngine__Camera__RenderRequest> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::UnityEngine__Camera__RenderRequest __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::UnityEngine__Camera__RenderRequest>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::UnityEngine__Camera__RenderRequest> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::UnityEngine__Camera__RenderRequest> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UnityEngine__Camera__RenderRequest get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::UnityEngine__Camera__RenderRequest value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::UnityEngine__Camera__RenderRequest item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::UnityEngine__Camera__RenderRequest item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::UnityEngine__Camera__RenderRequest> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::UnityEngine__Camera__RenderRequest> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::UnityEngine__Camera__RenderRequest item, System::Collections::Generic::IComparer_1<UnityEngine::UnityEngine__Camera__RenderRequest> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UnityEngine__Camera__RenderRequest item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UnityEngine__Camera__RenderRequest item, System::Collections::Generic::IComparer_1<UnityEngine::UnityEngine__Camera__RenderRequest> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UnityEngine__Camera__RenderRequest item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::UnityEngine__Camera__RenderRequest,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::UnityEngine__Camera__RenderRequest> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UnityEngine__Camera__RenderRequest> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::UnityEngine__Camera__RenderRequest> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UnityEngine__Camera__RenderRequest Find(System::Predicate_1<UnityEngine::UnityEngine__Camera__RenderRequest> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UnityEngine__Camera__RenderRequest> FindAll(System::Predicate_1<UnityEngine::UnityEngine__Camera__RenderRequest> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::UnityEngine__Camera__RenderRequest> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::UnityEngine__Camera__RenderRequest> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UnityEngine__Camera__RenderRequest FindLast(System::Predicate_1<UnityEngine::UnityEngine__Camera__RenderRequest> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::UnityEngine__Camera__RenderRequest> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UnityEngine__Camera__RenderRequest> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UnityEngine__Camera__RenderRequest> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UnityEngine__Camera__RenderRequest> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UnityEngine__Camera__RenderRequest item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::UnityEngine__Camera__RenderRequest item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::UnityEngine__Camera__RenderRequest> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::UnityEngine__Camera__RenderRequest item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::UnityEngine__Camera__RenderRequest> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::UnityEngine__Camera__RenderRequest> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::UnityEngine__Camera__RenderRequest> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::UnityEngine__Camera__RenderRequest> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::UnityEngine__Camera__RenderRequest> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::UnityEngine__Camera__RenderRequest> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4214 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<Zenject::Zenject__DisposableManager__DisposableInfo> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<Zenject::Zenject__DisposableManager__DisposableInfo>;

/// @brief Convert operator to System::Collections::Generic::IList_1<Zenject::Zenject__DisposableManager__DisposableInfo>
constexpr operator  System::Collections::Generic::IList_1<Zenject::Zenject__DisposableManager__DisposableInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<Zenject::Zenject__DisposableManager__DisposableInfo>
constexpr operator  System::Collections::Generic::ICollection_1<Zenject::Zenject__DisposableManager__DisposableInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<Zenject::Zenject__DisposableManager__DisposableInfo>
constexpr operator  System::Collections::Generic::IEnumerable_1<Zenject::Zenject__DisposableManager__DisposableInfo>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<Zenject::Zenject__DisposableManager__DisposableInfo>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<Zenject::Zenject__DisposableManager__DisposableInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<Zenject::Zenject__DisposableManager__DisposableInfo>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<Zenject::Zenject__DisposableManager__DisposableInfo>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<Zenject::Zenject__DisposableManager__DisposableInfo> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<Zenject::Zenject__DisposableManager__DisposableInfo> value) ;

constexpr ::ArrayW<Zenject::Zenject__DisposableManager__DisposableInfo> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<Zenject::Zenject__DisposableManager__DisposableInfo> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<Zenject::Zenject__DisposableManager__DisposableInfo> value) ;

static ::ArrayW<Zenject::Zenject__DisposableManager__DisposableInfo> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 Zenject::Zenject__DisposableManager__DisposableInfo __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<Zenject::Zenject__DisposableManager__DisposableInfo>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<Zenject::Zenject__DisposableManager__DisposableInfo> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<Zenject::Zenject__DisposableManager__DisposableInfo> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 Zenject::Zenject__DisposableManager__DisposableInfo get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, Zenject::Zenject__DisposableManager__DisposableInfo value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(Zenject::Zenject__DisposableManager__DisposableInfo item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(Zenject::Zenject__DisposableManager__DisposableInfo item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<Zenject::Zenject__DisposableManager__DisposableInfo> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<Zenject::Zenject__DisposableManager__DisposableInfo> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, Zenject::Zenject__DisposableManager__DisposableInfo item, System::Collections::Generic::IComparer_1<Zenject::Zenject__DisposableManager__DisposableInfo> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(Zenject::Zenject__DisposableManager__DisposableInfo item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(Zenject::Zenject__DisposableManager__DisposableInfo item, System::Collections::Generic::IComparer_1<Zenject::Zenject__DisposableManager__DisposableInfo> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(Zenject::Zenject__DisposableManager__DisposableInfo item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<Zenject::Zenject__DisposableManager__DisposableInfo,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<Zenject::Zenject__DisposableManager__DisposableInfo> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<Zenject::Zenject__DisposableManager__DisposableInfo> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<Zenject::Zenject__DisposableManager__DisposableInfo> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 Zenject::Zenject__DisposableManager__DisposableInfo Find(System::Predicate_1<Zenject::Zenject__DisposableManager__DisposableInfo> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<Zenject::Zenject__DisposableManager__DisposableInfo> FindAll(System::Predicate_1<Zenject::Zenject__DisposableManager__DisposableInfo> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<Zenject::Zenject__DisposableManager__DisposableInfo> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<Zenject::Zenject__DisposableManager__DisposableInfo> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 Zenject::Zenject__DisposableManager__DisposableInfo FindLast(System::Predicate_1<Zenject::Zenject__DisposableManager__DisposableInfo> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<Zenject::Zenject__DisposableManager__DisposableInfo> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<Zenject::Zenject__DisposableManager__DisposableInfo> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<Zenject::Zenject__DisposableManager__DisposableInfo> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<Zenject::Zenject__DisposableManager__DisposableInfo> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(Zenject::Zenject__DisposableManager__DisposableInfo item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, Zenject::Zenject__DisposableManager__DisposableInfo item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<Zenject::Zenject__DisposableManager__DisposableInfo> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(Zenject::Zenject__DisposableManager__DisposableInfo item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<Zenject::Zenject__DisposableManager__DisposableInfo> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<Zenject::Zenject__DisposableManager__DisposableInfo> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<Zenject::Zenject__DisposableManager__DisposableInfo> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<Zenject::Zenject__DisposableManager__DisposableInfo> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<Zenject::Zenject__DisposableManager__DisposableInfo> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<Zenject::Zenject__DisposableManager__DisposableInfo> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4216 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair>;

/// @brief Convert operator to System::Collections::Generic::IList_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair>
constexpr operator  System::Collections::Generic::IList_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair>
constexpr operator  System::Collections::Generic::ICollection_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair>
constexpr operator  System::Collections::Generic::IEnumerable_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> value) ;

constexpr ::ArrayW<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> value) ;

static ::ArrayW<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair item, System::Collections::Generic::IComparer_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair item, System::Collections::Generic::IComparer_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair Find(System::Predicate_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> FindAll(System::Predicate_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair FindLast(System::Predicate_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4223 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> value) ;

constexpr ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> value) ;

static ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement Find(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> FindAll(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement FindLast(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4227 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition>;

/// @brief Convert operator to System::Collections::Generic::IList_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition>
constexpr operator  System::Collections::Generic::IList_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition>
constexpr operator  System::Collections::Generic::ICollection_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition>
constexpr operator  System::Collections::Generic::IEnumerable_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> value) ;

constexpr ::ArrayW<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> value) ;

static ::ArrayW<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition item, System::Collections::Generic::IComparer_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition item, System::Collections::Generic::IComparer_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition Find(System::Predicate_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> FindAll(System::Predicate_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition FindLast(System::Predicate_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4235 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> value) ;

constexpr ::ArrayW<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> value) ;

static ::ArrayW<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor item, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor item, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor Find(System::Predicate_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> FindAll(System::Predicate_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor FindLast(System::Predicate_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4236 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> value) ;

constexpr ::ArrayW<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> value) ;

static ::ArrayW<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor item, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor item, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor Find(System::Predicate_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> FindAll(System::Predicate_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor FindLast(System::Predicate_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4237 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> value) ;

constexpr ::ArrayW<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> value) ;

static ::ArrayW<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData item, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData item, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData Find(System::Predicate_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> FindAll(System::Predicate_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData FindLast(System::Predicate_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4240 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> value) ;

constexpr ::ArrayW<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> value) ;

static ::ArrayW<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson item, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson item, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson Find(System::Predicate_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> FindAll(System::Predicate_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson FindLast(System::Predicate_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4241 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> value) ;

constexpr ::ArrayW<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> value) ;

static ::ArrayW<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem item, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem item, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem Find(System::Predicate_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> FindAll(System::Predicate_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem FindLast(System::Predicate_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4242 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> value) ;

constexpr ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> value) ;

static ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper Find(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> FindAll(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper FindLast(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4251 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue>;

/// @brief Convert operator to System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue>
constexpr operator  System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue>
constexpr operator  System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue>
constexpr operator  System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> value) ;

constexpr ::ArrayW<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> value) ;

static ::ArrayW<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue item, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue item, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue Find(System::Predicate_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> FindAll(System::Predicate_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue FindLast(System::Predicate_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4256 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition>;

/// @brief Convert operator to System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition>
constexpr operator  System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition>
constexpr operator  System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition>
constexpr operator  System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> value) ;

constexpr ::ArrayW<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> value) ;

static ::ArrayW<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition item, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition item, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition Find(System::Predicate_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> FindAll(System::Predicate_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition FindLast(System::Predicate_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4257 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry>;

/// @brief Convert operator to System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry>
constexpr operator  System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry>
constexpr operator  System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry>
constexpr operator  System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> value) ;

constexpr ::ArrayW<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> value) ;

static ::ArrayW<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry item, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry item, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry Find(System::Predicate_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> FindAll(System::Predicate_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry FindLast(System::Predicate_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4260 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor>;

/// @brief Convert operator to System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor>
constexpr operator  System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor>
constexpr operator  System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor>
constexpr operator  System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> value) ;

constexpr ::ArrayW<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> value) ;

static ::ArrayW<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor item, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor item, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor Find(System::Predicate_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> FindAll(System::Predicate_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor FindLast(System::Predicate_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4267 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit>;

/// @brief Convert operator to System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit>
constexpr operator  System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit>
constexpr operator  System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit>
constexpr operator  System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> value) ;

constexpr ::ArrayW<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> value) ;

static ::ArrayW<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit item, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit item, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit Find(System::Predicate_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> FindAll(System::Predicate_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit FindLast(System::Predicate_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4268 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog>;

/// @brief Convert operator to System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog>
constexpr operator  System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog>
constexpr operator  System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog>
constexpr operator  System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> value) ;

constexpr ::ArrayW<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> value) ;

static ::ArrayW<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog item, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog item, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog Find(System::Predicate_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> FindAll(System::Predicate_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog FindLast(System::Predicate_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4269 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast>;

/// @brief Convert operator to System::Collections::Generic::IList_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast>
constexpr operator  System::Collections::Generic::IList_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast>
constexpr operator  System::Collections::Generic::ICollection_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast>
constexpr operator  System::Collections::Generic::IEnumerable_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> value) ;

constexpr ::ArrayW<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> value) ;

static ::ArrayW<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast item, System::Collections::Generic::IComparer_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast item, System::Collections::Generic::IComparer_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast Find(System::Predicate_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> FindAll(System::Predicate_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast FindLast(System::Predicate_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4287 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> value) ;

constexpr ::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> value) ;

static ::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData Find(System::Predicate_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> FindAll(System::Predicate_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData FindLast(System::Predicate_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4288 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> value) ;

constexpr ::ArrayW<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> value) ;

static ::ArrayW<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest item, System::Collections::Generic::IComparer_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest item, System::Collections::Generic::IComparer_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest Find(System::Predicate_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> FindAll(System::Predicate_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest FindLast(System::Predicate_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4293 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction>;

/// @brief Convert operator to System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction>
constexpr operator  System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction>
constexpr operator  System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction>
constexpr operator  System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> value) ;

constexpr ::ArrayW<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> value) ;

static ::ArrayW<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction item, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction item, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction Find(System::Predicate_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> FindAll(System::Predicate_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction FindLast(System::Predicate_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4300 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> value) ;

constexpr ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> value) ;

static ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride Find(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> FindAll(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride FindLast(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4301 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> value) ;

constexpr ::ArrayW<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> value) ;

static ::ArrayW<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap item, System::Collections::Generic::IComparer_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap item, System::Collections::Generic::IComparer_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap Find(System::Predicate_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> FindAll(System::Predicate_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap FindLast(System::Predicate_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4302 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame>;

/// @brief Convert operator to System::Collections::Generic::IList_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame>
constexpr operator  System::Collections::Generic::IList_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame>
constexpr operator  System::Collections::Generic::ICollection_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame>
constexpr operator  System::Collections::Generic::IEnumerable_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> value) ;

constexpr ::ArrayW<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> value) ;

static ::ArrayW<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame item, System::Collections::Generic::IComparer_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame item, System::Collections::Generic::IComparer_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame Find(System::Predicate_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> FindAll(System::Predicate_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame FindLast(System::Predicate_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4303 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> value) ;

constexpr ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> value) ;

static ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo Find(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> FindAll(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo FindLast(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4306 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> value) ;

constexpr ::ArrayW<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> value) ;

static ::ArrayW<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData item, System::Collections::Generic::IComparer_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData item, System::Collections::Generic::IComparer_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData Find(System::Predicate_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> FindAll(System::Predicate_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData FindLast(System::Predicate_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4307 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> value) ;

constexpr ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> value) ;

static ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper Find(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> FindAll(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper FindLast(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4308 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> value) ;

constexpr ::ArrayW<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> value) ;

static ::ArrayW<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry Find(System::Predicate_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> FindAll(System::Predicate_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry FindLast(System::Predicate_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4309 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> value) ;

constexpr ::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> value) ;

static ::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree Find(System::Predicate_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> FindAll(System::Predicate_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree FindLast(System::Predicate_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4310 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> value) ;

constexpr ::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> value) ;

static ::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate Find(System::Predicate_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> FindAll(System::Predicate_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate FindLast(System::Predicate_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4311 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> value) ;

constexpr ::ArrayW<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> value) ;

static ::ArrayW<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest item, System::Collections::Generic::IComparer_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest item, System::Collections::Generic::IComparer_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest Find(System::Predicate_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> FindAll(System::Predicate_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest FindLast(System::Predicate_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4313 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> value) ;

constexpr ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> value) ;

static ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition Find(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> FindAll(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition FindLast(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4314 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> value) ;

constexpr ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> value) ;

static ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry item, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry Find(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> FindAll(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry FindLast(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4315 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>;

/// @brief Convert operator to System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>
constexpr operator  System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>
constexpr operator  System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>
constexpr operator  System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> value) ;

constexpr ::ArrayW<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> value) ;

static ::ArrayW<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData item, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData item, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData Find(System::Predicate_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> FindAll(System::Predicate_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData FindLast(System::Predicate_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4317 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher>;

/// @brief Convert operator to System::Collections::Generic::IList_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher>
constexpr operator  System::Collections::Generic::IList_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher>
constexpr operator  System::Collections::Generic::ICollection_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher>
constexpr operator  System::Collections::Generic::IEnumerable_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> value) ;

constexpr ::ArrayW<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> value) ;

static ::ArrayW<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher item, System::Collections::Generic::IComparer_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher item, System::Collections::Generic::IComparer_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher Find(System::Predicate_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> FindAll(System::Predicate_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher FindLast(System::Predicate_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 4831 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<System::Int32Enum> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::Int32Enum>;

/// @brief Convert operator to System::Collections::Generic::IList_1<System::Int32Enum>
constexpr operator  System::Collections::Generic::IList_1<System::Int32Enum>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::Int32Enum>
constexpr operator  System::Collections::Generic::ICollection_1<System::Int32Enum>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::Int32Enum>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::Int32Enum>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::Int32Enum>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::Int32Enum>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::Int32Enum>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::Int32Enum>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<System::Int32Enum> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<System::Int32Enum> value) ;

constexpr ::ArrayW<System::Int32Enum> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<System::Int32Enum> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<System::Int32Enum> value) ;

static ::ArrayW<System::Int32Enum> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 System::Int32Enum __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<System::Int32Enum>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<System::Int32Enum> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<System::Int32Enum> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Int32Enum get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, System::Int32Enum value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(System::Int32Enum item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(System::Int32Enum item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<System::Int32Enum> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<System::Int32Enum> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, System::Int32Enum item, System::Collections::Generic::IComparer_1<System::Int32Enum> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::Int32Enum item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::Int32Enum item, System::Collections::Generic::IComparer_1<System::Int32Enum> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::Int32Enum item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<System::Int32Enum,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<System::Int32Enum> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::Int32Enum> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<System::Int32Enum> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Int32Enum Find(System::Predicate_1<System::Int32Enum> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::Int32Enum> FindAll(System::Predicate_1<System::Int32Enum> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<System::Int32Enum> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<System::Int32Enum> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Int32Enum FindLast(System::Predicate_1<System::Int32Enum> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<System::Int32Enum> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::Int32Enum> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::Int32Enum> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::Int32Enum> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::Int32Enum item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, System::Int32Enum item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<System::Int32Enum> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(System::Int32Enum item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<System::Int32Enum> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<System::Int32Enum> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<System::Int32Enum> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<System::Int32Enum> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<System::Int32Enum> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<System::Int32Enum> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 5803 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<HoudiniEngineUnity::HAPI_GeoInfo> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<HoudiniEngineUnity::HAPI_GeoInfo>;

/// @brief Convert operator to System::Collections::Generic::IList_1<HoudiniEngineUnity::HAPI_GeoInfo>
constexpr operator  System::Collections::Generic::IList_1<HoudiniEngineUnity::HAPI_GeoInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<HoudiniEngineUnity::HAPI_GeoInfo>
constexpr operator  System::Collections::Generic::ICollection_1<HoudiniEngineUnity::HAPI_GeoInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<HoudiniEngineUnity::HAPI_GeoInfo>
constexpr operator  System::Collections::Generic::IEnumerable_1<HoudiniEngineUnity::HAPI_GeoInfo>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<HoudiniEngineUnity::HAPI_GeoInfo>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<HoudiniEngineUnity::HAPI_GeoInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<HoudiniEngineUnity::HAPI_GeoInfo>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<HoudiniEngineUnity::HAPI_GeoInfo>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<HoudiniEngineUnity::HAPI_GeoInfo> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<HoudiniEngineUnity::HAPI_GeoInfo> value) ;

constexpr ::ArrayW<HoudiniEngineUnity::HAPI_GeoInfo> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<HoudiniEngineUnity::HAPI_GeoInfo> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<HoudiniEngineUnity::HAPI_GeoInfo> value) ;

static ::ArrayW<HoudiniEngineUnity::HAPI_GeoInfo> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 HoudiniEngineUnity::HAPI_GeoInfo __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<HoudiniEngineUnity::HAPI_GeoInfo>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<HoudiniEngineUnity::HAPI_GeoInfo> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<HoudiniEngineUnity::HAPI_GeoInfo> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 HoudiniEngineUnity::HAPI_GeoInfo get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, HoudiniEngineUnity::HAPI_GeoInfo value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(HoudiniEngineUnity::HAPI_GeoInfo item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(HoudiniEngineUnity::HAPI_GeoInfo item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<HoudiniEngineUnity::HAPI_GeoInfo> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<HoudiniEngineUnity::HAPI_GeoInfo> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, HoudiniEngineUnity::HAPI_GeoInfo item, System::Collections::Generic::IComparer_1<HoudiniEngineUnity::HAPI_GeoInfo> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(HoudiniEngineUnity::HAPI_GeoInfo item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(HoudiniEngineUnity::HAPI_GeoInfo item, System::Collections::Generic::IComparer_1<HoudiniEngineUnity::HAPI_GeoInfo> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(HoudiniEngineUnity::HAPI_GeoInfo item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<HoudiniEngineUnity::HAPI_GeoInfo,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<HoudiniEngineUnity::HAPI_GeoInfo> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<HoudiniEngineUnity::HAPI_GeoInfo> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<HoudiniEngineUnity::HAPI_GeoInfo> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 HoudiniEngineUnity::HAPI_GeoInfo Find(System::Predicate_1<HoudiniEngineUnity::HAPI_GeoInfo> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<HoudiniEngineUnity::HAPI_GeoInfo> FindAll(System::Predicate_1<HoudiniEngineUnity::HAPI_GeoInfo> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<HoudiniEngineUnity::HAPI_GeoInfo> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<HoudiniEngineUnity::HAPI_GeoInfo> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 HoudiniEngineUnity::HAPI_GeoInfo FindLast(System::Predicate_1<HoudiniEngineUnity::HAPI_GeoInfo> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<HoudiniEngineUnity::HAPI_GeoInfo> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<HoudiniEngineUnity::HAPI_GeoInfo> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<HoudiniEngineUnity::HAPI_GeoInfo> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<HoudiniEngineUnity::HAPI_GeoInfo> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(HoudiniEngineUnity::HAPI_GeoInfo item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, HoudiniEngineUnity::HAPI_GeoInfo item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<HoudiniEngineUnity::HAPI_GeoInfo> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(HoudiniEngineUnity::HAPI_GeoInfo item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<HoudiniEngineUnity::HAPI_GeoInfo> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<HoudiniEngineUnity::HAPI_GeoInfo> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<HoudiniEngineUnity::HAPI_GeoInfo> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<HoudiniEngineUnity::HAPI_GeoInfo> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<HoudiniEngineUnity::HAPI_GeoInfo> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<HoudiniEngineUnity::HAPI_GeoInfo> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 5822 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> value) ;

constexpr ::ArrayW<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> value) ;

static ::ArrayW<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding item, System::Collections::Generic::IComparer_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding item, System::Collections::Generic::IComparer_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding Find(System::Predicate_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> FindAll(System::Predicate_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding FindLast(System::Predicate_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 5824 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData>;

/// @brief Convert operator to System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData>
constexpr operator  System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData>
constexpr operator  System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData>
constexpr operator  System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> value) ;

constexpr ::ArrayW<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> value) ;

static ::ArrayW<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData item, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData item, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData Find(System::Predicate_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> FindAll(System::Predicate_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData FindLast(System::Predicate_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 5971 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>>;

/// @brief Convert operator to System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::ICollection_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> value) ;

constexpr ::ArrayW<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> value) ;

static ::ArrayW<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType> __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType> get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType> item, System::Collections::Generic::IComparer_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType> item, System::Collections::Generic::IComparer_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType> Find(System::Predicate_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> FindAll(System::Predicate_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType> FindLast(System::Predicate_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 5972 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>;

/// @brief Convert operator to System::Collections::Generic::IList_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IList_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::ICollection_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IEnumerable_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> value) ;

constexpr ::ArrayW<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> value) ;

static ::ArrayW<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item, System::Collections::Generic::IComparer_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item, System::Collections::Generic::IComparer_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> Find(System::Predicate_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> FindAll(System::Predicate_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> FindLast(System::Predicate_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 5973 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<Zenject::Zenject__PoolableManager__PoolableInfo> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<Zenject::Zenject__PoolableManager__PoolableInfo>;

/// @brief Convert operator to System::Collections::Generic::IList_1<Zenject::Zenject__PoolableManager__PoolableInfo>
constexpr operator  System::Collections::Generic::IList_1<Zenject::Zenject__PoolableManager__PoolableInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<Zenject::Zenject__PoolableManager__PoolableInfo>
constexpr operator  System::Collections::Generic::ICollection_1<Zenject::Zenject__PoolableManager__PoolableInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<Zenject::Zenject__PoolableManager__PoolableInfo>
constexpr operator  System::Collections::Generic::IEnumerable_1<Zenject::Zenject__PoolableManager__PoolableInfo>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<Zenject::Zenject__PoolableManager__PoolableInfo>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<Zenject::Zenject__PoolableManager__PoolableInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<Zenject::Zenject__PoolableManager__PoolableInfo>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<Zenject::Zenject__PoolableManager__PoolableInfo>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<Zenject::Zenject__PoolableManager__PoolableInfo> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<Zenject::Zenject__PoolableManager__PoolableInfo> value) ;

constexpr ::ArrayW<Zenject::Zenject__PoolableManager__PoolableInfo> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<Zenject::Zenject__PoolableManager__PoolableInfo> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<Zenject::Zenject__PoolableManager__PoolableInfo> value) ;

static ::ArrayW<Zenject::Zenject__PoolableManager__PoolableInfo> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 Zenject::Zenject__PoolableManager__PoolableInfo __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<Zenject::Zenject__PoolableManager__PoolableInfo>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<Zenject::Zenject__PoolableManager__PoolableInfo> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<Zenject::Zenject__PoolableManager__PoolableInfo> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 Zenject::Zenject__PoolableManager__PoolableInfo get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, Zenject::Zenject__PoolableManager__PoolableInfo value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(Zenject::Zenject__PoolableManager__PoolableInfo item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(Zenject::Zenject__PoolableManager__PoolableInfo item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<Zenject::Zenject__PoolableManager__PoolableInfo> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<Zenject::Zenject__PoolableManager__PoolableInfo> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, Zenject::Zenject__PoolableManager__PoolableInfo item, System::Collections::Generic::IComparer_1<Zenject::Zenject__PoolableManager__PoolableInfo> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(Zenject::Zenject__PoolableManager__PoolableInfo item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(Zenject::Zenject__PoolableManager__PoolableInfo item, System::Collections::Generic::IComparer_1<Zenject::Zenject__PoolableManager__PoolableInfo> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(Zenject::Zenject__PoolableManager__PoolableInfo item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<Zenject::Zenject__PoolableManager__PoolableInfo,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<Zenject::Zenject__PoolableManager__PoolableInfo> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<Zenject::Zenject__PoolableManager__PoolableInfo> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<Zenject::Zenject__PoolableManager__PoolableInfo> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 Zenject::Zenject__PoolableManager__PoolableInfo Find(System::Predicate_1<Zenject::Zenject__PoolableManager__PoolableInfo> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<Zenject::Zenject__PoolableManager__PoolableInfo> FindAll(System::Predicate_1<Zenject::Zenject__PoolableManager__PoolableInfo> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<Zenject::Zenject__PoolableManager__PoolableInfo> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<Zenject::Zenject__PoolableManager__PoolableInfo> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 Zenject::Zenject__PoolableManager__PoolableInfo FindLast(System::Predicate_1<Zenject::Zenject__PoolableManager__PoolableInfo> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<Zenject::Zenject__PoolableManager__PoolableInfo> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<Zenject::Zenject__PoolableManager__PoolableInfo> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<Zenject::Zenject__PoolableManager__PoolableInfo> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<Zenject::Zenject__PoolableManager__PoolableInfo> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(Zenject::Zenject__PoolableManager__PoolableInfo item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, Zenject::Zenject__PoolableManager__PoolableInfo item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<Zenject::Zenject__PoolableManager__PoolableInfo> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(Zenject::Zenject__PoolableManager__PoolableInfo item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<Zenject::Zenject__PoolableManager__PoolableInfo> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<Zenject::Zenject__PoolableManager__PoolableInfo> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<Zenject::Zenject__PoolableManager__PoolableInfo> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<Zenject::Zenject__PoolableManager__PoolableInfo> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<Zenject::Zenject__PoolableManager__PoolableInfo> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<Zenject::Zenject__PoolableManager__PoolableInfo> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 6255 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<System::Collections::DictionaryEntry> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::Collections::DictionaryEntry>;

/// @brief Convert operator to System::Collections::Generic::IList_1<System::Collections::DictionaryEntry>
constexpr operator  System::Collections::Generic::IList_1<System::Collections::DictionaryEntry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::Collections::DictionaryEntry>
constexpr operator  System::Collections::Generic::ICollection_1<System::Collections::DictionaryEntry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::Collections::DictionaryEntry>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::Collections::DictionaryEntry>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::Collections::DictionaryEntry>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::Collections::DictionaryEntry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::Collections::DictionaryEntry>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::Collections::DictionaryEntry>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<System::Collections::DictionaryEntry> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<System::Collections::DictionaryEntry> value) ;

constexpr ::ArrayW<System::Collections::DictionaryEntry> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<System::Collections::DictionaryEntry> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<System::Collections::DictionaryEntry> value) ;

static ::ArrayW<System::Collections::DictionaryEntry> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 System::Collections::DictionaryEntry __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<System::Collections::DictionaryEntry>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<System::Collections::DictionaryEntry> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<System::Collections::DictionaryEntry> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::DictionaryEntry get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, System::Collections::DictionaryEntry value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(System::Collections::DictionaryEntry item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(System::Collections::DictionaryEntry item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<System::Collections::DictionaryEntry> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<System::Collections::DictionaryEntry> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, System::Collections::DictionaryEntry item, System::Collections::Generic::IComparer_1<System::Collections::DictionaryEntry> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::Collections::DictionaryEntry item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::Collections::DictionaryEntry item, System::Collections::Generic::IComparer_1<System::Collections::DictionaryEntry> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::Collections::DictionaryEntry item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<System::Collections::DictionaryEntry,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<System::Collections::DictionaryEntry> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::Collections::DictionaryEntry> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<System::Collections::DictionaryEntry> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::DictionaryEntry Find(System::Predicate_1<System::Collections::DictionaryEntry> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::Collections::DictionaryEntry> FindAll(System::Predicate_1<System::Collections::DictionaryEntry> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<System::Collections::DictionaryEntry> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<System::Collections::DictionaryEntry> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::DictionaryEntry FindLast(System::Predicate_1<System::Collections::DictionaryEntry> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<System::Collections::DictionaryEntry> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::Collections::DictionaryEntry> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::Collections::DictionaryEntry> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::Collections::DictionaryEntry> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::Collections::DictionaryEntry item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, System::Collections::DictionaryEntry item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<System::Collections::DictionaryEntry> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(System::Collections::DictionaryEntry item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<System::Collections::DictionaryEntry> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<System::Collections::DictionaryEntry> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<System::Collections::DictionaryEntry> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<System::Collections::DictionaryEntry> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<System::Collections::DictionaryEntry> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<System::Collections::DictionaryEntry> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 6256 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>>;

/// @brief Convert operator to System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::ICollection_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> value) ;

constexpr ::ArrayW<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> value) ;

static ::ArrayW<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType> __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType> get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType> item, System::Collections::Generic::IComparer_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType> item, System::Collections::Generic::IComparer_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType> Find(System::Predicate_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> FindAll(System::Predicate_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType> FindLast(System::Predicate_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 6262 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> value) ;

constexpr ::ArrayW<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> value) ;

static ::ArrayW<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType> __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType> get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType> item, System::Collections::Generic::IComparer_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType> item, System::Collections::Generic::IComparer_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType> Find(System::Predicate_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> FindAll(System::Predicate_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType> FindLast(System::Predicate_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 6263 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>>;

/// @brief Convert operator to System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>>
constexpr operator  System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>>
constexpr operator  System::Collections::Generic::ICollection_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> value) ;

constexpr ::ArrayW<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> value) ;

static ::ArrayW<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> item, System::Collections::Generic::IComparer_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> item, System::Collections::Generic::IComparer_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> Find(System::Predicate_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> FindAll(System::Predicate_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> FindLast(System::Predicate_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 6264 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<Unity::Collections::NativeArray_1<uint16_t>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<Unity::Collections::NativeArray_1<uint16_t>>;

/// @brief Convert operator to System::Collections::Generic::IList_1<Unity::Collections::NativeArray_1<uint16_t>>
constexpr operator  System::Collections::Generic::IList_1<Unity::Collections::NativeArray_1<uint16_t>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<Unity::Collections::NativeArray_1<uint16_t>>
constexpr operator  System::Collections::Generic::ICollection_1<Unity::Collections::NativeArray_1<uint16_t>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<Unity::Collections::NativeArray_1<uint16_t>>
constexpr operator  System::Collections::Generic::IEnumerable_1<Unity::Collections::NativeArray_1<uint16_t>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<Unity::Collections::NativeArray_1<uint16_t>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<Unity::Collections::NativeArray_1<uint16_t>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<Unity::Collections::NativeArray_1<uint16_t>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<Unity::Collections::NativeArray_1<uint16_t>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<Unity::Collections::NativeArray_1<uint16_t>> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<Unity::Collections::NativeArray_1<uint16_t>> value) ;

constexpr ::ArrayW<Unity::Collections::NativeArray_1<uint16_t>> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<Unity::Collections::NativeArray_1<uint16_t>> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<Unity::Collections::NativeArray_1<uint16_t>> value) ;

static ::ArrayW<Unity::Collections::NativeArray_1<uint16_t>> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 Unity::Collections::NativeArray_1<uint16_t> __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<Unity::Collections::NativeArray_1<uint16_t>>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<Unity::Collections::NativeArray_1<uint16_t>> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<Unity::Collections::NativeArray_1<uint16_t>> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 Unity::Collections::NativeArray_1<uint16_t> get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, Unity::Collections::NativeArray_1<uint16_t> value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(Unity::Collections::NativeArray_1<uint16_t> item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(Unity::Collections::NativeArray_1<uint16_t> item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<Unity::Collections::NativeArray_1<uint16_t>> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<Unity::Collections::NativeArray_1<uint16_t>> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, Unity::Collections::NativeArray_1<uint16_t> item, System::Collections::Generic::IComparer_1<Unity::Collections::NativeArray_1<uint16_t>> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(Unity::Collections::NativeArray_1<uint16_t> item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(Unity::Collections::NativeArray_1<uint16_t> item, System::Collections::Generic::IComparer_1<Unity::Collections::NativeArray_1<uint16_t>> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(Unity::Collections::NativeArray_1<uint16_t> item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<Unity::Collections::NativeArray_1<uint16_t>,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<Unity::Collections::NativeArray_1<uint16_t>> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<Unity::Collections::NativeArray_1<uint16_t>> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<Unity::Collections::NativeArray_1<uint16_t>> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 Unity::Collections::NativeArray_1<uint16_t> Find(System::Predicate_1<Unity::Collections::NativeArray_1<uint16_t>> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<Unity::Collections::NativeArray_1<uint16_t>> FindAll(System::Predicate_1<Unity::Collections::NativeArray_1<uint16_t>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<Unity::Collections::NativeArray_1<uint16_t>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<Unity::Collections::NativeArray_1<uint16_t>> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 Unity::Collections::NativeArray_1<uint16_t> FindLast(System::Predicate_1<Unity::Collections::NativeArray_1<uint16_t>> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<Unity::Collections::NativeArray_1<uint16_t>> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<Unity::Collections::NativeArray_1<uint16_t>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<Unity::Collections::NativeArray_1<uint16_t>> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<Unity::Collections::NativeArray_1<uint16_t>> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(Unity::Collections::NativeArray_1<uint16_t> item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, Unity::Collections::NativeArray_1<uint16_t> item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<Unity::Collections::NativeArray_1<uint16_t>> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(Unity::Collections::NativeArray_1<uint16_t> item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<Unity::Collections::NativeArray_1<uint16_t>> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<Unity::Collections::NativeArray_1<uint16_t>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<Unity::Collections::NativeArray_1<uint16_t>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<Unity::Collections::NativeArray_1<uint16_t>> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<Unity::Collections::NativeArray_1<uint16_t>> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<Unity::Collections::NativeArray_1<uint16_t>> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 6265 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>>;

/// @brief Convert operator to System::Collections::Generic::IList_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>>
constexpr operator  System::Collections::Generic::IList_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>>
constexpr operator  System::Collections::Generic::ICollection_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>>
constexpr operator  System::Collections::Generic::IEnumerable_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> value) ;

constexpr ::ArrayW<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> value) ;

static ::ArrayW<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex> __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex> get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex> value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex> item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex> item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex> item, System::Collections::Generic::IComparer_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex> item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex> item, System::Collections::Generic::IComparer_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex> item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex> Find(System::Predicate_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> FindAll(System::Predicate_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex> FindLast(System::Predicate_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex> item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex> item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex> item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 6266 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>;

/// @brief Convert operator to System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> value) ;

constexpr ::ArrayW<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> value) ;

static ::ArrayW<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> Find(System::Predicate_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> FindAll(System::Predicate_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> FindLast(System::Predicate_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 6267 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> value) ;

constexpr ::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> value) ;

static ::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge> __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge> get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge> value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge> item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge> item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge> item, System::Collections::Generic::IComparer_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge> item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge> item, System::Collections::Generic::IComparer_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge> item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge> Find(System::Predicate_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> FindAll(System::Predicate_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge> FindLast(System::Predicate_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge> item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge> item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge> item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 6268 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> value) ;

constexpr ::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> value) ;

static ::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t> __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t> get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t> value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t> item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t> item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t> item, System::Collections::Generic::IComparer_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t> item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t> item, System::Collections::Generic::IComparer_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t> item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t> Find(System::Predicate_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> FindAll(System::Predicate_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t> FindLast(System::Predicate_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t> item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t> item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t> item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 6269 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>;

/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> value) ;

constexpr ::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> value) ;

static ::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item, System::Collections::Generic::IComparer_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item, System::Collections::Generic::IComparer_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> Find(System::Predicate_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> FindAll(System::Predicate_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> FindLast(System::Predicate_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 6270 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>;

/// @brief Convert operator to System::Collections::Generic::IList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>
constexpr operator  System::Collections::Generic::IList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>
constexpr operator  System::Collections::Generic::ICollection_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> value) ;

constexpr ::ArrayW<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> value) ;

static ::ArrayW<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t> __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t> get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t> value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t> item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t> item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t> item, System::Collections::Generic::IComparer_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t> item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t> item, System::Collections::Generic::IComparer_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t> item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t> Find(System::Predicate_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> FindAll(System::Predicate_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t> FindLast(System::Predicate_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t> item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t> item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t> item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 6271 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>;

/// @brief Convert operator to System::Collections::Generic::IList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::ICollection_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> value) ;

constexpr ::ArrayW<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> value) ;

static ::ArrayW<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item, System::Collections::Generic::IComparer_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item, System::Collections::Generic::IComparer_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> Find(System::Predicate_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> FindAll(System::Predicate_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> FindLast(System::Predicate_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 6272 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>>;

/// @brief Convert operator to System::Collections::Generic::IList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>>
constexpr operator  System::Collections::Generic::IList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>>
constexpr operator  System::Collections::Generic::ICollection_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> value) ;

constexpr ::ArrayW<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> value) ;

static ::ArrayW<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3> __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3> get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3> value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3> item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3> item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3> item, System::Collections::Generic::IComparer_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3> item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3> item, System::Collections::Generic::IComparer_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3> item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3> Find(System::Predicate_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> FindAll(System::Predicate_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3> FindLast(System::Predicate_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3> item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3> item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3> item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 6273 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>>;

/// @brief Convert operator to System::Collections::Generic::IList_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IList_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::ICollection_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> value) ;

constexpr ::ArrayW<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> value) ;

static ::ArrayW<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType> __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType> get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType> item, System::Collections::Generic::IComparer_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType> item, System::Collections::Generic::IComparer_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType> Find(System::Predicate_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> FindAll(System::Predicate_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType> FindLast(System::Predicate_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType> item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 6274 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<System::UInt16Enum> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::UInt16Enum>;

/// @brief Convert operator to System::Collections::Generic::IList_1<System::UInt16Enum>
constexpr operator  System::Collections::Generic::IList_1<System::UInt16Enum>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::UInt16Enum>
constexpr operator  System::Collections::Generic::ICollection_1<System::UInt16Enum>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::UInt16Enum>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::UInt16Enum>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::UInt16Enum>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::UInt16Enum>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::UInt16Enum>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::UInt16Enum>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<System::UInt16Enum> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<System::UInt16Enum> value) ;

constexpr ::ArrayW<System::UInt16Enum> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<System::UInt16Enum> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<System::UInt16Enum> value) ;

static ::ArrayW<System::UInt16Enum> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 System::UInt16Enum __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<System::UInt16Enum>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<System::UInt16Enum> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<System::UInt16Enum> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::UInt16Enum get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, System::UInt16Enum value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(System::UInt16Enum item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(System::UInt16Enum item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<System::UInt16Enum> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<System::UInt16Enum> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, System::UInt16Enum item, System::Collections::Generic::IComparer_1<System::UInt16Enum> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::UInt16Enum item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(System::UInt16Enum item, System::Collections::Generic::IComparer_1<System::UInt16Enum> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::UInt16Enum item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<System::UInt16Enum,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<System::UInt16Enum> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::UInt16Enum> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<System::UInt16Enum> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 System::UInt16Enum Find(System::Predicate_1<System::UInt16Enum> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::UInt16Enum> FindAll(System::Predicate_1<System::UInt16Enum> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<System::UInt16Enum> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<System::UInt16Enum> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 System::UInt16Enum FindLast(System::Predicate_1<System::UInt16Enum> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<System::UInt16Enum> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<System::UInt16Enum> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::UInt16Enum> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<System::UInt16Enum> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::UInt16Enum item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, System::UInt16Enum item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<System::UInt16Enum> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(System::UInt16Enum item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<System::UInt16Enum> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<System::UInt16Enum> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<System::UInt16Enum> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<System::UInt16Enum> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<System::UInt16Enum> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<System::UInt16Enum> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3828))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3828), inst: 6275 })
// CS Name: System.Collections.Generic.List`1
class CORDL_TYPE List_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
using Enumerator = System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair>;

/// @brief Convert operator to System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair>
constexpr operator  System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair>
constexpr operator  System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair>
constexpr operator  System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x30};

virtual ~List_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: " const&", def_value: None }]
constexpr List_1(List_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
constexpr List_1(List_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit List_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr List_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr List_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr List_1& operator=(List_1&& o) noexcept = default;
  constexpr List_1& operator=(List_1 const& o) noexcept = default;
                


// Fields

/// @brief Field DefaultCapacity offset 0
static constexpr int32_t  DefaultCapacity{4};

 ::ArrayW<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> __declspec(property(get=__get__items, put=__set__items))  _items;

constexpr void __set__items(::ArrayW<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> value) ;

constexpr ::ArrayW<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> __get__items() const;

 int32_t __declspec(property(get=__get__size, put=__set__size))  _size;

constexpr void __set__size(int32_t value) ;

constexpr int32_t __get__size() const;

 int32_t __declspec(property(get=__get__version, put=__set__version))  _version;

constexpr void __set__version(int32_t value) ;

constexpr int32_t __get__version() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;

static ::ArrayW<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> __declspec(property(get=__get_s_emptyArray, put=__set_s_emptyArray))  s_emptyArray;

static void __set_s_emptyArray(::ArrayW<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> value) ;

static ::ArrayW<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> __get_s_emptyArray() ;


// Properties

 int32_t __declspec(property(get=get_Capacity, put=set_Capacity))  Capacity;

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair __declspec(property(get=get_Item, put=set_Item))  Item;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters []
explicit List_1() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor() ;

// Ctor Parameters [CppParam { name: "capacity", ty: "int32_t", modifiers: "", def_value: None }]
explicit List_1(int32_t capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(int32_t capacity) ;

// Ctor Parameters [CppParam { name: "collection", ty: "System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair>", modifiers: "", def_value: None }]
explicit List_1(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void set_Capacity(int32_t value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair get_Item(int32_t index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void set_Item(int32_t index, GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void Add(GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddWithResize(GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddRange(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::ObjectModel::ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(int32_t index, int32_t count, GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair item, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t BinarySearch(GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair item, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
 System::Collections::Generic::List_1<TOutput> ConvertAll(System::Converter_2<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair,TOutput> converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> array, int32_t arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
 void EnsureCapacity(int32_t min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
 bool Exists(System::Predicate_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
 GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair Find(System::Predicate_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> FindAll(System::Predicate_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(System::Predicate_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t FindIndex(int32_t startIndex, int32_t count, System::Predicate_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
 GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair FindLast(System::Predicate_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
 void ForEach(System::Action_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::System__Collections__Generic__List_1__Enumerator<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
 System::Collections::Generic::List_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> GetRange(int32_t index, int32_t count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void Insert(int32_t index, GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void InsertRange(int32_t index, System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Remove(GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
 int32_t RemoveAll(System::Predicate_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void RemoveAt(int32_t index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
 void RemoveRange(int32_t index, int32_t count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
 void Reverse(int32_t index, int32_t count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(int32_t index, int32_t count, System::Collections::Generic::IComparer_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
 void Sort(System::Comparison_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
 ::ArrayW<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
 void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
 void AddEnumerable(System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> enumerable) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(System::Collections::Generic::List_1, "System.Collections.Generic", "List`1");
DEFINE_IL2CPP_ARG_TYPE_GENERIC_STRUCT(System::Collections::Generic::System__Collections__Generic__List_1__Enumerator, "System.Collections.Generic", "List`1/Enumerator");
