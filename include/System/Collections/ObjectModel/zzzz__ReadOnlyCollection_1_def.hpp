#pragma once
#include "../../../cordl_internals/cordl_internals.hpp"
#include "beatsaber-hook/shared/utils/base-wrapper-type.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include <cmath>
#include <cstdint>
namespace System::Collections::Generic {
template<typename T>
class IList_1;
}
namespace System::Collections::Generic {
template<typename T>
class IReadOnlyList_1;
}
namespace System::Collections {
class IList;
}
namespace System::Collections::Generic {
template<typename T>
class IReadOnlyCollection_1;
}
namespace System::Collections::Generic {
template<typename T>
class IEnumerable_1;
}
namespace System::Collections::Generic {
template<typename T>
class IEnumerator_1;
}
namespace System::Collections::Generic {
template<typename T>
class ICollection_1;
}
namespace System::Collections {
class ICollection;
}
namespace System::Collections {
class IEnumerator;
}
namespace System::Collections {
class IEnumerable;
}
namespace System {
class Array;
}
namespace GlobalNamespace {
struct BezierCurve;
}
namespace GlobalNamespace {
struct FPSTimestamp;
}
namespace GlobalNamespace {
template<typename TKey,typename TValue>
struct GlobalNamespace__AsyncCachedLoader_2__ScheduledTask;
}
namespace GlobalNamespace {
struct GlobalNamespace__BeatLine__HighlightData;
}
namespace GlobalNamespace {
struct GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData;
}
namespace GlobalNamespace {
struct GlobalNamespace__MultiplierValuesRecorder__MultiplierValue;
}
namespace GlobalNamespace {
struct GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition;
}
namespace GlobalNamespace {
struct GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry;
}
namespace GlobalNamespace {
struct GlobalNamespace__OVRRaycaster__RaycastHit;
}
namespace GlobalNamespace {
struct GlobalNamespace__OVRSpatialAnchor__UnboundAnchor;
}
namespace GlobalNamespace {
struct GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit;
}
namespace GlobalNamespace {
struct GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog;
}
namespace GlobalNamespace {
struct GlobalNamespace__PlayerStatisticsViewController__StatsScopeData;
}
namespace GlobalNamespace {
struct GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair;
}
namespace GlobalNamespace {
struct GlobalNamespace__SynchronizedActionQueue__SynchronizedAction;
}
namespace GlobalNamespace {
struct OVRSpaceUser;
}
namespace GlobalNamespace {
struct UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher;
}
namespace HoudiniEngineUnity {
struct HAPI_GeoInfo;
}
namespace HoudiniEngineUnity {
struct HAPI_PartInfo;
}
namespace HoudiniEngineUnity {
struct TransformData;
}
namespace IntervalTree {
template<typename TKey,typename TValue>
struct RangeValuePair_2;
}
namespace MidiParser {
struct MidiEvent;
}
namespace Newtonsoft::Json {
struct JsonPosition;
}
namespace System {
template<typename T>
struct ArraySegment_1;
}
namespace System::Collections {
struct DictionaryEntry;
}
namespace System::Collections::Generic {
template<typename TKey,typename TValue>
struct KeyValuePair_2;
}
namespace UnityEngine::InputSystem::Utilities {
struct UnityEngine__InputSystem__Utilities__JsonParser__JsonValue;
}
namespace UnityEngine::ProBuilder {
struct Edge;
}
namespace UnityEngine {
struct PropertyName;
}
namespace System {
struct DateTime;
}
namespace System {
struct DateTimeOffset;
}
namespace System {
struct Decimal;
}
namespace System {
struct Guid;
}
namespace System {
struct Int32Enum;
}
namespace System::Reflection {
struct CustomAttributeNamedArgument;
}
namespace System::Reflection {
struct CustomAttributeTypedArgument;
}
namespace System::Security::Cryptography::X509Certificates {
struct X509ChainStatus;
}
namespace System::Text::RegularExpressions {
struct System__Text__RegularExpressions__RegexCharClass__SingleRange;
}
namespace System {
struct TimeSpan;
}
namespace System {
struct UInt16Enum;
}
namespace System {
template<typename T1,typename T2>
struct ValueTuple_2;
}
namespace UnityEngine {
struct Vector3;
}
namespace System {
template<typename T1,typename T2,typename T3>
struct ValueTuple_3;
}
namespace TMPro::SpriteAssetUtilities {
struct TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame;
}
namespace Tayx::Graphy {
struct Tayx__Graphy__GraphyDebugger__DebugCondition;
}
namespace UnityEngine::UIElements {
struct Vertex;
}
namespace Unity::Collections {
template<typename T>
struct NativeArray_1;
}
namespace UnityEngine {
struct AnimatorClipInfo;
}
namespace UnityEngine {
struct BoneWeight;
}
namespace UnityEngine {
struct Color32;
}
namespace UnityEngine {
struct Color;
}
namespace UnityEngine::EventSystems {
struct RaycastResult;
}
namespace UnityEngine::InputSystem::HID {
struct UnityEngine__InputSystem__HID__HIDParser__HIDReportData;
}
namespace UnityEngine::InputSystem::HID {
struct UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor;
}
namespace UnityEngine::InputSystem::HID {
struct UnityEngine__InputSystem__HID__HID__HIDElementDescriptor;
}
namespace UnityEngine::InputSystem {
struct InputBinding;
}
namespace UnityEngine::InputSystem::Layouts {
struct InputDeviceDescription;
}
namespace UnityEngine::InputSystem::Layouts {
struct UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem;
}
namespace UnityEngine::InputSystem::LowLevel {
struct InputEventPtr;
}
namespace UnityEngine::InputSystem::UI {
struct UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData;
}
namespace UnityEngine::InputSystem {
struct UnityEngine__InputSystem__InputActionMap__BindingOverrideJson;
}
namespace UnityEngine::InputSystem::Utilities {
struct InternedString;
}
namespace UnityEngine::InputSystem::Utilities {
struct NameAndParameters;
}
namespace UnityEngine::InputSystem::Utilities {
struct NamedValue;
}
namespace UnityEngine::InputSystem::Utilities {
struct Substring;
}
namespace UnityEngine::InputSystem::XR {
struct UsageHint;
}
namespace UnityEngine::InputSystem::XR {
struct XRFeatureDescriptor;
}
namespace UnityEngine {
struct Matrix4x4;
}
namespace UnityEngine::Playables {
struct Playable;
}
namespace UnityEngine::Playables {
struct PlayableBinding;
}
namespace UnityEngine::ProBuilder {
struct BezierPoint;
}
namespace UnityEngine::ProBuilder {
struct EdgeLookup;
}
namespace UnityEngine::ProBuilder {
template<typename T1,typename T2>
struct SimpleTuple_2;
}
namespace UnityEngine {
struct Vector2;
}
namespace UnityEngine::ProBuilder {
struct Triangle;
}
namespace UnityEngine {
struct Quaternion;
}
namespace UnityEngine {
struct RaycastHit2D;
}
namespace UnityEngine {
struct Rect;
}
namespace UnityEngine::Rendering {
struct SubMeshDescriptor;
}
namespace UnityEngine::Rendering {
struct VertexAttributeDescriptor;
}
namespace UnityEngine::ResourceManagement::AsyncOperations {
struct AsyncOperationHandle;
}
namespace UnityEngine::ResourceManagement::Diagnostics {
struct DiagnosticEvent;
}
namespace UnityEngine::ResourceManagement {
struct UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest;
}
namespace UnityEngine::ResourceManagement::Util {
struct ObjectInitializationData;
}
namespace UnityEngine::ResourceManagement::Util {
struct UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo;
}
namespace UnityEngine::SceneManagement {
struct Scene;
}
namespace UnityEngine::SpatialTracking {
struct UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData;
}
namespace UnityEngine::TextCore {
struct GlyphRect;
}
namespace UnityEngine::TextCore::LowLevel {
struct GlyphPairAdjustmentRecord;
}
namespace UnityEngine::TextCore::Text {
struct UnityEngine__TextCore__Text__TextSettings__FontReferenceMap;
}
namespace UnityEngine::Timeline {
struct IntervalTreeNode;
}
namespace UnityEngine::Timeline {
struct UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo;
}
namespace UnityEngine::Timeline {
template<typename T>
struct UnityEngine__Timeline__IntervalTree_1__Entry;
}
namespace UnityEngine::Timeline {
struct UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry;
}
namespace UnityEngine {
struct TreeInstance;
}
namespace UnityEngine {
struct UICharInfo;
}
namespace UnityEngine::UIElements {
struct ComputedTransitionProperty;
}
namespace UnityEngine::UIElements {
struct EasingFunction;
}
namespace UnityEngine::UIElements {
struct ManipulatorActivationFilter;
}
namespace UnityEngine::UIElements {
struct RuleMatcher;
}
namespace UnityEngine::UIElements {
struct StylePropertyName;
}
namespace UnityEngine::UIElements {
struct StyleSelectorPart;
}
namespace UnityEngine::UIElements::StyleSheets {
struct SelectorMatchRecord;
}
namespace UnityEngine::UIElements::StyleSheets {
struct StylePropertyValue;
}
namespace UnityEngine::UIElements::StyleSheets {
struct StyleValue;
}
namespace UnityEngine::UIElements::StyleSheets {
struct StyleValueManaged;
}
namespace UnityEngine::UIElements::StyleSheets::Syntax {
struct StyleSyntaxToken;
}
namespace UnityEngine::UIElements {
struct StyleVariable;
}
namespace UnityEngine::UIElements {
struct TimeValue;
}
namespace UnityEngine::UIElements::UIR::Implementation {
struct UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry;
}
namespace UnityEngine::UIElements::UIR {
struct RenderChainTextEntry;
}
namespace UnityEngine::UIElements::UIR {
struct UnityEngine__UIElements__UIR__BitmapAllocator32__Page;
}
namespace UnityEngine::UIElements::UIR {
struct UnityEngine__UIElements__UIR__RenderChain__RenderNodeData;
}
namespace UnityEngine::UIElements::UIR {
struct UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo;
}
namespace UnityEngine::UIElements::UIR {
struct UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree;
}
namespace UnityEngine::UIElements::UIR {
struct UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate;
}
namespace UnityEngine::UIElements {
struct UnityEngine__UIElements__FocusController__FocusedElement;
}
namespace UnityEngine::UIElements {
struct UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper;
}
namespace UnityEngine::UIElements {
struct UnityEngine__UIElements__TemplateAsset__AttributeOverride;
}
namespace UnityEngine::UIElements {
struct UnityEngine__UIElements__TextureRegistry__TextureInfo;
}
namespace UnityEngine::UIElements {
struct UnityEngine__UIElements__TreeView__TreeViewItemWrapper;
}
namespace UnityEngine::UIElements {
struct UnityEngine__UIElements__VisualTreeAsset__SlotDefinition;
}
namespace UnityEngine::UIElements {
struct UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry;
}
namespace UnityEngine::UIElements {
struct UnityEngine__UIElements__VisualTreeAsset__UsingEntry;
}
namespace UnityEngine {
struct UILineInfo;
}
namespace UnityEngine {
struct UIVertex;
}
namespace UnityEngine {
struct UnityEngine__BeforeRenderHelper__OrderBlock;
}
namespace UnityEngine {
struct UnityEngine__Camera__RenderRequest;
}
namespace UnityEngine {
struct UnityEngine__UnitySynchronizationContext__WorkRequest;
}
namespace UnityEngine {
struct Vector3Int;
}
namespace UnityEngine {
struct Vector4;
}
namespace UnityEngine::XR::OpenXR::Input {
struct UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding;
}
namespace UnityEngine::XR {
struct XRNodeState;
}
namespace VRUIControls {
struct VRUIControls__PhysicsRaycasterWithCache__CachedRaycast;
}
namespace VRUIControls {
struct VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult;
}
namespace Zenject {
struct BindingId;
}
namespace Zenject {
struct TypeValuePair;
}
namespace Zenject {
struct Zenject__DisposableManager__DisposableInfo;
}
namespace Zenject {
struct Zenject__DisposeBlock__SpawnedObjectPoolPair;
}
namespace Zenject {
struct Zenject__PoolableManager__PoolableInfo;
}
// Forward declare root types
namespace System::Collections::ObjectModel {
template<typename T>
class ReadOnlyCollection_1;
}
namespace System::Collections::ObjectModel {
template<::cordl_internals::il2cpp_reference_type T>
class ReadOnlyCollection_1<T>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<GlobalNamespace::BezierCurve>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<GlobalNamespace::FPSTimestamp>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<GlobalNamespace::OVRSpaceUser>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<HoudiniEngineUnity::HAPI_GeoInfo>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<HoudiniEngineUnity::HAPI_PartInfo>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<HoudiniEngineUnity::TransformData>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<MidiParser::MidiEvent>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<Newtonsoft::Json::JsonPosition>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<System::ArraySegment_1<uint8_t>>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<System::Collections::DictionaryEntry>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<System::DateTime>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<System::DateTimeOffset>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<System::Decimal>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<System::Guid>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<System::Int32Enum>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<System::Reflection::CustomAttributeNamedArgument>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<System::Reflection::CustomAttributeTypedArgument>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<System::Security::Cryptography::X509Certificates::X509ChainStatus>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<System::TimeSpan>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<System::UInt16Enum>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<Unity::Collections::NativeArray_1<uint16_t>>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::AnimatorClipInfo>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::BoneWeight>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::Color32>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::Color>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::EventSystems::RaycastResult>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::InputSystem::InputBinding>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::InputSystem::LowLevel::InputEventPtr>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::InputSystem::Utilities::InternedString>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::InputSystem::Utilities::NameAndParameters>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::InputSystem::Utilities::NamedValue>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::InputSystem::Utilities::Substring>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::InputSystem::XR::UsageHint>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::Matrix4x4>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::Playables::Playable>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::Playables::PlayableBinding>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::ProBuilder::BezierPoint>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::ProBuilder::Edge>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::ProBuilder::EdgeLookup>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::ProBuilder::Triangle>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::Quaternion>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::RaycastHit2D>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::Rect>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::Rendering::SubMeshDescriptor>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::Rendering::VertexAttributeDescriptor>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::SceneManagement::Scene>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::TextCore::GlyphRect>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::Timeline::IntervalTreeNode>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::TreeInstance>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::UICharInfo>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::UIElements::ComputedTransitionProperty>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::UIElements::EasingFunction>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::UIElements::ManipulatorActivationFilter>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::UIElements::RuleMatcher>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::UIElements::StylePropertyName>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::UIElements::StyleSelectorPart>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::UIElements::StyleSheets::StyleValue>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::UIElements::StyleVariable>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::UIElements::TimeValue>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::UIElements::UIR::RenderChainTextEntry>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::UILineInfo>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::UIVertex>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::UnityEngine__Camera__RenderRequest>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::Vector2>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::Vector3>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::Vector3Int>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::Vector4>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<UnityEngine::XR::XRNodeState>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<Zenject::BindingId>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<Zenject::TypeValuePair>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<Zenject::Zenject__DisposableManager__DisposableInfo>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<Zenject::Zenject__PoolableManager__PoolableInfo>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<bool>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<char16_t>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<double_t>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<float_t>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<int16_t>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<int32_t>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<int64_t>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<int8_t>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<uint16_t>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<uint32_t>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<uint64_t>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<uint8_t>;
}
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<::cordl_internals::il2cpp_reference_type T>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 2 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<T> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<T>
constexpr operator  System::Collections::Generic::IList_1<T>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<T>
constexpr operator  System::Collections::Generic::ICollection_1<T>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<T>
constexpr operator  System::Collections::Generic::IEnumerable_1<T>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<T>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<T>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<T>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<T>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<T> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<T> value) ;

constexpr System::Collections::Generic::IList_1<T> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 T __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 T __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<T>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<T> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<T> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 T get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(T value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<T> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<T> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(T value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 T System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, T value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(T value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, T value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(T value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 92 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<int32_t> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<int32_t>
constexpr operator  System::Collections::Generic::IList_1<int32_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<int32_t>
constexpr operator  System::Collections::Generic::ICollection_1<int32_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<int32_t>
constexpr operator  System::Collections::Generic::IEnumerable_1<int32_t>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<int32_t>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<int32_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<int32_t>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<int32_t>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<int32_t> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<int32_t> value) ;

constexpr System::Collections::Generic::IList_1<int32_t> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 int32_t __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 int32_t __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<int32_t>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<int32_t> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<int32_t> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(int32_t value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<int32_t> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<int32_t> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(int32_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, int32_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(int32_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, int32_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(int32_t value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 99 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<bool> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<bool>
constexpr operator  System::Collections::Generic::IList_1<bool>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<bool>
constexpr operator  System::Collections::Generic::ICollection_1<bool>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<bool>
constexpr operator  System::Collections::Generic::IEnumerable_1<bool>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<bool>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<bool>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<bool>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<bool>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<bool> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<bool> value) ;

constexpr System::Collections::Generic::IList_1<bool> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 bool __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 bool __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<bool>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<bool> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<bool> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 bool get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(bool value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<bool> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<bool> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(bool value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, bool value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(bool value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, bool value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(bool value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 265 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 279 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<char16_t> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<char16_t>
constexpr operator  System::Collections::Generic::IList_1<char16_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<char16_t>
constexpr operator  System::Collections::Generic::ICollection_1<char16_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<char16_t>
constexpr operator  System::Collections::Generic::IEnumerable_1<char16_t>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<char16_t>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<char16_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<char16_t>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<char16_t>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<char16_t> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<char16_t> value) ;

constexpr System::Collections::Generic::IList_1<char16_t> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 char16_t __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 char16_t __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<char16_t>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<char16_t> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<char16_t> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 char16_t get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(char16_t value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<char16_t> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<char16_t> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(char16_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 char16_t System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, char16_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(char16_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, char16_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(char16_t value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 280 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::Color> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::Color>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::Color>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::Color>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::Color>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::Color>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::Color>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::Color>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::Color>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Color>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Color>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::Color> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::Color> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::Color> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::Color __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::Color __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::Color>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::Color> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::Color> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Color get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::Color value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::Color> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::Color> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::Color value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Color System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::Color value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::Color value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::Color value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::Color value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 289 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 315 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::InputSystem::LowLevel::InputEventPtr> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::InputSystem::LowLevel::InputEventPtr>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::InputSystem::LowLevel::InputEventPtr>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::LowLevel::InputEventPtr>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::LowLevel::InputEventPtr>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::LowLevel::InputEventPtr>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::LowLevel::InputEventPtr>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::LowLevel::InputEventPtr>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::LowLevel::InputEventPtr>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::LowLevel::InputEventPtr>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::LowLevel::InputEventPtr>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::InputSystem::LowLevel::InputEventPtr> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::InputSystem::LowLevel::InputEventPtr> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::InputSystem::LowLevel::InputEventPtr> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::InputSystem::LowLevel::InputEventPtr __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::InputSystem::LowLevel::InputEventPtr __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::InputSystem::LowLevel::InputEventPtr>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::InputSystem::LowLevel::InputEventPtr> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::InputSystem::LowLevel::InputEventPtr> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::LowLevel::InputEventPtr get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::InputSystem::LowLevel::InputEventPtr value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::InputSystem::LowLevel::InputEventPtr> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::LowLevel::InputEventPtr> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::InputSystem::LowLevel::InputEventPtr value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::LowLevel::InputEventPtr System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::InputSystem::LowLevel::InputEventPtr value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::InputSystem::LowLevel::InputEventPtr value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::InputSystem::LowLevel::InputEventPtr value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::InputSystem::LowLevel::InputEventPtr value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 374 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<float_t> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<float_t>
constexpr operator  System::Collections::Generic::IList_1<float_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<float_t>
constexpr operator  System::Collections::Generic::ICollection_1<float_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<float_t>
constexpr operator  System::Collections::Generic::IEnumerable_1<float_t>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<float_t>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<float_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<float_t>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<float_t>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<float_t> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<float_t> value) ;

constexpr System::Collections::Generic::IList_1<float_t> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 float_t __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 float_t __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<float_t>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<float_t> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<float_t> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 float_t get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(float_t value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<float_t> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<float_t> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(float_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 float_t System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, float_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(float_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, float_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(float_t value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 389 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<uint64_t> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<uint64_t>
constexpr operator  System::Collections::Generic::IList_1<uint64_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<uint64_t>
constexpr operator  System::Collections::Generic::ICollection_1<uint64_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<uint64_t>
constexpr operator  System::Collections::Generic::IEnumerable_1<uint64_t>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<uint64_t>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<uint64_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<uint64_t>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<uint64_t>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<uint64_t> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<uint64_t> value) ;

constexpr System::Collections::Generic::IList_1<uint64_t> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 uint64_t __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 uint64_t __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<uint64_t>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<uint64_t> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<uint64_t> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 uint64_t get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(uint64_t value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<uint64_t> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<uint64_t> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(uint64_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 uint64_t System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, uint64_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(uint64_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, uint64_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(uint64_t value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 393 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::Vector2> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::Vector2>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::Vector2>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::Vector2>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::Vector2>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::Vector2>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::Vector2>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::Vector2>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::Vector2>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Vector2>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Vector2>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::Vector2> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::Vector2> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::Vector2> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::Vector2 __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::Vector2 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::Vector2>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::Vector2> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::Vector2> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Vector2 get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::Vector2 value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::Vector2> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::Vector2> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::Vector2 value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Vector2 System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::Vector2 value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::Vector2 value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::Vector2 value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::Vector2 value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 394 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::Vector3> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::Vector3>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::Vector3>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::Vector3>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::Vector3>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::Vector3>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::Vector3>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::Vector3>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::Vector3>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Vector3>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Vector3>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::Vector3> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::Vector3> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::Vector3> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::Vector3 __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::Vector3 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::Vector3>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::Vector3> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::Vector3> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Vector3 get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::Vector3 value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::Vector3> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::Vector3> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::Vector3 value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Vector3 System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::Vector3 value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::Vector3 value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::Vector3 value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::Vector3 value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 399 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::XR::XRNodeState> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::XR::XRNodeState>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::XR::XRNodeState>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::XR::XRNodeState>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::XR::XRNodeState>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::XR::XRNodeState>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::XR::XRNodeState>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::XR::XRNodeState>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::XR::XRNodeState>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::XR::XRNodeState>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::XR::XRNodeState>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::XR::XRNodeState> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::XR::XRNodeState> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::XR::XRNodeState> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::XR::XRNodeState __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::XR::XRNodeState __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::XR::XRNodeState>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::XR::XRNodeState> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::XR::XRNodeState> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::XR::XRNodeState get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::XR::XRNodeState value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::XR::XRNodeState> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::XR::XRNodeState> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::XR::XRNodeState value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::XR::XRNodeState System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::XR::XRNodeState value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::XR::XRNodeState value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::XR::XRNodeState value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::XR::XRNodeState value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 716 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::BoneWeight> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::BoneWeight>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::BoneWeight>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::BoneWeight>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::BoneWeight>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::BoneWeight>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::BoneWeight>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::BoneWeight>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::BoneWeight>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::BoneWeight>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::BoneWeight>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::BoneWeight> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::BoneWeight> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::BoneWeight> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::BoneWeight __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::BoneWeight __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::BoneWeight>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::BoneWeight> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::BoneWeight> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::BoneWeight get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::BoneWeight value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::BoneWeight> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::BoneWeight> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::BoneWeight value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::BoneWeight System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::BoneWeight value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::BoneWeight value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::BoneWeight value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::BoneWeight value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 718 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<uint8_t> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<uint8_t>
constexpr operator  System::Collections::Generic::IList_1<uint8_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<uint8_t>
constexpr operator  System::Collections::Generic::ICollection_1<uint8_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<uint8_t>
constexpr operator  System::Collections::Generic::IEnumerable_1<uint8_t>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<uint8_t>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<uint8_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<uint8_t>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<uint8_t>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<uint8_t> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<uint8_t> value) ;

constexpr System::Collections::Generic::IList_1<uint8_t> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 uint8_t __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 uint8_t __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<uint8_t>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<uint8_t> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<uint8_t> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 uint8_t get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(uint8_t value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<uint8_t> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<uint8_t> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(uint8_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 uint8_t System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, uint8_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(uint8_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, uint8_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(uint8_t value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 719 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::Color32> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::Color32>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::Color32>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::Color32>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::Color32>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::Color32>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::Color32>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::Color32>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::Color32>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Color32>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Color32>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::Color32> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::Color32> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::Color32> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::Color32 __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::Color32 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::Color32>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::Color32> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::Color32> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Color32 get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::Color32 value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::Color32> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::Color32> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::Color32 value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Color32 System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::Color32 value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::Color32 value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::Color32 value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::Color32 value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 722 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<int16_t> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<int16_t>
constexpr operator  System::Collections::Generic::IList_1<int16_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<int16_t>
constexpr operator  System::Collections::Generic::ICollection_1<int16_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<int16_t>
constexpr operator  System::Collections::Generic::IEnumerable_1<int16_t>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<int16_t>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<int16_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<int16_t>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<int16_t>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<int16_t> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<int16_t> value) ;

constexpr System::Collections::Generic::IList_1<int16_t> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 int16_t __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 int16_t __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<int16_t>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<int16_t> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<int16_t> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 int16_t get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(int16_t value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<int16_t> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<int16_t> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(int16_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 int16_t System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, int16_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(int16_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, int16_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(int16_t value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 729 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<uint16_t> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<uint16_t>
constexpr operator  System::Collections::Generic::IList_1<uint16_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<uint16_t>
constexpr operator  System::Collections::Generic::ICollection_1<uint16_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<uint16_t>
constexpr operator  System::Collections::Generic::IEnumerable_1<uint16_t>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<uint16_t>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<uint16_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<uint16_t>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<uint16_t>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<uint16_t> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<uint16_t> value) ;

constexpr System::Collections::Generic::IList_1<uint16_t> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 uint16_t __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 uint16_t __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<uint16_t>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<uint16_t> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<uint16_t> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 uint16_t get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(uint16_t value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<uint16_t> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<uint16_t> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(uint16_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 uint16_t System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, uint16_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(uint16_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, uint16_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(uint16_t value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 730 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<uint32_t> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<uint32_t>
constexpr operator  System::Collections::Generic::IList_1<uint32_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<uint32_t>
constexpr operator  System::Collections::Generic::ICollection_1<uint32_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<uint32_t>
constexpr operator  System::Collections::Generic::IEnumerable_1<uint32_t>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<uint32_t>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<uint32_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<uint32_t>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<uint32_t>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<uint32_t> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<uint32_t> value) ;

constexpr System::Collections::Generic::IList_1<uint32_t> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 uint32_t __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 uint32_t __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<uint32_t>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<uint32_t> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<uint32_t> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 uint32_t get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(uint32_t value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<uint32_t> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<uint32_t> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(uint32_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 uint32_t System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, uint32_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(uint32_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, uint32_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(uint32_t value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 731 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::Vector3Int> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::Vector3Int>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::Vector3Int>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::Vector3Int>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::Vector3Int>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::Vector3Int>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::Vector3Int>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::Vector3Int>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::Vector3Int>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Vector3Int>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Vector3Int>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::Vector3Int> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::Vector3Int> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::Vector3Int> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::Vector3Int __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::Vector3Int __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::Vector3Int>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::Vector3Int> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::Vector3Int> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Vector3Int get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::Vector3Int value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::Vector3Int> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::Vector3Int> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::Vector3Int value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Vector3Int System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::Vector3Int value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::Vector3Int value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::Vector3Int value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::Vector3Int value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 732 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::Vector4> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::Vector4>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::Vector4>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::Vector4>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::Vector4>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::Vector4>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::Vector4>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::Vector4>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::Vector4>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Vector4>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Vector4>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::Vector4> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::Vector4> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::Vector4> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::Vector4 __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::Vector4 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::Vector4>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::Vector4> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::Vector4> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Vector4 get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::Vector4 value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::Vector4> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::Vector4> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::Vector4 value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Vector4 System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::Vector4 value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::Vector4 value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::Vector4 value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::Vector4 value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 734 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::Rendering::VertexAttributeDescriptor> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::Rendering::VertexAttributeDescriptor>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::Rendering::VertexAttributeDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::Rendering::VertexAttributeDescriptor>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::Rendering::VertexAttributeDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::Rendering::VertexAttributeDescriptor>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::Rendering::VertexAttributeDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::Rendering::VertexAttributeDescriptor>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::Rendering::VertexAttributeDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Rendering::VertexAttributeDescriptor>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Rendering::VertexAttributeDescriptor>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::Rendering::VertexAttributeDescriptor> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::Rendering::VertexAttributeDescriptor> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::Rendering::VertexAttributeDescriptor> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::Rendering::VertexAttributeDescriptor __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::Rendering::VertexAttributeDescriptor __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::Rendering::VertexAttributeDescriptor>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::Rendering::VertexAttributeDescriptor> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::Rendering::VertexAttributeDescriptor> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Rendering::VertexAttributeDescriptor get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::Rendering::VertexAttributeDescriptor value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::Rendering::VertexAttributeDescriptor> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::Rendering::VertexAttributeDescriptor> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::Rendering::VertexAttributeDescriptor value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Rendering::VertexAttributeDescriptor System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::Rendering::VertexAttributeDescriptor value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::Rendering::VertexAttributeDescriptor value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::Rendering::VertexAttributeDescriptor value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::Rendering::VertexAttributeDescriptor value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 831 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<int64_t> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<int64_t>
constexpr operator  System::Collections::Generic::IList_1<int64_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<int64_t>
constexpr operator  System::Collections::Generic::ICollection_1<int64_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<int64_t>
constexpr operator  System::Collections::Generic::IEnumerable_1<int64_t>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<int64_t>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<int64_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<int64_t>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<int64_t>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<int64_t> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<int64_t> value) ;

constexpr System::Collections::Generic::IList_1<int64_t> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 int64_t __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 int64_t __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<int64_t>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<int64_t> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<int64_t> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 int64_t get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(int64_t value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<int64_t> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<int64_t> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(int64_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 int64_t System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, int64_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(int64_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, int64_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(int64_t value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 1007 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t> __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t> __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t> get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t> value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t> System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t> value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 1008 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2> __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2> __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2> get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2> value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2>> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2> System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::ProBuilder::SimpleTuple_2<float_t,UnityEngine::Vector2> value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 1015 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<GlobalNamespace::OVRSpaceUser> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<GlobalNamespace::OVRSpaceUser>
constexpr operator  System::Collections::Generic::IList_1<GlobalNamespace::OVRSpaceUser>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<GlobalNamespace::OVRSpaceUser>
constexpr operator  System::Collections::Generic::ICollection_1<GlobalNamespace::OVRSpaceUser>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<GlobalNamespace::OVRSpaceUser>
constexpr operator  System::Collections::Generic::IEnumerable_1<GlobalNamespace::OVRSpaceUser>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::OVRSpaceUser>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::OVRSpaceUser>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::OVRSpaceUser>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::OVRSpaceUser>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<GlobalNamespace::OVRSpaceUser> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<GlobalNamespace::OVRSpaceUser> value) ;

constexpr System::Collections::Generic::IList_1<GlobalNamespace::OVRSpaceUser> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 GlobalNamespace::OVRSpaceUser __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 GlobalNamespace::OVRSpaceUser __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<GlobalNamespace::OVRSpaceUser>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<GlobalNamespace::OVRSpaceUser> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<GlobalNamespace::OVRSpaceUser> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::OVRSpaceUser get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(GlobalNamespace::OVRSpaceUser value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<GlobalNamespace::OVRSpaceUser> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<GlobalNamespace::OVRSpaceUser> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(GlobalNamespace::OVRSpaceUser value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::OVRSpaceUser System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, GlobalNamespace::OVRSpaceUser value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(GlobalNamespace::OVRSpaceUser value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, GlobalNamespace::OVRSpaceUser value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(GlobalNamespace::OVRSpaceUser value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 1017 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::EventSystems::RaycastResult> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::EventSystems::RaycastResult>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::EventSystems::RaycastResult>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::EventSystems::RaycastResult>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::EventSystems::RaycastResult>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::EventSystems::RaycastResult>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::EventSystems::RaycastResult>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::EventSystems::RaycastResult>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::EventSystems::RaycastResult>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::EventSystems::RaycastResult>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::EventSystems::RaycastResult>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::EventSystems::RaycastResult> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::EventSystems::RaycastResult> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::EventSystems::RaycastResult> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::EventSystems::RaycastResult __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::EventSystems::RaycastResult __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::EventSystems::RaycastResult>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::EventSystems::RaycastResult> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::EventSystems::RaycastResult> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::EventSystems::RaycastResult get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::EventSystems::RaycastResult value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::EventSystems::RaycastResult> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::EventSystems::RaycastResult> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::EventSystems::RaycastResult value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::EventSystems::RaycastResult System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::EventSystems::RaycastResult value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::EventSystems::RaycastResult value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::EventSystems::RaycastResult value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::EventSystems::RaycastResult value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 1018 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::UIElements::StyleSheets::SelectorMatchRecord __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::UIElements::StyleSheets::SelectorMatchRecord __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::StyleSheets::SelectorMatchRecord get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::StyleSheets::SelectorMatchRecord value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::StyleSheets::SelectorMatchRecord value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::StyleSheets::SelectorMatchRecord System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::UIElements::StyleSheets::SelectorMatchRecord value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::UIElements::StyleSheets::SelectorMatchRecord value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::UIElements::StyleSheets::SelectorMatchRecord value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::UIElements::StyleSheets::SelectorMatchRecord value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 1021 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit>
constexpr operator  System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit>
constexpr operator  System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit>
constexpr operator  System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> value) ;

constexpr System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(GlobalNamespace::GlobalNamespace__OVRRaycaster__RaycastHit value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 1022 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::Timeline::UnityEngine__Timeline__TimeNotificationBehaviour__NotificationEntry value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 1024 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::InputSystem::UI::UnityEngine__InputSystem__UI__TrackedDeviceRaycaster__RaycastHitData value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 1025 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult>
constexpr operator  System::Collections::Generic::IList_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult>
constexpr operator  System::Collections::Generic::ICollection_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult>
constexpr operator  System::Collections::Generic::IEnumerable_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> value) ;

constexpr System::Collections::Generic::IList_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(VRUIControls::VRUIControls__VRGraphicRaycaster__VRGraphicRaycastResult value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 1613 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::UIElements::StylePropertyName> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::StylePropertyName>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::StylePropertyName>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::StylePropertyName>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::StylePropertyName>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StylePropertyName>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StylePropertyName>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::StylePropertyName>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::StylePropertyName>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::StylePropertyName>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::StylePropertyName>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::UIElements::StylePropertyName> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::UIElements::StylePropertyName> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::UIElements::StylePropertyName> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::UIElements::StylePropertyName __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::UIElements::StylePropertyName __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::UIElements::StylePropertyName>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::UIElements::StylePropertyName> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::UIElements::StylePropertyName> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::StylePropertyName get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::StylePropertyName value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::StylePropertyName> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::StylePropertyName> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::StylePropertyName value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::StylePropertyName System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::UIElements::StylePropertyName value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::UIElements::StylePropertyName value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::UIElements::StylePropertyName value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::UIElements::StylePropertyName value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 1618 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__UsingEntry value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 2495 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::ProBuilder::Edge> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::ProBuilder::Edge>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::ProBuilder::Edge>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::ProBuilder::Edge>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::ProBuilder::Edge>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::Edge>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::Edge>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::ProBuilder::Edge>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::ProBuilder::Edge>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ProBuilder::Edge>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ProBuilder::Edge>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::ProBuilder::Edge> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::ProBuilder::Edge> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::ProBuilder::Edge> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::ProBuilder::Edge __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::ProBuilder::Edge __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::ProBuilder::Edge>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::ProBuilder::Edge> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::ProBuilder::Edge> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ProBuilder::Edge get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::ProBuilder::Edge value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::ProBuilder::Edge> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::ProBuilder::Edge> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::ProBuilder::Edge value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ProBuilder::Edge System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::ProBuilder::Edge value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::ProBuilder::Edge value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::ProBuilder::Edge value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::ProBuilder::Edge value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 2496 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::ProBuilder::EdgeLookup> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::ProBuilder::EdgeLookup>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::ProBuilder::EdgeLookup>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::ProBuilder::EdgeLookup>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::ProBuilder::EdgeLookup>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::EdgeLookup>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::EdgeLookup>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::ProBuilder::EdgeLookup>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::ProBuilder::EdgeLookup>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ProBuilder::EdgeLookup>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ProBuilder::EdgeLookup>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::ProBuilder::EdgeLookup> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::ProBuilder::EdgeLookup> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::ProBuilder::EdgeLookup> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::ProBuilder::EdgeLookup __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::ProBuilder::EdgeLookup __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::ProBuilder::EdgeLookup>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::ProBuilder::EdgeLookup> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::ProBuilder::EdgeLookup> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ProBuilder::EdgeLookup get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::ProBuilder::EdgeLookup value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::ProBuilder::EdgeLookup> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::ProBuilder::EdgeLookup> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::ProBuilder::EdgeLookup value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ProBuilder::EdgeLookup System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::ProBuilder::EdgeLookup value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::ProBuilder::EdgeLookup value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::ProBuilder::EdgeLookup value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::ProBuilder::EdgeLookup value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 2498 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<System::Guid> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<System::Guid>
constexpr operator  System::Collections::Generic::IList_1<System::Guid>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::Guid>
constexpr operator  System::Collections::Generic::ICollection_1<System::Guid>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::Guid>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::Guid>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::Guid>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::Guid>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::Guid>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::Guid>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<System::Guid> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<System::Guid> value) ;

constexpr System::Collections::Generic::IList_1<System::Guid> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 System::Guid __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 System::Guid __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<System::Guid>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<System::Guid> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<System::Guid> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Guid get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::Guid value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::Guid> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::Guid> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::Guid value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Guid System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, System::Guid value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(System::Guid value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, System::Guid value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(System::Guid value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 2502 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::InputSystem::Utilities::InternedString> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::InternedString>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::InternedString>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::Utilities::InternedString>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::Utilities::InternedString>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::InternedString>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::InternedString>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::Utilities::InternedString>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::Utilities::InternedString>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::Utilities::InternedString>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::Utilities::InternedString>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::InternedString> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::InternedString> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::InternedString> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::InputSystem::Utilities::InternedString __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::InputSystem::Utilities::InternedString __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::InternedString>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::InternedString> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::InternedString> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::Utilities::InternedString get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::InputSystem::Utilities::InternedString value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::InputSystem::Utilities::InternedString> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::Utilities::InternedString> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::InputSystem::Utilities::InternedString value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::Utilities::InternedString System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::InputSystem::Utilities::InternedString value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::InputSystem::Utilities::InternedString value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::InputSystem::Utilities::InternedString value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::InputSystem::Utilities::InternedString value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 2599 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<System::DateTime> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<System::DateTime>
constexpr operator  System::Collections::Generic::IList_1<System::DateTime>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::DateTime>
constexpr operator  System::Collections::Generic::ICollection_1<System::DateTime>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::DateTime>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::DateTime>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::DateTime>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::DateTime>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::DateTime>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::DateTime>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<System::DateTime> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<System::DateTime> value) ;

constexpr System::Collections::Generic::IList_1<System::DateTime> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 System::DateTime __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 System::DateTime __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<System::DateTime>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<System::DateTime> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<System::DateTime> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::DateTime get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::DateTime value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::DateTime> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::DateTime> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::DateTime value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::DateTime System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, System::DateTime value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(System::DateTime value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, System::DateTime value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(System::DateTime value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 2600 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<System::DateTimeOffset> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<System::DateTimeOffset>
constexpr operator  System::Collections::Generic::IList_1<System::DateTimeOffset>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::DateTimeOffset>
constexpr operator  System::Collections::Generic::ICollection_1<System::DateTimeOffset>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::DateTimeOffset>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::DateTimeOffset>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::DateTimeOffset>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::DateTimeOffset>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::DateTimeOffset>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::DateTimeOffset>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<System::DateTimeOffset> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<System::DateTimeOffset> value) ;

constexpr System::Collections::Generic::IList_1<System::DateTimeOffset> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 System::DateTimeOffset __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 System::DateTimeOffset __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<System::DateTimeOffset>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<System::DateTimeOffset> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<System::DateTimeOffset> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::DateTimeOffset get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::DateTimeOffset value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::DateTimeOffset> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::DateTimeOffset> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::DateTimeOffset value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::DateTimeOffset System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, System::DateTimeOffset value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(System::DateTimeOffset value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, System::DateTimeOffset value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(System::DateTimeOffset value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 2601 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<System::Decimal> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<System::Decimal>
constexpr operator  System::Collections::Generic::IList_1<System::Decimal>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::Decimal>
constexpr operator  System::Collections::Generic::ICollection_1<System::Decimal>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::Decimal>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::Decimal>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::Decimal>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::Decimal>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::Decimal>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::Decimal>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<System::Decimal> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<System::Decimal> value) ;

constexpr System::Collections::Generic::IList_1<System::Decimal> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 System::Decimal __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 System::Decimal __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<System::Decimal>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<System::Decimal> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<System::Decimal> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Decimal get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::Decimal value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::Decimal> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::Decimal> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::Decimal value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Decimal System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, System::Decimal value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(System::Decimal value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, System::Decimal value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(System::Decimal value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 2602 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<double_t> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<double_t>
constexpr operator  System::Collections::Generic::IList_1<double_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<double_t>
constexpr operator  System::Collections::Generic::ICollection_1<double_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<double_t>
constexpr operator  System::Collections::Generic::IEnumerable_1<double_t>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<double_t>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<double_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<double_t>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<double_t>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<double_t> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<double_t> value) ;

constexpr System::Collections::Generic::IList_1<double_t> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 double_t __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 double_t __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<double_t>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<double_t> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<double_t> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 double_t get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(double_t value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<double_t> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<double_t> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(double_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 double_t System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, double_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(double_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, double_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(double_t value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 2605 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<int8_t> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<int8_t>
constexpr operator  System::Collections::Generic::IList_1<int8_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<int8_t>
constexpr operator  System::Collections::Generic::ICollection_1<int8_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<int8_t>
constexpr operator  System::Collections::Generic::IEnumerable_1<int8_t>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<int8_t>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<int8_t>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<int8_t>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<int8_t>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<int8_t> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<int8_t> value) ;

constexpr System::Collections::Generic::IList_1<int8_t> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 int8_t __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 int8_t __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<int8_t>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<int8_t> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<int8_t> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 int8_t get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(int8_t value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<int8_t> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<int8_t> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(int8_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 int8_t System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, int8_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(int8_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, int8_t value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(int8_t value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 2608 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::InputSystem::Utilities::Substring> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::Substring>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::Substring>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::Utilities::Substring>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::Utilities::Substring>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::Substring>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::Substring>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::Utilities::Substring>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::Utilities::Substring>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::Utilities::Substring>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::Utilities::Substring>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::Substring> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::Substring> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::Substring> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::InputSystem::Utilities::Substring __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::InputSystem::Utilities::Substring __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::Substring>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::Substring> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::Substring> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::Utilities::Substring get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::InputSystem::Utilities::Substring value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::InputSystem::Utilities::Substring> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::Utilities::Substring> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::InputSystem::Utilities::Substring value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::Utilities::Substring System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::InputSystem::Utilities::Substring value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::InputSystem::Utilities::Substring value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::InputSystem::Utilities::Substring value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::InputSystem::Utilities::Substring value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 2609 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<System::TimeSpan> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<System::TimeSpan>
constexpr operator  System::Collections::Generic::IList_1<System::TimeSpan>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::TimeSpan>
constexpr operator  System::Collections::Generic::ICollection_1<System::TimeSpan>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::TimeSpan>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::TimeSpan>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::TimeSpan>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::TimeSpan>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::TimeSpan>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::TimeSpan>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<System::TimeSpan> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<System::TimeSpan> value) ;

constexpr System::Collections::Generic::IList_1<System::TimeSpan> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 System::TimeSpan __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 System::TimeSpan __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<System::TimeSpan>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<System::TimeSpan> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<System::TimeSpan> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::TimeSpan get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::TimeSpan value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::TimeSpan> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::TimeSpan> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::TimeSpan value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::TimeSpan System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, System::TimeSpan value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(System::TimeSpan value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, System::TimeSpan value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(System::TimeSpan value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 2636 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange>
constexpr operator  System::Collections::Generic::IList_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange>
constexpr operator  System::Collections::Generic::ICollection_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> value) ;

constexpr System::Collections::Generic::IList_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(System::Text::RegularExpressions::System__Text__RegularExpressions__RegexCharClass__SingleRange value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 2955 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>
constexpr operator  System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>
constexpr operator  System::Collections::Generic::ICollection_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> value) ;

constexpr System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 System::Collections::Generic::KeyValuePair_2<int32_t,int32_t> __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 System::Collections::Generic::KeyValuePair_2<int32_t,int32_t> __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::KeyValuePair_2<int32_t,int32_t> get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::Collections::Generic::KeyValuePair_2<int32_t,int32_t> value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::Collections::Generic::KeyValuePair_2<int32_t,int32_t> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::KeyValuePair_2<int32_t,int32_t> System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, System::Collections::Generic::KeyValuePair_2<int32_t,int32_t> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(System::Collections::Generic::KeyValuePair_2<int32_t,int32_t> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, System::Collections::Generic::KeyValuePair_2<int32_t,int32_t> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(System::Collections::Generic::KeyValuePair_2<int32_t,int32_t> value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 2956 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::ICollection_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> value) ;

constexpr System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 2977 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<Zenject::BindingId> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<Zenject::BindingId>
constexpr operator  System::Collections::Generic::IList_1<Zenject::BindingId>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<Zenject::BindingId>
constexpr operator  System::Collections::Generic::ICollection_1<Zenject::BindingId>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<Zenject::BindingId>
constexpr operator  System::Collections::Generic::IEnumerable_1<Zenject::BindingId>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<Zenject::BindingId>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<Zenject::BindingId>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<Zenject::BindingId>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<Zenject::BindingId>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<Zenject::BindingId> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<Zenject::BindingId> value) ;

constexpr System::Collections::Generic::IList_1<Zenject::BindingId> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 Zenject::BindingId __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 Zenject::BindingId __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<Zenject::BindingId>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<Zenject::BindingId> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<Zenject::BindingId> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 Zenject::BindingId get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(Zenject::BindingId value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<Zenject::BindingId> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<Zenject::BindingId> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(Zenject::BindingId value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 Zenject::BindingId System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, Zenject::BindingId value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(Zenject::BindingId value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, Zenject::BindingId value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(Zenject::BindingId value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 3000 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::InputSystem::InputBinding> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::InputSystem::InputBinding>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::InputSystem::InputBinding>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::InputBinding>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::InputBinding>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::InputBinding>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::InputBinding>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::InputBinding>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::InputBinding>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::InputBinding>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::InputBinding>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::InputSystem::InputBinding> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::InputSystem::InputBinding> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::InputSystem::InputBinding> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::InputSystem::InputBinding __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::InputSystem::InputBinding __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::InputSystem::InputBinding>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::InputSystem::InputBinding> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::InputSystem::InputBinding> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::InputBinding get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::InputSystem::InputBinding value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::InputSystem::InputBinding> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::InputBinding> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::InputSystem::InputBinding value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::InputBinding System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::InputSystem::InputBinding value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::InputSystem::InputBinding value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::InputSystem::InputBinding value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::InputSystem::InputBinding value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 3008 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::InputSystem::Utilities::NameAndParameters> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::NameAndParameters>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::NameAndParameters>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::Utilities::NameAndParameters>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::Utilities::NameAndParameters>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::NameAndParameters>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::NameAndParameters>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::Utilities::NameAndParameters>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::Utilities::NameAndParameters>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::Utilities::NameAndParameters>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::Utilities::NameAndParameters>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::NameAndParameters> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::NameAndParameters> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::NameAndParameters> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::InputSystem::Utilities::NameAndParameters __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::InputSystem::Utilities::NameAndParameters __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::NameAndParameters>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::NameAndParameters> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::NameAndParameters> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::Utilities::NameAndParameters get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::InputSystem::Utilities::NameAndParameters value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::InputSystem::Utilities::NameAndParameters> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::Utilities::NameAndParameters> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::InputSystem::Utilities::NameAndParameters value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::Utilities::NameAndParameters System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::InputSystem::Utilities::NameAndParameters value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::InputSystem::Utilities::NameAndParameters value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::InputSystem::Utilities::NameAndParameters value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::InputSystem::Utilities::NameAndParameters value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 3009 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::InputSystem::Utilities::NamedValue> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::NamedValue>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::NamedValue>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::Utilities::NamedValue>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::Utilities::NamedValue>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::NamedValue>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::NamedValue>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::Utilities::NamedValue>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::Utilities::NamedValue>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::Utilities::NamedValue>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::Utilities::NamedValue>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::NamedValue> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::NamedValue> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::NamedValue> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::InputSystem::Utilities::NamedValue __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::InputSystem::Utilities::NamedValue __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::NamedValue>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::NamedValue> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::NamedValue> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::Utilities::NamedValue get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::InputSystem::Utilities::NamedValue value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::InputSystem::Utilities::NamedValue> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::Utilities::NamedValue> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::InputSystem::Utilities::NamedValue value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::Utilities::NamedValue System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::InputSystem::Utilities::NamedValue value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::InputSystem::Utilities::NamedValue value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::InputSystem::Utilities::NamedValue value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::InputSystem::Utilities::NamedValue value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 3011 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::Playables::PlayableBinding> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::Playables::PlayableBinding>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::Playables::PlayableBinding>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::Playables::PlayableBinding>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::Playables::PlayableBinding>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::Playables::PlayableBinding>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::Playables::PlayableBinding>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Playables::PlayableBinding>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Playables::PlayableBinding>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::Playables::PlayableBinding> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::Playables::PlayableBinding> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::Playables::PlayableBinding> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::Playables::PlayableBinding __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::Playables::PlayableBinding __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::Playables::PlayableBinding>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::Playables::PlayableBinding> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::Playables::PlayableBinding> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Playables::PlayableBinding get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::Playables::PlayableBinding value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::Playables::PlayableBinding> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::Playables::PlayableBinding value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Playables::PlayableBinding System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::Playables::PlayableBinding value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::Playables::PlayableBinding value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::Playables::PlayableBinding value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::Playables::PlayableBinding value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 3016 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::SceneManagement::Scene> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::SceneManagement::Scene>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::SceneManagement::Scene>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::SceneManagement::Scene>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::SceneManagement::Scene>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::SceneManagement::Scene>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::SceneManagement::Scene>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::SceneManagement::Scene>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::SceneManagement::Scene>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::SceneManagement::Scene>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::SceneManagement::Scene>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::SceneManagement::Scene> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::SceneManagement::Scene> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::SceneManagement::Scene> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::SceneManagement::Scene __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::SceneManagement::Scene __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::SceneManagement::Scene>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::SceneManagement::Scene> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::SceneManagement::Scene> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::SceneManagement::Scene get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::SceneManagement::Scene value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::SceneManagement::Scene> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::SceneManagement::Scene> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::SceneManagement::Scene value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::SceneManagement::Scene System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::SceneManagement::Scene value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::SceneManagement::Scene value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::SceneManagement::Scene value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::SceneManagement::Scene value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 3026 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<Zenject::TypeValuePair> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<Zenject::TypeValuePair>
constexpr operator  System::Collections::Generic::IList_1<Zenject::TypeValuePair>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<Zenject::TypeValuePair>
constexpr operator  System::Collections::Generic::ICollection_1<Zenject::TypeValuePair>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<Zenject::TypeValuePair>
constexpr operator  System::Collections::Generic::IEnumerable_1<Zenject::TypeValuePair>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<Zenject::TypeValuePair>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<Zenject::TypeValuePair>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<Zenject::TypeValuePair>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<Zenject::TypeValuePair>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<Zenject::TypeValuePair> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<Zenject::TypeValuePair> value) ;

constexpr System::Collections::Generic::IList_1<Zenject::TypeValuePair> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 Zenject::TypeValuePair __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 Zenject::TypeValuePair __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<Zenject::TypeValuePair>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<Zenject::TypeValuePair> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<Zenject::TypeValuePair> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 Zenject::TypeValuePair get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(Zenject::TypeValuePair value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<Zenject::TypeValuePair> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<Zenject::TypeValuePair> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(Zenject::TypeValuePair value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 Zenject::TypeValuePair System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, Zenject::TypeValuePair value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(Zenject::TypeValuePair value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, Zenject::TypeValuePair value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(Zenject::TypeValuePair value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 3176 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::UIElements::EasingFunction> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::EasingFunction>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::EasingFunction>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::EasingFunction>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::EasingFunction>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::EasingFunction>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::EasingFunction>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::EasingFunction>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::EasingFunction>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::EasingFunction>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::EasingFunction>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::UIElements::EasingFunction> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::UIElements::EasingFunction> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::UIElements::EasingFunction> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::UIElements::EasingFunction __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::UIElements::EasingFunction __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::UIElements::EasingFunction>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::UIElements::EasingFunction> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::UIElements::EasingFunction> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::EasingFunction get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::EasingFunction value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::EasingFunction> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::EasingFunction> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::EasingFunction value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::EasingFunction System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::UIElements::EasingFunction value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::UIElements::EasingFunction value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::UIElements::EasingFunction value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::UIElements::EasingFunction value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 3184 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 3185 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::TextCore::GlyphRect> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::TextCore::GlyphRect>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::TextCore::GlyphRect>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::TextCore::GlyphRect>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::TextCore::GlyphRect>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::TextCore::GlyphRect>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::TextCore::GlyphRect>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::TextCore::GlyphRect>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::TextCore::GlyphRect>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::TextCore::GlyphRect>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::TextCore::GlyphRect>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::TextCore::GlyphRect> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::TextCore::GlyphRect> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::TextCore::GlyphRect> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::TextCore::GlyphRect __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::TextCore::GlyphRect __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::TextCore::GlyphRect>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::TextCore::GlyphRect> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::TextCore::GlyphRect> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::TextCore::GlyphRect get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::TextCore::GlyphRect value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::TextCore::GlyphRect> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::TextCore::GlyphRect> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::TextCore::GlyphRect value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::TextCore::GlyphRect System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::TextCore::GlyphRect value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::TextCore::GlyphRect value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::TextCore::GlyphRect value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::TextCore::GlyphRect value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 3195 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::InputSystem::Layouts::InputDeviceDescription __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::InputSystem::Layouts::InputDeviceDescription __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::Layouts::InputDeviceDescription get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::InputSystem::Layouts::InputDeviceDescription value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::InputSystem::Layouts::InputDeviceDescription> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::Layouts::InputDeviceDescription> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::InputSystem::Layouts::InputDeviceDescription value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::Layouts::InputDeviceDescription System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::InputSystem::Layouts::InputDeviceDescription value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::InputSystem::Layouts::InputDeviceDescription value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::InputSystem::Layouts::InputDeviceDescription value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::InputSystem::Layouts::InputDeviceDescription value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 3207 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::UIElements::ManipulatorActivationFilter> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::ManipulatorActivationFilter>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::ManipulatorActivationFilter>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::ManipulatorActivationFilter>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::ManipulatorActivationFilter>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::ManipulatorActivationFilter>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::ManipulatorActivationFilter>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::ManipulatorActivationFilter>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::ManipulatorActivationFilter>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::ManipulatorActivationFilter>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::ManipulatorActivationFilter>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::UIElements::ManipulatorActivationFilter> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::UIElements::ManipulatorActivationFilter> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::UIElements::ManipulatorActivationFilter> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::UIElements::ManipulatorActivationFilter __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::UIElements::ManipulatorActivationFilter __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::UIElements::ManipulatorActivationFilter>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::UIElements::ManipulatorActivationFilter> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::UIElements::ManipulatorActivationFilter> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::ManipulatorActivationFilter get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::ManipulatorActivationFilter value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::ManipulatorActivationFilter> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::ManipulatorActivationFilter> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::ManipulatorActivationFilter value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::ManipulatorActivationFilter System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::UIElements::ManipulatorActivationFilter value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::UIElements::ManipulatorActivationFilter value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::UIElements::ManipulatorActivationFilter value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::UIElements::ManipulatorActivationFilter value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 3209 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::Matrix4x4> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::Matrix4x4>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::Matrix4x4>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::Matrix4x4>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::Matrix4x4>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::Matrix4x4>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::Matrix4x4>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::Matrix4x4>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::Matrix4x4>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Matrix4x4>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Matrix4x4>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::Matrix4x4> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::Matrix4x4> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::Matrix4x4> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::Matrix4x4 __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::Matrix4x4 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::Matrix4x4>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::Matrix4x4> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::Matrix4x4> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Matrix4x4 get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::Matrix4x4 value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::Matrix4x4> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::Matrix4x4> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::Matrix4x4 value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Matrix4x4 System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::Matrix4x4 value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::Matrix4x4 value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::Matrix4x4 value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::Matrix4x4 value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 3217 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::Playables::Playable> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::Playables::Playable>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::Playables::Playable>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::Playables::Playable>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::Playables::Playable>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::Playable>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::Playable>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::Playables::Playable>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::Playables::Playable>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Playables::Playable>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Playables::Playable>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::Playables::Playable> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::Playables::Playable> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::Playables::Playable> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::Playables::Playable __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::Playables::Playable __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::Playables::Playable>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::Playables::Playable> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::Playables::Playable> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Playables::Playable get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::Playables::Playable value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::Playables::Playable> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::Playable> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::Playables::Playable value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Playables::Playable System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::Playables::Playable value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::Playables::Playable value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::Playables::Playable value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::Playables::Playable value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 3226 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::Quaternion> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::Quaternion>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::Quaternion>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::Quaternion>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::Quaternion>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::Quaternion>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::Quaternion>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::Quaternion>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::Quaternion>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Quaternion>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Quaternion>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::Quaternion> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::Quaternion> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::Quaternion> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::Quaternion __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::Quaternion __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::Quaternion>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::Quaternion> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::Quaternion> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Quaternion get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::Quaternion value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::Quaternion> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::Quaternion> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::Quaternion value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Quaternion System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::Quaternion value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::Quaternion value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::Quaternion value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::Quaternion value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 3229 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::Rect> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::Rect>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::Rect>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::Rect>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::Rect>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::Rect>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::Rect>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::Rect>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::Rect>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Rect>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Rect>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::Rect> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::Rect> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::Rect> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::Rect __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::Rect __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::Rect>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::Rect> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::Rect> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Rect get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::Rect value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::Rect> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::Rect> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::Rect value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Rect System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::Rect value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::Rect value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::Rect value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::Rect value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 3252 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::UIElements::TimeValue> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::TimeValue>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::TimeValue>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::TimeValue>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::TimeValue>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::TimeValue>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::TimeValue>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::TimeValue>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::TimeValue>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::TimeValue>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::TimeValue>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::UIElements::TimeValue> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::UIElements::TimeValue> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::UIElements::TimeValue> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::UIElements::TimeValue __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::UIElements::TimeValue __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::UIElements::TimeValue>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::UIElements::TimeValue> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::UIElements::TimeValue> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::TimeValue get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::TimeValue value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::TimeValue> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::TimeValue> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::TimeValue value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::TimeValue System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::UIElements::TimeValue value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::UIElements::TimeValue value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::UIElements::TimeValue value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::UIElements::TimeValue value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 3256 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::ProBuilder::Triangle> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::ProBuilder::Triangle>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::ProBuilder::Triangle>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::ProBuilder::Triangle>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::ProBuilder::Triangle>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::Triangle>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::Triangle>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::ProBuilder::Triangle>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::ProBuilder::Triangle>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ProBuilder::Triangle>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ProBuilder::Triangle>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::ProBuilder::Triangle> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::ProBuilder::Triangle> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::ProBuilder::Triangle> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::ProBuilder::Triangle __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::ProBuilder::Triangle __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::ProBuilder::Triangle>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::ProBuilder::Triangle> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::ProBuilder::Triangle> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ProBuilder::Triangle get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::ProBuilder::Triangle value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::ProBuilder::Triangle> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::ProBuilder::Triangle> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::ProBuilder::Triangle value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ProBuilder::Triangle System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::ProBuilder::Triangle value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::ProBuilder::Triangle value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::ProBuilder::Triangle value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::ProBuilder::Triangle value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 3270 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 3470 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<System::ArraySegment_1<uint8_t>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<System::ArraySegment_1<uint8_t>>
constexpr operator  System::Collections::Generic::IList_1<System::ArraySegment_1<uint8_t>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::ArraySegment_1<uint8_t>>
constexpr operator  System::Collections::Generic::ICollection_1<System::ArraySegment_1<uint8_t>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::ArraySegment_1<uint8_t>>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::ArraySegment_1<uint8_t>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::ArraySegment_1<uint8_t>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::ArraySegment_1<uint8_t>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::ArraySegment_1<uint8_t>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::ArraySegment_1<uint8_t>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<System::ArraySegment_1<uint8_t>> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<System::ArraySegment_1<uint8_t>> value) ;

constexpr System::Collections::Generic::IList_1<System::ArraySegment_1<uint8_t>> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 System::ArraySegment_1<uint8_t> __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 System::ArraySegment_1<uint8_t> __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<System::ArraySegment_1<uint8_t>>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<System::ArraySegment_1<uint8_t>> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<System::ArraySegment_1<uint8_t>> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::ArraySegment_1<uint8_t> get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::ArraySegment_1<uint8_t> value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::ArraySegment_1<uint8_t>> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::ArraySegment_1<uint8_t>> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::ArraySegment_1<uint8_t> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::ArraySegment_1<uint8_t> System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, System::ArraySegment_1<uint8_t> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(System::ArraySegment_1<uint8_t> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, System::ArraySegment_1<uint8_t> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(System::ArraySegment_1<uint8_t> value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 3482 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::ProBuilder::BezierPoint> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::ProBuilder::BezierPoint>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::ProBuilder::BezierPoint>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::ProBuilder::BezierPoint>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::ProBuilder::BezierPoint>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::BezierPoint>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::BezierPoint>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::ProBuilder::BezierPoint>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::ProBuilder::BezierPoint>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ProBuilder::BezierPoint>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ProBuilder::BezierPoint>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::ProBuilder::BezierPoint> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::ProBuilder::BezierPoint> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::ProBuilder::BezierPoint> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::ProBuilder::BezierPoint __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::ProBuilder::BezierPoint __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::ProBuilder::BezierPoint>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::ProBuilder::BezierPoint> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::ProBuilder::BezierPoint> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ProBuilder::BezierPoint get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::ProBuilder::BezierPoint value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::ProBuilder::BezierPoint> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::ProBuilder::BezierPoint> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::ProBuilder::BezierPoint value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ProBuilder::BezierPoint System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::ProBuilder::BezierPoint value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::ProBuilder::BezierPoint value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::ProBuilder::BezierPoint value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::ProBuilder::BezierPoint value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 3484 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<System::Reflection::CustomAttributeNamedArgument> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<System::Reflection::CustomAttributeNamedArgument>
constexpr operator  System::Collections::Generic::IList_1<System::Reflection::CustomAttributeNamedArgument>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::Reflection::CustomAttributeNamedArgument>
constexpr operator  System::Collections::Generic::ICollection_1<System::Reflection::CustomAttributeNamedArgument>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::Reflection::CustomAttributeNamedArgument>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::Reflection::CustomAttributeNamedArgument>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::Reflection::CustomAttributeNamedArgument>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::Reflection::CustomAttributeNamedArgument>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::Reflection::CustomAttributeNamedArgument>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::Reflection::CustomAttributeNamedArgument>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<System::Reflection::CustomAttributeNamedArgument> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<System::Reflection::CustomAttributeNamedArgument> value) ;

constexpr System::Collections::Generic::IList_1<System::Reflection::CustomAttributeNamedArgument> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 System::Reflection::CustomAttributeNamedArgument __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 System::Reflection::CustomAttributeNamedArgument __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<System::Reflection::CustomAttributeNamedArgument>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<System::Reflection::CustomAttributeNamedArgument> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<System::Reflection::CustomAttributeNamedArgument> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Reflection::CustomAttributeNamedArgument get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::Reflection::CustomAttributeNamedArgument value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::Reflection::CustomAttributeNamedArgument> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::Reflection::CustomAttributeNamedArgument> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::Reflection::CustomAttributeNamedArgument value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Reflection::CustomAttributeNamedArgument System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, System::Reflection::CustomAttributeNamedArgument value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(System::Reflection::CustomAttributeNamedArgument value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, System::Reflection::CustomAttributeNamedArgument value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(System::Reflection::CustomAttributeNamedArgument value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 3485 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<System::Reflection::CustomAttributeTypedArgument> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<System::Reflection::CustomAttributeTypedArgument>
constexpr operator  System::Collections::Generic::IList_1<System::Reflection::CustomAttributeTypedArgument>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::Reflection::CustomAttributeTypedArgument>
constexpr operator  System::Collections::Generic::ICollection_1<System::Reflection::CustomAttributeTypedArgument>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::Reflection::CustomAttributeTypedArgument>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::Reflection::CustomAttributeTypedArgument>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::Reflection::CustomAttributeTypedArgument>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::Reflection::CustomAttributeTypedArgument>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::Reflection::CustomAttributeTypedArgument>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::Reflection::CustomAttributeTypedArgument>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<System::Reflection::CustomAttributeTypedArgument> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<System::Reflection::CustomAttributeTypedArgument> value) ;

constexpr System::Collections::Generic::IList_1<System::Reflection::CustomAttributeTypedArgument> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 System::Reflection::CustomAttributeTypedArgument __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 System::Reflection::CustomAttributeTypedArgument __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<System::Reflection::CustomAttributeTypedArgument>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<System::Reflection::CustomAttributeTypedArgument> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<System::Reflection::CustomAttributeTypedArgument> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Reflection::CustomAttributeTypedArgument get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::Reflection::CustomAttributeTypedArgument value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::Reflection::CustomAttributeTypedArgument> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::Reflection::CustomAttributeTypedArgument> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::Reflection::CustomAttributeTypedArgument value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Reflection::CustomAttributeTypedArgument System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, System::Reflection::CustomAttributeTypedArgument value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(System::Reflection::CustomAttributeTypedArgument value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, System::Reflection::CustomAttributeTypedArgument value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(System::Reflection::CustomAttributeTypedArgument value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 3496 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::UICharInfo> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UICharInfo>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UICharInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UICharInfo>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UICharInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UICharInfo>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UICharInfo>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UICharInfo>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UICharInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UICharInfo>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UICharInfo>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::UICharInfo> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::UICharInfo> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::UICharInfo> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::UICharInfo __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::UICharInfo __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::UICharInfo>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::UICharInfo> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::UICharInfo> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UICharInfo get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UICharInfo value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UICharInfo> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UICharInfo> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UICharInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UICharInfo System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::UICharInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::UICharInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::UICharInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::UICharInfo value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 3497 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::UILineInfo> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UILineInfo>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UILineInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UILineInfo>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UILineInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UILineInfo>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UILineInfo>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UILineInfo>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UILineInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UILineInfo>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UILineInfo>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::UILineInfo> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::UILineInfo> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::UILineInfo> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::UILineInfo __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::UILineInfo __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::UILineInfo>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::UILineInfo> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::UILineInfo> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UILineInfo get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UILineInfo value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UILineInfo> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UILineInfo> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UILineInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UILineInfo System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::UILineInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::UILineInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::UILineInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::UILineInfo value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 3498 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::UIVertex> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIVertex>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIVertex>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIVertex>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIVertex>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIVertex>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIVertex>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIVertex>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIVertex>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIVertex>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIVertex>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::UIVertex> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::UIVertex> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::UIVertex> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::UIVertex __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::UIVertex __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::UIVertex>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::UIVertex> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::UIVertex> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIVertex get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIVertex value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIVertex> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIVertex> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIVertex value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIVertex System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::UIVertex value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::UIVertex value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::UIVertex value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::UIVertex value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 3499 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__TextureBlitter__BlitInfo value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 3678 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<GlobalNamespace::FPSTimestamp> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<GlobalNamespace::FPSTimestamp>
constexpr operator  System::Collections::Generic::IList_1<GlobalNamespace::FPSTimestamp>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<GlobalNamespace::FPSTimestamp>
constexpr operator  System::Collections::Generic::ICollection_1<GlobalNamespace::FPSTimestamp>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<GlobalNamespace::FPSTimestamp>
constexpr operator  System::Collections::Generic::IEnumerable_1<GlobalNamespace::FPSTimestamp>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::FPSTimestamp>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::FPSTimestamp>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::FPSTimestamp>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::FPSTimestamp>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<GlobalNamespace::FPSTimestamp> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<GlobalNamespace::FPSTimestamp> value) ;

constexpr System::Collections::Generic::IList_1<GlobalNamespace::FPSTimestamp> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 GlobalNamespace::FPSTimestamp __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 GlobalNamespace::FPSTimestamp __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<GlobalNamespace::FPSTimestamp>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<GlobalNamespace::FPSTimestamp> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<GlobalNamespace::FPSTimestamp> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::FPSTimestamp get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(GlobalNamespace::FPSTimestamp value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<GlobalNamespace::FPSTimestamp> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<GlobalNamespace::FPSTimestamp> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(GlobalNamespace::FPSTimestamp value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::FPSTimestamp System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, GlobalNamespace::FPSTimestamp value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(GlobalNamespace::FPSTimestamp value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, GlobalNamespace::FPSTimestamp value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(GlobalNamespace::FPSTimestamp value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 3834 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::ResourceManagement::Util::UnityEngine__ResourceManagement__Util__DelayedActionManager__DelegateInfo value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 3950 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::ICollection_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> value) ;

constexpr System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType> __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType> __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType> get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType>> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType> System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(System::Collections::Generic::KeyValuePair_2<UnityEngine::PropertyName,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 3992 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::AnimatorClipInfo> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::AnimatorClipInfo>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::AnimatorClipInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::AnimatorClipInfo>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::AnimatorClipInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::AnimatorClipInfo>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::AnimatorClipInfo>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::AnimatorClipInfo>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::AnimatorClipInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::AnimatorClipInfo>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::AnimatorClipInfo>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::AnimatorClipInfo> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::AnimatorClipInfo> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::AnimatorClipInfo> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::AnimatorClipInfo __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::AnimatorClipInfo __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::AnimatorClipInfo>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::AnimatorClipInfo> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::AnimatorClipInfo> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::AnimatorClipInfo get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::AnimatorClipInfo value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::AnimatorClipInfo> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::AnimatorClipInfo> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::AnimatorClipInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::AnimatorClipInfo System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::AnimatorClipInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::AnimatorClipInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::AnimatorClipInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::AnimatorClipInfo value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4002 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<GlobalNamespace::BezierCurve> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<GlobalNamespace::BezierCurve>
constexpr operator  System::Collections::Generic::IList_1<GlobalNamespace::BezierCurve>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<GlobalNamespace::BezierCurve>
constexpr operator  System::Collections::Generic::ICollection_1<GlobalNamespace::BezierCurve>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<GlobalNamespace::BezierCurve>
constexpr operator  System::Collections::Generic::IEnumerable_1<GlobalNamespace::BezierCurve>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::BezierCurve>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::BezierCurve>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::BezierCurve>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::BezierCurve>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<GlobalNamespace::BezierCurve> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<GlobalNamespace::BezierCurve> value) ;

constexpr System::Collections::Generic::IList_1<GlobalNamespace::BezierCurve> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 GlobalNamespace::BezierCurve __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 GlobalNamespace::BezierCurve __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<GlobalNamespace::BezierCurve>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<GlobalNamespace::BezierCurve> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<GlobalNamespace::BezierCurve> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::BezierCurve get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(GlobalNamespace::BezierCurve value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<GlobalNamespace::BezierCurve> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<GlobalNamespace::BezierCurve> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(GlobalNamespace::BezierCurve value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::BezierCurve System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, GlobalNamespace::BezierCurve value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(GlobalNamespace::BezierCurve value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, GlobalNamespace::BezierCurve value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(GlobalNamespace::BezierCurve value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4011 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::UIElements::ComputedTransitionProperty> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::ComputedTransitionProperty>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::ComputedTransitionProperty>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::ComputedTransitionProperty>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::ComputedTransitionProperty>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::ComputedTransitionProperty>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::ComputedTransitionProperty>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::ComputedTransitionProperty>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::ComputedTransitionProperty>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::ComputedTransitionProperty>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::ComputedTransitionProperty>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::UIElements::ComputedTransitionProperty> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::UIElements::ComputedTransitionProperty> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::UIElements::ComputedTransitionProperty> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::UIElements::ComputedTransitionProperty __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::UIElements::ComputedTransitionProperty __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::UIElements::ComputedTransitionProperty>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::UIElements::ComputedTransitionProperty> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::UIElements::ComputedTransitionProperty> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::ComputedTransitionProperty get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::ComputedTransitionProperty value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::ComputedTransitionProperty> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::ComputedTransitionProperty> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::ComputedTransitionProperty value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::ComputedTransitionProperty System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::UIElements::ComputedTransitionProperty value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::UIElements::ComputedTransitionProperty value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::UIElements::ComputedTransitionProperty value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::UIElements::ComputedTransitionProperty value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4029 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<HoudiniEngineUnity::HAPI_PartInfo> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<HoudiniEngineUnity::HAPI_PartInfo>
constexpr operator  System::Collections::Generic::IList_1<HoudiniEngineUnity::HAPI_PartInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<HoudiniEngineUnity::HAPI_PartInfo>
constexpr operator  System::Collections::Generic::ICollection_1<HoudiniEngineUnity::HAPI_PartInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<HoudiniEngineUnity::HAPI_PartInfo>
constexpr operator  System::Collections::Generic::IEnumerable_1<HoudiniEngineUnity::HAPI_PartInfo>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<HoudiniEngineUnity::HAPI_PartInfo>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<HoudiniEngineUnity::HAPI_PartInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<HoudiniEngineUnity::HAPI_PartInfo>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<HoudiniEngineUnity::HAPI_PartInfo>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<HoudiniEngineUnity::HAPI_PartInfo> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<HoudiniEngineUnity::HAPI_PartInfo> value) ;

constexpr System::Collections::Generic::IList_1<HoudiniEngineUnity::HAPI_PartInfo> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 HoudiniEngineUnity::HAPI_PartInfo __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 HoudiniEngineUnity::HAPI_PartInfo __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<HoudiniEngineUnity::HAPI_PartInfo>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<HoudiniEngineUnity::HAPI_PartInfo> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<HoudiniEngineUnity::HAPI_PartInfo> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 HoudiniEngineUnity::HAPI_PartInfo get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(HoudiniEngineUnity::HAPI_PartInfo value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<HoudiniEngineUnity::HAPI_PartInfo> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<HoudiniEngineUnity::HAPI_PartInfo> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(HoudiniEngineUnity::HAPI_PartInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 HoudiniEngineUnity::HAPI_PartInfo System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, HoudiniEngineUnity::HAPI_PartInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(HoudiniEngineUnity::HAPI_PartInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, HoudiniEngineUnity::HAPI_PartInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(HoudiniEngineUnity::HAPI_PartInfo value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4077 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::Timeline::IntervalTreeNode> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::Timeline::IntervalTreeNode>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::Timeline::IntervalTreeNode>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::Timeline::IntervalTreeNode>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::Timeline::IntervalTreeNode>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::IntervalTreeNode>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::IntervalTreeNode>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::Timeline::IntervalTreeNode>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::Timeline::IntervalTreeNode>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Timeline::IntervalTreeNode>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Timeline::IntervalTreeNode>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::Timeline::IntervalTreeNode> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::Timeline::IntervalTreeNode> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::Timeline::IntervalTreeNode> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::Timeline::IntervalTreeNode __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::Timeline::IntervalTreeNode __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::Timeline::IntervalTreeNode>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::Timeline::IntervalTreeNode> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::Timeline::IntervalTreeNode> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Timeline::IntervalTreeNode get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::Timeline::IntervalTreeNode value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::Timeline::IntervalTreeNode> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::Timeline::IntervalTreeNode> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::Timeline::IntervalTreeNode value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Timeline::IntervalTreeNode System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::Timeline::IntervalTreeNode value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::Timeline::IntervalTreeNode value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::Timeline::IntervalTreeNode value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::Timeline::IntervalTreeNode value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4078 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<Newtonsoft::Json::JsonPosition> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<Newtonsoft::Json::JsonPosition>
constexpr operator  System::Collections::Generic::IList_1<Newtonsoft::Json::JsonPosition>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<Newtonsoft::Json::JsonPosition>
constexpr operator  System::Collections::Generic::ICollection_1<Newtonsoft::Json::JsonPosition>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<Newtonsoft::Json::JsonPosition>
constexpr operator  System::Collections::Generic::IEnumerable_1<Newtonsoft::Json::JsonPosition>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<Newtonsoft::Json::JsonPosition>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<Newtonsoft::Json::JsonPosition>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<Newtonsoft::Json::JsonPosition>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<Newtonsoft::Json::JsonPosition>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<Newtonsoft::Json::JsonPosition> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<Newtonsoft::Json::JsonPosition> value) ;

constexpr System::Collections::Generic::IList_1<Newtonsoft::Json::JsonPosition> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 Newtonsoft::Json::JsonPosition __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 Newtonsoft::Json::JsonPosition __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<Newtonsoft::Json::JsonPosition>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<Newtonsoft::Json::JsonPosition> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<Newtonsoft::Json::JsonPosition> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 Newtonsoft::Json::JsonPosition get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(Newtonsoft::Json::JsonPosition value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<Newtonsoft::Json::JsonPosition> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<Newtonsoft::Json::JsonPosition> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(Newtonsoft::Json::JsonPosition value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 Newtonsoft::Json::JsonPosition System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, Newtonsoft::Json::JsonPosition value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(Newtonsoft::Json::JsonPosition value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, Newtonsoft::Json::JsonPosition value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(Newtonsoft::Json::JsonPosition value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4094 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<MidiParser::MidiEvent> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<MidiParser::MidiEvent>
constexpr operator  System::Collections::Generic::IList_1<MidiParser::MidiEvent>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<MidiParser::MidiEvent>
constexpr operator  System::Collections::Generic::ICollection_1<MidiParser::MidiEvent>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<MidiParser::MidiEvent>
constexpr operator  System::Collections::Generic::IEnumerable_1<MidiParser::MidiEvent>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<MidiParser::MidiEvent>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<MidiParser::MidiEvent>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<MidiParser::MidiEvent>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<MidiParser::MidiEvent>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<MidiParser::MidiEvent> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<MidiParser::MidiEvent> value) ;

constexpr System::Collections::Generic::IList_1<MidiParser::MidiEvent> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 MidiParser::MidiEvent __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 MidiParser::MidiEvent __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<MidiParser::MidiEvent>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<MidiParser::MidiEvent> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<MidiParser::MidiEvent> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 MidiParser::MidiEvent get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(MidiParser::MidiEvent value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<MidiParser::MidiEvent> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<MidiParser::MidiEvent> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(MidiParser::MidiEvent value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 MidiParser::MidiEvent System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, MidiParser::MidiEvent value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(MidiParser::MidiEvent value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, MidiParser::MidiEvent value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(MidiParser::MidiEvent value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4102 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::ResourceManagement::Util::ObjectInitializationData __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::ResourceManagement::Util::ObjectInitializationData __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ResourceManagement::Util::ObjectInitializationData get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::ResourceManagement::Util::ObjectInitializationData value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::ResourceManagement::Util::ObjectInitializationData> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::ResourceManagement::Util::ObjectInitializationData> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::ResourceManagement::Util::ObjectInitializationData value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ResourceManagement::Util::ObjectInitializationData System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::ResourceManagement::Util::ObjectInitializationData value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::ResourceManagement::Util::ObjectInitializationData value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::ResourceManagement::Util::ObjectInitializationData value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::ResourceManagement::Util::ObjectInitializationData value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4119 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::RaycastHit2D> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::RaycastHit2D>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::RaycastHit2D>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::RaycastHit2D>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::RaycastHit2D>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::RaycastHit2D>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::RaycastHit2D>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::RaycastHit2D>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::RaycastHit2D>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::RaycastHit2D>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::RaycastHit2D>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::RaycastHit2D> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::RaycastHit2D> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::RaycastHit2D> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::RaycastHit2D __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::RaycastHit2D __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::RaycastHit2D>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::RaycastHit2D> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::RaycastHit2D> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::RaycastHit2D get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::RaycastHit2D value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::RaycastHit2D> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::RaycastHit2D> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::RaycastHit2D value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::RaycastHit2D System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::RaycastHit2D value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::RaycastHit2D value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::RaycastHit2D value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::RaycastHit2D value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4125 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::UIElements::UIR::RenderChainTextEntry> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::RenderChainTextEntry>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::RenderChainTextEntry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UIR::RenderChainTextEntry>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UIR::RenderChainTextEntry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::RenderChainTextEntry>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::RenderChainTextEntry>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UIR::RenderChainTextEntry>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UIR::RenderChainTextEntry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UIR::RenderChainTextEntry>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UIR::RenderChainTextEntry>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::RenderChainTextEntry> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::RenderChainTextEntry> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::RenderChainTextEntry> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::UIElements::UIR::RenderChainTextEntry __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::UIElements::UIR::RenderChainTextEntry __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::RenderChainTextEntry>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::RenderChainTextEntry> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::RenderChainTextEntry> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UIR::RenderChainTextEntry get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::UIR::RenderChainTextEntry value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::UIR::RenderChainTextEntry> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UIR::RenderChainTextEntry> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::UIR::RenderChainTextEntry value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UIR::RenderChainTextEntry System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::UIElements::UIR::RenderChainTextEntry value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::UIElements::UIR::RenderChainTextEntry value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::UIElements::UIR::RenderChainTextEntry value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::UIElements::UIR::RenderChainTextEntry value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4127 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::UIElements::RuleMatcher> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::RuleMatcher>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::RuleMatcher>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::RuleMatcher>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::RuleMatcher>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::RuleMatcher>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::RuleMatcher>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::RuleMatcher>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::RuleMatcher>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::RuleMatcher>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::RuleMatcher>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::UIElements::RuleMatcher> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::UIElements::RuleMatcher> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::UIElements::RuleMatcher> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::UIElements::RuleMatcher __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::UIElements::RuleMatcher __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::UIElements::RuleMatcher>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::UIElements::RuleMatcher> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::UIElements::RuleMatcher> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::RuleMatcher get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::RuleMatcher value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::RuleMatcher> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::RuleMatcher> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::RuleMatcher value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::RuleMatcher System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::UIElements::RuleMatcher value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::UIElements::RuleMatcher value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::UIElements::RuleMatcher value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::UIElements::RuleMatcher value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4135 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::UIElements::StyleSheets::StylePropertyValue __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::UIElements::StyleSheets::StylePropertyValue __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::StyleSheets::StylePropertyValue get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::StyleSheets::StylePropertyValue value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::StyleSheets::StylePropertyValue> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::StyleSheets::StylePropertyValue> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::StyleSheets::StylePropertyValue value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::StyleSheets::StylePropertyValue System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::UIElements::StyleSheets::StylePropertyValue value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::UIElements::StyleSheets::StylePropertyValue value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::UIElements::StyleSheets::StylePropertyValue value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::UIElements::StyleSheets::StylePropertyValue value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4137 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::UIElements::StyleSelectorPart> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSelectorPart>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSelectorPart>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::StyleSelectorPart>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::StyleSelectorPart>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSelectorPart>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSelectorPart>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::StyleSelectorPart>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::StyleSelectorPart>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::StyleSelectorPart>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::StyleSelectorPart>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSelectorPart> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSelectorPart> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSelectorPart> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::UIElements::StyleSelectorPart __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::UIElements::StyleSelectorPart __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSelectorPart>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSelectorPart> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSelectorPart> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::StyleSelectorPart get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::StyleSelectorPart value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::StyleSelectorPart> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::StyleSelectorPart> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::StyleSelectorPart value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::StyleSelectorPart System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::UIElements::StyleSelectorPart value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::UIElements::StyleSelectorPart value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::UIElements::StyleSelectorPart value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::UIElements::StyleSelectorPart value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4138 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4139 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::UIElements::StyleSheets::StyleValue> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::StyleValue>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::StyleValue>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::StyleSheets::StyleValue>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::StyleSheets::StyleValue>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::StyleValue>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::StyleValue>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::StyleSheets::StyleValue>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::StyleSheets::StyleValue>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::StyleSheets::StyleValue>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::StyleSheets::StyleValue>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::StyleValue> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::StyleValue> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::StyleValue> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::UIElements::StyleSheets::StyleValue __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::UIElements::StyleSheets::StyleValue __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::StyleValue>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::StyleValue> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::StyleValue> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::StyleSheets::StyleValue get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::StyleSheets::StyleValue value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::StyleSheets::StyleValue> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::StyleSheets::StyleValue> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::StyleSheets::StyleValue value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::StyleSheets::StyleValue System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::UIElements::StyleSheets::StyleValue value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::UIElements::StyleSheets::StyleValue value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::UIElements::StyleSheets::StyleValue value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::UIElements::StyleSheets::StyleValue value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4140 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::UIElements::StyleSheets::StyleValueManaged __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::UIElements::StyleSheets::StyleValueManaged __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::StyleSheets::StyleValueManaged get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::StyleSheets::StyleValueManaged value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::StyleSheets::StyleValueManaged> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::StyleSheets::StyleValueManaged> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::StyleSheets::StyleValueManaged value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::StyleSheets::StyleValueManaged System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::UIElements::StyleSheets::StyleValueManaged value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::UIElements::StyleSheets::StyleValueManaged value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::UIElements::StyleSheets::StyleValueManaged value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::UIElements::StyleSheets::StyleValueManaged value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4141 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::UIElements::StyleVariable> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleVariable>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleVariable>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::StyleVariable>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::StyleVariable>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleVariable>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::StyleVariable>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::StyleVariable>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::StyleVariable>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::StyleVariable>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::StyleVariable>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleVariable> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleVariable> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleVariable> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::UIElements::StyleVariable __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::UIElements::StyleVariable __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleVariable>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleVariable> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::UIElements::StyleVariable> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::StyleVariable get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::StyleVariable value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::StyleVariable> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::StyleVariable> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::StyleVariable value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::StyleVariable System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::UIElements::StyleVariable value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::UIElements::StyleVariable value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::UIElements::StyleVariable value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::UIElements::StyleVariable value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4142 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::Rendering::SubMeshDescriptor> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::Rendering::SubMeshDescriptor>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::Rendering::SubMeshDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::Rendering::SubMeshDescriptor>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::Rendering::SubMeshDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::Rendering::SubMeshDescriptor>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::Rendering::SubMeshDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::Rendering::SubMeshDescriptor>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::Rendering::SubMeshDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Rendering::SubMeshDescriptor>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Rendering::SubMeshDescriptor>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::Rendering::SubMeshDescriptor> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::Rendering::SubMeshDescriptor> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::Rendering::SubMeshDescriptor> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::Rendering::SubMeshDescriptor __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::Rendering::SubMeshDescriptor __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::Rendering::SubMeshDescriptor>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::Rendering::SubMeshDescriptor> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::Rendering::SubMeshDescriptor> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Rendering::SubMeshDescriptor get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::Rendering::SubMeshDescriptor value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::Rendering::SubMeshDescriptor> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::Rendering::SubMeshDescriptor> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::Rendering::SubMeshDescriptor value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Rendering::SubMeshDescriptor System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::Rendering::SubMeshDescriptor value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::Rendering::SubMeshDescriptor value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::Rendering::SubMeshDescriptor value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::Rendering::SubMeshDescriptor value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4165 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<HoudiniEngineUnity::TransformData> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<HoudiniEngineUnity::TransformData>
constexpr operator  System::Collections::Generic::IList_1<HoudiniEngineUnity::TransformData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<HoudiniEngineUnity::TransformData>
constexpr operator  System::Collections::Generic::ICollection_1<HoudiniEngineUnity::TransformData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<HoudiniEngineUnity::TransformData>
constexpr operator  System::Collections::Generic::IEnumerable_1<HoudiniEngineUnity::TransformData>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<HoudiniEngineUnity::TransformData>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<HoudiniEngineUnity::TransformData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<HoudiniEngineUnity::TransformData>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<HoudiniEngineUnity::TransformData>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<HoudiniEngineUnity::TransformData> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<HoudiniEngineUnity::TransformData> value) ;

constexpr System::Collections::Generic::IList_1<HoudiniEngineUnity::TransformData> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 HoudiniEngineUnity::TransformData __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 HoudiniEngineUnity::TransformData __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<HoudiniEngineUnity::TransformData>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<HoudiniEngineUnity::TransformData> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<HoudiniEngineUnity::TransformData> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 HoudiniEngineUnity::TransformData get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(HoudiniEngineUnity::TransformData value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<HoudiniEngineUnity::TransformData> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<HoudiniEngineUnity::TransformData> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(HoudiniEngineUnity::TransformData value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 HoudiniEngineUnity::TransformData System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, HoudiniEngineUnity::TransformData value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(HoudiniEngineUnity::TransformData value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, HoudiniEngineUnity::TransformData value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(HoudiniEngineUnity::TransformData value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4166 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::TreeInstance> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::TreeInstance>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::TreeInstance>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::TreeInstance>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::TreeInstance>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::TreeInstance>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::TreeInstance>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::TreeInstance>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::TreeInstance>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::TreeInstance>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::TreeInstance>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::TreeInstance> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::TreeInstance> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::TreeInstance> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::TreeInstance __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::TreeInstance __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::TreeInstance>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::TreeInstance> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::TreeInstance> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::TreeInstance get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::TreeInstance value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::TreeInstance> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::TreeInstance> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::TreeInstance value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::TreeInstance System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::TreeInstance value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::TreeInstance value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::TreeInstance value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::TreeInstance value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4171 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::InputSystem::XR::UsageHint> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::InputSystem::XR::UsageHint>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::InputSystem::XR::UsageHint>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::XR::UsageHint>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::XR::UsageHint>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::XR::UsageHint>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::XR::UsageHint>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::XR::UsageHint>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::XR::UsageHint>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::XR::UsageHint>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::XR::UsageHint>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::InputSystem::XR::UsageHint> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::InputSystem::XR::UsageHint> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::InputSystem::XR::UsageHint> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::InputSystem::XR::UsageHint __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::InputSystem::XR::UsageHint __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::InputSystem::XR::UsageHint>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::InputSystem::XR::UsageHint> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::InputSystem::XR::UsageHint> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::XR::UsageHint get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::InputSystem::XR::UsageHint value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::InputSystem::XR::UsageHint> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::XR::UsageHint> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::InputSystem::XR::UsageHint value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::XR::UsageHint System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::InputSystem::XR::UsageHint value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::InputSystem::XR::UsageHint value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::InputSystem::XR::UsageHint value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::InputSystem::XR::UsageHint value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4177 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<System::Security::Cryptography::X509Certificates::X509ChainStatus> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<System::Security::Cryptography::X509Certificates::X509ChainStatus>
constexpr operator  System::Collections::Generic::IList_1<System::Security::Cryptography::X509Certificates::X509ChainStatus>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::Security::Cryptography::X509Certificates::X509ChainStatus>
constexpr operator  System::Collections::Generic::ICollection_1<System::Security::Cryptography::X509Certificates::X509ChainStatus>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::Security::Cryptography::X509Certificates::X509ChainStatus>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::Security::Cryptography::X509Certificates::X509ChainStatus>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::Security::Cryptography::X509Certificates::X509ChainStatus>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::Security::Cryptography::X509Certificates::X509ChainStatus>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::Security::Cryptography::X509Certificates::X509ChainStatus>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::Security::Cryptography::X509Certificates::X509ChainStatus>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<System::Security::Cryptography::X509Certificates::X509ChainStatus> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<System::Security::Cryptography::X509Certificates::X509ChainStatus> value) ;

constexpr System::Collections::Generic::IList_1<System::Security::Cryptography::X509Certificates::X509ChainStatus> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 System::Security::Cryptography::X509Certificates::X509ChainStatus __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 System::Security::Cryptography::X509Certificates::X509ChainStatus __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<System::Security::Cryptography::X509Certificates::X509ChainStatus>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<System::Security::Cryptography::X509Certificates::X509ChainStatus> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<System::Security::Cryptography::X509Certificates::X509ChainStatus> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Security::Cryptography::X509Certificates::X509ChainStatus get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::Security::Cryptography::X509Certificates::X509ChainStatus value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::Security::Cryptography::X509Certificates::X509ChainStatus> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::Security::Cryptography::X509Certificates::X509ChainStatus> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::Security::Cryptography::X509Certificates::X509ChainStatus value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Security::Cryptography::X509Certificates::X509ChainStatus System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, System::Security::Cryptography::X509Certificates::X509ChainStatus value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(System::Security::Cryptography::X509Certificates::X509ChainStatus value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, System::Security::Cryptography::X509Certificates::X509ChainStatus value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(System::Security::Cryptography::X509Certificates::X509ChainStatus value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4178 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::InputSystem::XR::XRFeatureDescriptor __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::InputSystem::XR::XRFeatureDescriptor __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::XR::XRFeatureDescriptor get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::InputSystem::XR::XRFeatureDescriptor value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::InputSystem::XR::XRFeatureDescriptor> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::XR::XRFeatureDescriptor> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::InputSystem::XR::XRFeatureDescriptor value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::XR::XRFeatureDescriptor System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::InputSystem::XR::XRFeatureDescriptor value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::InputSystem::XR::XRFeatureDescriptor value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::InputSystem::XR::XRFeatureDescriptor value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::InputSystem::XR::XRFeatureDescriptor value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4182 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::Timeline::UnityEngine__Timeline__AnimationOutputWeightProcessor__WeightInfo value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4184 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData>
constexpr operator  System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData>
constexpr operator  System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData>
constexpr operator  System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> value) ;

constexpr System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 GlobalNamespace::GlobalNamespace__BeatLine__HighlightData __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 GlobalNamespace::GlobalNamespace__BeatLine__HighlightData __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__BeatLine__HighlightData get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(GlobalNamespace::GlobalNamespace__BeatLine__HighlightData value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__BeatLine__HighlightData> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(GlobalNamespace::GlobalNamespace__BeatLine__HighlightData value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__BeatLine__HighlightData System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, GlobalNamespace::GlobalNamespace__BeatLine__HighlightData value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(GlobalNamespace::GlobalNamespace__BeatLine__HighlightData value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, GlobalNamespace::GlobalNamespace__BeatLine__HighlightData value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(GlobalNamespace::GlobalNamespace__BeatLine__HighlightData value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4205 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::UnityEngine__BeforeRenderHelper__OrderBlock value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4206 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__BitmapAllocator32__Page value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4210 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::UnityEngine__Camera__RenderRequest> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UnityEngine__Camera__RenderRequest>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UnityEngine__Camera__RenderRequest>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UnityEngine__Camera__RenderRequest>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UnityEngine__Camera__RenderRequest>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UnityEngine__Camera__RenderRequest>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UnityEngine__Camera__RenderRequest>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UnityEngine__Camera__RenderRequest>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UnityEngine__Camera__RenderRequest>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UnityEngine__Camera__RenderRequest>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UnityEngine__Camera__RenderRequest>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::UnityEngine__Camera__RenderRequest> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::UnityEngine__Camera__RenderRequest> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::UnityEngine__Camera__RenderRequest> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::UnityEngine__Camera__RenderRequest __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::UnityEngine__Camera__RenderRequest __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::UnityEngine__Camera__RenderRequest>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::UnityEngine__Camera__RenderRequest> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::UnityEngine__Camera__RenderRequest> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UnityEngine__Camera__RenderRequest get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UnityEngine__Camera__RenderRequest value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UnityEngine__Camera__RenderRequest> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UnityEngine__Camera__RenderRequest> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UnityEngine__Camera__RenderRequest value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UnityEngine__Camera__RenderRequest System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::UnityEngine__Camera__RenderRequest value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::UnityEngine__Camera__RenderRequest value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::UnityEngine__Camera__RenderRequest value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::UnityEngine__Camera__RenderRequest value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4214 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<Zenject::Zenject__DisposableManager__DisposableInfo> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<Zenject::Zenject__DisposableManager__DisposableInfo>
constexpr operator  System::Collections::Generic::IList_1<Zenject::Zenject__DisposableManager__DisposableInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<Zenject::Zenject__DisposableManager__DisposableInfo>
constexpr operator  System::Collections::Generic::ICollection_1<Zenject::Zenject__DisposableManager__DisposableInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<Zenject::Zenject__DisposableManager__DisposableInfo>
constexpr operator  System::Collections::Generic::IEnumerable_1<Zenject::Zenject__DisposableManager__DisposableInfo>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<Zenject::Zenject__DisposableManager__DisposableInfo>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<Zenject::Zenject__DisposableManager__DisposableInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<Zenject::Zenject__DisposableManager__DisposableInfo>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<Zenject::Zenject__DisposableManager__DisposableInfo>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<Zenject::Zenject__DisposableManager__DisposableInfo> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<Zenject::Zenject__DisposableManager__DisposableInfo> value) ;

constexpr System::Collections::Generic::IList_1<Zenject::Zenject__DisposableManager__DisposableInfo> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 Zenject::Zenject__DisposableManager__DisposableInfo __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 Zenject::Zenject__DisposableManager__DisposableInfo __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<Zenject::Zenject__DisposableManager__DisposableInfo>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<Zenject::Zenject__DisposableManager__DisposableInfo> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<Zenject::Zenject__DisposableManager__DisposableInfo> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 Zenject::Zenject__DisposableManager__DisposableInfo get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(Zenject::Zenject__DisposableManager__DisposableInfo value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<Zenject::Zenject__DisposableManager__DisposableInfo> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<Zenject::Zenject__DisposableManager__DisposableInfo> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(Zenject::Zenject__DisposableManager__DisposableInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 Zenject::Zenject__DisposableManager__DisposableInfo System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, Zenject::Zenject__DisposableManager__DisposableInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(Zenject::Zenject__DisposableManager__DisposableInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, Zenject::Zenject__DisposableManager__DisposableInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(Zenject::Zenject__DisposableManager__DisposableInfo value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4216 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair>
constexpr operator  System::Collections::Generic::IList_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair>
constexpr operator  System::Collections::Generic::ICollection_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair>
constexpr operator  System::Collections::Generic::IEnumerable_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> value) ;

constexpr System::Collections::Generic::IList_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(Zenject::Zenject__DisposeBlock__SpawnedObjectPoolPair value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4223 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::UIElements::UnityEngine__UIElements__FocusController__FocusedElement value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4227 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition>
constexpr operator  System::Collections::Generic::IList_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition>
constexpr operator  System::Collections::Generic::ICollection_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition>
constexpr operator  System::Collections::Generic::IEnumerable_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> value) ;

constexpr System::Collections::Generic::IList_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(Tayx::Graphy::Tayx__Graphy__GraphyDebugger__DebugCondition value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4235 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDCollectionDescriptor value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4236 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HID__HIDElementDescriptor value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4237 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::InputSystem::HID::UnityEngine__InputSystem__HID__HIDParser__HIDReportData value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4240 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::InputSystem::UnityEngine__InputSystem__InputActionMap__BindingOverrideJson value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4241 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::InputSystem::Layouts::UnityEngine__InputSystem__Layouts__InputControlLayout__ControlItem value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4242 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::UIElements::UnityEngine__UIElements__InternalTreeView__TreeViewItemWrapper value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4251 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue>
constexpr operator  System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue>
constexpr operator  System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue>
constexpr operator  System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> value) ;

constexpr System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(GlobalNamespace::GlobalNamespace__MultiplierValuesRecorder__MultiplierValue value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4256 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition>
constexpr operator  System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition>
constexpr operator  System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition>
constexpr operator  System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> value) ;

constexpr System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__DeferredPassthroughMeshAddition value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4257 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry>
constexpr operator  System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry>
constexpr operator  System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry>
constexpr operator  System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> value) ;

constexpr System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(GlobalNamespace::GlobalNamespace__OVRPassthroughLayer__SerializedSurfaceGeometry value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4260 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor>
constexpr operator  System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor>
constexpr operator  System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor>
constexpr operator  System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> value) ;

constexpr System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(GlobalNamespace::GlobalNamespace__OVRSpatialAnchor__UnboundAnchor value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4267 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit>
constexpr operator  System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit>
constexpr operator  System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit>
constexpr operator  System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> value) ;

constexpr System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(GlobalNamespace::GlobalNamespace__PSVR2Helper__HeadsetHapticFrequencyLimit value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4268 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog>
constexpr operator  System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog>
constexpr operator  System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog>
constexpr operator  System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> value) ;

constexpr System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(GlobalNamespace::GlobalNamespace__PackedPlayModeBuildLogs__RuntimeBuildLog value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4269 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast>
constexpr operator  System::Collections::Generic::IList_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast>
constexpr operator  System::Collections::Generic::ICollection_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast>
constexpr operator  System::Collections::Generic::IEnumerable_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> value) ;

constexpr System::Collections::Generic::IList_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(VRUIControls::VRUIControls__PhysicsRaycasterWithCache__CachedRaycast value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4287 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__RenderChain__RenderNodeData value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4288 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::ResourceManagement::UnityEngine__ResourceManagement__ResourceManager__DeferredCallbackRegisterRequest value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4293 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction>
constexpr operator  System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction>
constexpr operator  System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction>
constexpr operator  System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> value) ;

constexpr System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(GlobalNamespace::GlobalNamespace__SynchronizedActionQueue__SynchronizedAction value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4300 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::UIElements::UnityEngine__UIElements__TemplateAsset__AttributeOverride value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4301 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::TextCore::Text::UnityEngine__TextCore__Text__TextSettings__FontReferenceMap value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4302 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame>
constexpr operator  System::Collections::Generic::IList_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame>
constexpr operator  System::Collections::Generic::ICollection_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame>
constexpr operator  System::Collections::Generic::IEnumerable_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> value) ;

constexpr System::Collections::Generic::IList_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(TMPro::SpriteAssetUtilities::TMPro__SpriteAssetUtilities__TexturePacker_JsonArray__Frame value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4303 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::UIElements::UnityEngine__UIElements__TextureRegistry__TextureInfo value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4306 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::SpatialTracking::UnityEngine__SpatialTracking__TrackedPoseDriverDataDescription__PoseData value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4307 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::UIElements::UnityEngine__UIElements__TreeView__TreeViewItemWrapper value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4308 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::UIElements::UIR::Implementation::UnityEngine__UIElements__UIR__Implementation__UIRStylePainter__Entry value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4309 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToFree value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4310 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::UIElements::UIR::UnityEngine__UIElements__UIR__UIRenderDevice__AllocToUpdate value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4311 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::UnityEngine__UnitySynchronizationContext__WorkRequest value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4313 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotDefinition value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4314 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::UIElements::UnityEngine__UIElements__VisualTreeAsset__SlotUsageEntry value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4315 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>
constexpr operator  System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>
constexpr operator  System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>
constexpr operator  System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> value) ;

constexpr System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(GlobalNamespace::GlobalNamespace__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4317 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher>
constexpr operator  System::Collections::Generic::IList_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher>
constexpr operator  System::Collections::Generic::ICollection_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher>
constexpr operator  System::Collections::Generic::IEnumerable_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> value) ;

constexpr System::Collections::Generic::IList_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(GlobalNamespace::UnityEngine__InputSystem__Layouts__InputControlLayout__Collection__LayoutMatcher value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 4831 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<System::Int32Enum> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<System::Int32Enum>
constexpr operator  System::Collections::Generic::IList_1<System::Int32Enum>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::Int32Enum>
constexpr operator  System::Collections::Generic::ICollection_1<System::Int32Enum>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::Int32Enum>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::Int32Enum>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::Int32Enum>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::Int32Enum>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::Int32Enum>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::Int32Enum>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<System::Int32Enum> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<System::Int32Enum> value) ;

constexpr System::Collections::Generic::IList_1<System::Int32Enum> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 System::Int32Enum __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 System::Int32Enum __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<System::Int32Enum>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<System::Int32Enum> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<System::Int32Enum> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Int32Enum get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::Int32Enum value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::Int32Enum> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::Int32Enum> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::Int32Enum value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Int32Enum System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, System::Int32Enum value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(System::Int32Enum value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, System::Int32Enum value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(System::Int32Enum value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 5803 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<HoudiniEngineUnity::HAPI_GeoInfo> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<HoudiniEngineUnity::HAPI_GeoInfo>
constexpr operator  System::Collections::Generic::IList_1<HoudiniEngineUnity::HAPI_GeoInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<HoudiniEngineUnity::HAPI_GeoInfo>
constexpr operator  System::Collections::Generic::ICollection_1<HoudiniEngineUnity::HAPI_GeoInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<HoudiniEngineUnity::HAPI_GeoInfo>
constexpr operator  System::Collections::Generic::IEnumerable_1<HoudiniEngineUnity::HAPI_GeoInfo>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<HoudiniEngineUnity::HAPI_GeoInfo>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<HoudiniEngineUnity::HAPI_GeoInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<HoudiniEngineUnity::HAPI_GeoInfo>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<HoudiniEngineUnity::HAPI_GeoInfo>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<HoudiniEngineUnity::HAPI_GeoInfo> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<HoudiniEngineUnity::HAPI_GeoInfo> value) ;

constexpr System::Collections::Generic::IList_1<HoudiniEngineUnity::HAPI_GeoInfo> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 HoudiniEngineUnity::HAPI_GeoInfo __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 HoudiniEngineUnity::HAPI_GeoInfo __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<HoudiniEngineUnity::HAPI_GeoInfo>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<HoudiniEngineUnity::HAPI_GeoInfo> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<HoudiniEngineUnity::HAPI_GeoInfo> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 HoudiniEngineUnity::HAPI_GeoInfo get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(HoudiniEngineUnity::HAPI_GeoInfo value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<HoudiniEngineUnity::HAPI_GeoInfo> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<HoudiniEngineUnity::HAPI_GeoInfo> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(HoudiniEngineUnity::HAPI_GeoInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 HoudiniEngineUnity::HAPI_GeoInfo System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, HoudiniEngineUnity::HAPI_GeoInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(HoudiniEngineUnity::HAPI_GeoInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, HoudiniEngineUnity::HAPI_GeoInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(HoudiniEngineUnity::HAPI_GeoInfo value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 5822 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::XR::OpenXR::Input::UnityEngine__XR__OpenXR__Input__OpenXRInput__SerializedBinding value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 5824 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData>
constexpr operator  System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData>
constexpr operator  System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData>
constexpr operator  System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> value) ;

constexpr System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(GlobalNamespace::GlobalNamespace__PlayerStatisticsViewController__StatsScopeData value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 5971 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::ICollection_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> value) ;

constexpr System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType> __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType> __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType> get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType>> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType> System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(System::Collections::Generic::KeyValuePair_2<UnityEngine::ProBuilder::Edge,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 5972 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IList_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::ICollection_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IEnumerable_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> value) ;

constexpr System::Collections::Generic::IList_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(IntervalTree::RangeValuePair_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 5973 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<Zenject::Zenject__PoolableManager__PoolableInfo> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<Zenject::Zenject__PoolableManager__PoolableInfo>
constexpr operator  System::Collections::Generic::IList_1<Zenject::Zenject__PoolableManager__PoolableInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<Zenject::Zenject__PoolableManager__PoolableInfo>
constexpr operator  System::Collections::Generic::ICollection_1<Zenject::Zenject__PoolableManager__PoolableInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<Zenject::Zenject__PoolableManager__PoolableInfo>
constexpr operator  System::Collections::Generic::IEnumerable_1<Zenject::Zenject__PoolableManager__PoolableInfo>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<Zenject::Zenject__PoolableManager__PoolableInfo>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<Zenject::Zenject__PoolableManager__PoolableInfo>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<Zenject::Zenject__PoolableManager__PoolableInfo>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<Zenject::Zenject__PoolableManager__PoolableInfo>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<Zenject::Zenject__PoolableManager__PoolableInfo> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<Zenject::Zenject__PoolableManager__PoolableInfo> value) ;

constexpr System::Collections::Generic::IList_1<Zenject::Zenject__PoolableManager__PoolableInfo> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 Zenject::Zenject__PoolableManager__PoolableInfo __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 Zenject::Zenject__PoolableManager__PoolableInfo __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<Zenject::Zenject__PoolableManager__PoolableInfo>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<Zenject::Zenject__PoolableManager__PoolableInfo> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<Zenject::Zenject__PoolableManager__PoolableInfo> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 Zenject::Zenject__PoolableManager__PoolableInfo get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(Zenject::Zenject__PoolableManager__PoolableInfo value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<Zenject::Zenject__PoolableManager__PoolableInfo> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<Zenject::Zenject__PoolableManager__PoolableInfo> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(Zenject::Zenject__PoolableManager__PoolableInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 Zenject::Zenject__PoolableManager__PoolableInfo System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, Zenject::Zenject__PoolableManager__PoolableInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(Zenject::Zenject__PoolableManager__PoolableInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, Zenject::Zenject__PoolableManager__PoolableInfo value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(Zenject::Zenject__PoolableManager__PoolableInfo value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 6255 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<System::Collections::DictionaryEntry> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<System::Collections::DictionaryEntry>
constexpr operator  System::Collections::Generic::IList_1<System::Collections::DictionaryEntry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::Collections::DictionaryEntry>
constexpr operator  System::Collections::Generic::ICollection_1<System::Collections::DictionaryEntry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::Collections::DictionaryEntry>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::Collections::DictionaryEntry>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::Collections::DictionaryEntry>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::Collections::DictionaryEntry>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::Collections::DictionaryEntry>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::Collections::DictionaryEntry>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<System::Collections::DictionaryEntry> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<System::Collections::DictionaryEntry> value) ;

constexpr System::Collections::Generic::IList_1<System::Collections::DictionaryEntry> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 System::Collections::DictionaryEntry __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 System::Collections::DictionaryEntry __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<System::Collections::DictionaryEntry>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<System::Collections::DictionaryEntry> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<System::Collections::DictionaryEntry> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::DictionaryEntry get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::Collections::DictionaryEntry value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::Collections::DictionaryEntry> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::Collections::DictionaryEntry> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::Collections::DictionaryEntry value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::DictionaryEntry System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, System::Collections::DictionaryEntry value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(System::Collections::DictionaryEntry value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, System::Collections::DictionaryEntry value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(System::Collections::DictionaryEntry value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 6256 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::ICollection_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> value) ;

constexpr System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType> __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType> __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType> get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType>> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType> System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(System::Collections::Generic::KeyValuePair_2<int32_t,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 6262 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType> __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType> __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType> get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType>> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType> System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::Timeline::UnityEngine__Timeline__IntervalTree_1__Entry<::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 6263 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>>
constexpr operator  System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>>
constexpr operator  System::Collections::Generic::ICollection_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> value) ;

constexpr System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue>> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(System::Collections::Generic::KeyValuePair_2<::bs_hook::Il2CppWrapperType,UnityEngine::InputSystem::Utilities::UnityEngine__InputSystem__Utilities__JsonParser__JsonValue> value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 6264 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<Unity::Collections::NativeArray_1<uint16_t>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<Unity::Collections::NativeArray_1<uint16_t>>
constexpr operator  System::Collections::Generic::IList_1<Unity::Collections::NativeArray_1<uint16_t>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<Unity::Collections::NativeArray_1<uint16_t>>
constexpr operator  System::Collections::Generic::ICollection_1<Unity::Collections::NativeArray_1<uint16_t>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<Unity::Collections::NativeArray_1<uint16_t>>
constexpr operator  System::Collections::Generic::IEnumerable_1<Unity::Collections::NativeArray_1<uint16_t>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<Unity::Collections::NativeArray_1<uint16_t>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<Unity::Collections::NativeArray_1<uint16_t>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<Unity::Collections::NativeArray_1<uint16_t>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<Unity::Collections::NativeArray_1<uint16_t>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<Unity::Collections::NativeArray_1<uint16_t>> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<Unity::Collections::NativeArray_1<uint16_t>> value) ;

constexpr System::Collections::Generic::IList_1<Unity::Collections::NativeArray_1<uint16_t>> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 Unity::Collections::NativeArray_1<uint16_t> __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 Unity::Collections::NativeArray_1<uint16_t> __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<Unity::Collections::NativeArray_1<uint16_t>>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<Unity::Collections::NativeArray_1<uint16_t>> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<Unity::Collections::NativeArray_1<uint16_t>> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 Unity::Collections::NativeArray_1<uint16_t> get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(Unity::Collections::NativeArray_1<uint16_t> value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<Unity::Collections::NativeArray_1<uint16_t>> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<Unity::Collections::NativeArray_1<uint16_t>> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(Unity::Collections::NativeArray_1<uint16_t> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 Unity::Collections::NativeArray_1<uint16_t> System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, Unity::Collections::NativeArray_1<uint16_t> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(Unity::Collections::NativeArray_1<uint16_t> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, Unity::Collections::NativeArray_1<uint16_t> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(Unity::Collections::NativeArray_1<uint16_t> value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 6265 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>>
constexpr operator  System::Collections::Generic::IList_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>>
constexpr operator  System::Collections::Generic::ICollection_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>>
constexpr operator  System::Collections::Generic::IEnumerable_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> value) ;

constexpr System::Collections::Generic::IList_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex> __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex> __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex> get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex> value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex>> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex> System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(Unity::Collections::NativeArray_1<UnityEngine::UIElements::Vertex> value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 6266 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> value) ;

constexpr System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(GlobalNamespace::GlobalNamespace__AsyncCachedLoader_2__ScheduledTask<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 6267 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge> __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge> __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge> get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge> value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge>> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge> System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::ProBuilder::Edge> value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 6268 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t> __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t> __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t> get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t> value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t> System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,int32_t> value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 6269 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::ICollection_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> value) ;

constexpr System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(UnityEngine::ProBuilder::SimpleTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 6270 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>
constexpr operator  System::Collections::Generic::IList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>
constexpr operator  System::Collections::Generic::ICollection_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> value) ;

constexpr System::Collections::Generic::IList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t> __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t> __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t> get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t> value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t>> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t> System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(System::ValueTuple_2<::bs_hook::Il2CppWrapperType,int32_t> value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 6271 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::ICollection_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> value) ;

constexpr System::Collections::Generic::IList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType>> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(System::ValueTuple_2<::bs_hook::Il2CppWrapperType,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 6272 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>>
constexpr operator  System::Collections::Generic::IList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>>
constexpr operator  System::Collections::Generic::ICollection_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> value) ;

constexpr System::Collections::Generic::IList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3> __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3> __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3> get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3> value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3>> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3> System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(System::ValueTuple_2<::bs_hook::Il2CppWrapperType,UnityEngine::Vector3> value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 6273 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IList_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::ICollection_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> value) ;

constexpr System::Collections::Generic::IList_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType> __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType> __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType> get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType>> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType> System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(System::ValueTuple_3<System::Int32Enum,System::Int32Enum,::bs_hook::Il2CppWrapperType> value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 6274 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<System::UInt16Enum> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<System::UInt16Enum>
constexpr operator  System::Collections::Generic::IList_1<System::UInt16Enum>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<System::UInt16Enum>
constexpr operator  System::Collections::Generic::ICollection_1<System::UInt16Enum>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<System::UInt16Enum>
constexpr operator  System::Collections::Generic::IEnumerable_1<System::UInt16Enum>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<System::UInt16Enum>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<System::UInt16Enum>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<System::UInt16Enum>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<System::UInt16Enum>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<System::UInt16Enum> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<System::UInt16Enum> value) ;

constexpr System::Collections::Generic::IList_1<System::UInt16Enum> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 System::UInt16Enum __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 System::UInt16Enum __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<System::UInt16Enum>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<System::UInt16Enum> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<System::UInt16Enum> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::UInt16Enum get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(System::UInt16Enum value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<System::UInt16Enum> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<System::UInt16Enum> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(System::UInt16Enum value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 System::UInt16Enum System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, System::UInt16Enum value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(System::UInt16Enum value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, System::UInt16Enum value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(System::UInt16Enum value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3800))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3800), inst: 6275 })
// CS Name: System.Collections.ObjectModel.ReadOnlyCollection`1
class CORDL_TYPE ReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> : public ::bs_hook::Il2CppWrapperType {
public:
// Declarations
/// @brief Convert operator to System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair>
constexpr operator  System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair>
constexpr operator  System::Collections::Generic::ICollection_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair>
constexpr operator  System::Collections::Generic::IEnumerable_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair>() const noexcept;

/// @brief Convert operator to System::Collections::IEnumerable
constexpr operator  System::Collections::IEnumerable() const noexcept;

/// @brief Convert operator to System::Collections::IList
constexpr operator  System::Collections::IList() const noexcept;

/// @brief Convert operator to System::Collections::ICollection
constexpr operator  System::Collections::ICollection() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair>
constexpr operator  System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair>() const noexcept;

/// @brief Convert operator to System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair>
constexpr operator  System::Collections::Generic::IReadOnlyCollection_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair>() const noexcept;

/// @brief The size of the true reference type
static constexpr auto  __CORDL_REFERENCE_TYPE_SIZE{0x20};

virtual ~ReadOnlyCollection_1() = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: " const&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) noexcept = default;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
constexpr ReadOnlyCollection_1(ReadOnlyCollection_1&& ) noexcept = default;

// Ctor Parameters [CppParam { name: "ptr", ty: "void*", modifiers: "", def_value: None }]
constexpr explicit ReadOnlyCollection_1(void* ptr) noexcept : ::bs_hook::Il2CppWrapperType(ptr) {
}


  constexpr ReadOnlyCollection_1& operator=(std::nullptr_t) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = nullptr;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(void* o) noexcept {
    this->::bs_hook::Il2CppWrapperType::instance = o;
    return *this;
  };

  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1&& o) noexcept = default;
  constexpr ReadOnlyCollection_1& operator=(ReadOnlyCollection_1 const& o) noexcept = default;
                


// Fields

 System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> __declspec(property(get=__get_list, put=__set_list))  list;

constexpr void __set_list(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> value) ;

constexpr System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> __get_list() const;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=__get__syncRoot, put=__set__syncRoot))  _syncRoot;

constexpr void __set__syncRoot(::bs_hook::Il2CppWrapperType value) ;

constexpr ::bs_hook::Il2CppWrapperType __get__syncRoot() const;


// Properties

 int32_t __declspec(property(get=get_Count))  Count;

 GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair __declspec(property(get=get_Item))  Item;

 bool __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly))  System_Collections_Generic_ICollection_T__IsReadOnly;

 GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item))  System_Collections_Generic_IList_T__Item;

 bool __declspec(property(get=System_Collections_ICollection_get_IsSynchronized))  System_Collections_ICollection_IsSynchronized;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_ICollection_get_SyncRoot))  System_Collections_ICollection_SyncRoot;

 bool __declspec(property(get=System_Collections_IList_get_IsFixedSize))  System_Collections_IList_IsFixedSize;

 bool __declspec(property(get=System_Collections_IList_get_IsReadOnly))  System_Collections_IList_IsReadOnly;

 ::bs_hook::Il2CppWrapperType __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item))  System_Collections_IList_Item;


// Methods

// Ctor Parameters [CppParam { name: "list", ty: "System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair>", modifiers: "", def_value: None }]
explicit ReadOnlyCollection_1(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
 void _ctor(System::Collections::Generic::IList_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair get_Item(int32_t index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool Contains(GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void CopyTo(::ArrayW<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> array, int32_t index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::Generic::IEnumerator_1<GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair> GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t IndexOf(GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair System_Collections_Generic_IList_T__get_Item(int32_t index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__set_Item(int32_t index, GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Add(GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__Insert(int32_t index, GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_Generic_ICollection_T__Remove(GlobalNamespace::GlobalNamespace__SelectRegionViewController__RegionToLocalizationKeyPair value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_Generic_IList_T__RemoveAt(int32_t index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
 System::Collections::IEnumerator System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_ICollection_CopyTo(System::Array array, int32_t index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 ::bs_hook::Il2CppWrapperType System_Collections_IList_get_Item(int32_t index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_set_Item(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_Add(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static bool IsCompatibleObject(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
 bool System_Collections_IList_Contains(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
 int32_t System_Collections_IList_IndexOf(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Insert(int32_t index, ::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_Remove(::bs_hook::Il2CppWrapperType value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
 void System_Collections_IList_RemoveAt(int32_t index) ;

static constexpr bool __CORDL_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(System::Collections::ObjectModel::ReadOnlyCollection_1, "System.Collections.ObjectModel", "ReadOnlyCollection`1");
